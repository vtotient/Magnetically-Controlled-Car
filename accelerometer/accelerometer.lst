0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1069 (Apr 23 2015) (MSVC)
0000              4   ; This file was generated Wed Mar 21 16:25:33 2018
0000              5   ;--------------------------------------------------------
                  5   $name accelerometer
                  6   $optc51 --model-small
                  7   $printf_float
0000              9            R_DSEG    segment data
0000             10            R_CSEG    segment code
0000             11            R_BSEG    segment bit
0000             12            R_XSEG    segment xdata
0000             13            R_PSEG    segment xdata
0000             14            R_ISEG    segment idata
0000             15            R_OSEG    segment data overlay
0000             16            BIT_BANK  segment data overlay
0000             17            R_HOME    segment code
0000             18            R_GSINIT  segment code
0000             19            R_IXSEG   segment xdata
0000             20            R_CONST   segment code
0000             21            R_XINIT   segment code
0000             22            R_DINIT   segment code
0000             23   
0000             24   ;--------------------------------------------------------
0000             25   ; Public variables in this module
0000             26   ;--------------------------------------------------------
0000             27            public _InitPinADC_PARM_2
0000             28            public _main
0000             29            public _Volts_at_Pin
0000             30            public _ADC_at_Pin
0000             31            public _InitPinADC
0000             32            public _waitms
0000             33            public _Timer3us
0000             34            public _InitADC
0000             35            public __c51_external_startup
0000             36   ;--------------------------------------------------------
0000             37   ; Special Function Registers
0000             38   ;--------------------------------------------------------
0000             39   _ACC            DATA 0xe0
0000             40   _ADC0ASAH       DATA 0xb6
0000             41   _ADC0ASAL       DATA 0xb5
0000             42   _ADC0ASCF       DATA 0xa1
0000             43   _ADC0ASCT       DATA 0xc7
0000             44   _ADC0CF0        DATA 0xbc
0000             45   _ADC0CF1        DATA 0xb9
0000             46   _ADC0CF2        DATA 0xdf
0000             47   _ADC0CN0        DATA 0xe8
0000             48   _ADC0CN1        DATA 0xb2
0000             49   _ADC0CN2        DATA 0xb3
0000             50   _ADC0GTH        DATA 0xc4
0000             51   _ADC0GTL        DATA 0xc3
0000             52   _ADC0H          DATA 0xbe
0000             53   _ADC0L          DATA 0xbd
0000             54   _ADC0LTH        DATA 0xc6
0000             55   _ADC0LTL        DATA 0xc5
0000             56   _ADC0MX         DATA 0xbb
0000             57   _B              DATA 0xf0
0000             58   _CKCON0         DATA 0x8e
0000             59   _CKCON1         DATA 0xa6
0000             60   _CLEN0          DATA 0xc6
0000             61   _CLIE0          DATA 0xc7
0000             62   _CLIF0          DATA 0xe8
0000             63   _CLKSEL         DATA 0xa9
0000             64   _CLOUT0         DATA 0xd1
0000             65   _CLU0CF         DATA 0xb1
0000             66   _CLU0FN         DATA 0xaf
0000             67   _CLU0MX         DATA 0x84
0000             68   _CLU1CF         DATA 0xb3
0000             69   _CLU1FN         DATA 0xb2
0000             70   _CLU1MX         DATA 0x85
0000             71   _CLU2CF         DATA 0xb6
0000             72   _CLU2FN         DATA 0xb5
0000             73   _CLU2MX         DATA 0x91
0000             74   _CLU3CF         DATA 0xbf
0000             75   _CLU3FN         DATA 0xbe
0000             76   _CLU3MX         DATA 0xae
0000             77   _CMP0CN0        DATA 0x9b
0000             78   _CMP0CN1        DATA 0x99
0000             79   _CMP0MD         DATA 0x9d
0000             80   _CMP0MX         DATA 0x9f
0000             81   _CMP1CN0        DATA 0xbf
0000             82   _CMP1CN1        DATA 0xac
0000             83   _CMP1MD         DATA 0xab
0000             84   _CMP1MX         DATA 0xaa
0000             85   _CRC0CN0        DATA 0xce
0000             86   _CRC0CN1        DATA 0x86
0000             87   _CRC0CNT        DATA 0xd3
0000             88   _CRC0DAT        DATA 0xcb
0000             89   _CRC0FLIP       DATA 0xcf
0000             90   _CRC0IN         DATA 0xca
0000             91   _CRC0ST         DATA 0xd2
0000             92   _DAC0CF0        DATA 0x91
0000             93   _DAC0CF1        DATA 0x92
0000             94   _DAC0H          DATA 0x85
0000             95   _DAC0L          DATA 0x84
0000             96   _DAC1CF0        DATA 0x93
0000             97   _DAC1CF1        DATA 0x94
0000             98   _DAC1H          DATA 0x8a
0000             99   _DAC1L          DATA 0x89
0000            100   _DAC2CF0        DATA 0x95
0000            101   _DAC2CF1        DATA 0x96
0000            102   _DAC2H          DATA 0x8c
0000            103   _DAC2L          DATA 0x8b
0000            104   _DAC3CF0        DATA 0x9a
0000            105   _DAC3CF1        DATA 0x9c
0000            106   _DAC3H          DATA 0x8e
0000            107   _DAC3L          DATA 0x8d
0000            108   _DACGCF0        DATA 0x88
0000            109   _DACGCF1        DATA 0x98
0000            110   _DACGCF2        DATA 0xa2
0000            111   _DERIVID        DATA 0xad
0000            112   _DEVICEID       DATA 0xb5
0000            113   _DPH            DATA 0x83
0000            114   _DPL            DATA 0x82
0000            115   _EIE1           DATA 0xe6
0000            116   _EIE2           DATA 0xf3
0000            117   _EIP1           DATA 0xbb
0000            118   _EIP1H          DATA 0xee
0000            119   _EIP2           DATA 0xed
0000            120   _EIP2H          DATA 0xf6
0000            121   _EMI0CN         DATA 0xe7
0000            122   _FLKEY          DATA 0xb7
0000            123   _HFO0CAL        DATA 0xc7
0000            124   _HFO1CAL        DATA 0xd6
0000            125   _HFOCN          DATA 0xef
0000            126   _I2C0ADM        DATA 0xff
0000            127   _I2C0CN0        DATA 0xba
0000            128   _I2C0DIN        DATA 0xbc
0000            129   _I2C0DOUT       DATA 0xbb
0000            130   _I2C0FCN0       DATA 0xad
0000            131   _I2C0FCN1       DATA 0xab
0000            132   _I2C0FCT        DATA 0xf5
0000            133   _I2C0SLAD       DATA 0xbd
0000            134   _I2C0STAT       DATA 0xb9
0000            135   _IE             DATA 0xa8
0000            136   _IP             DATA 0xb8
0000            137   _IPH            DATA 0xf2
0000            138   _IT01CF         DATA 0xe4
0000            139   _LFO0CN         DATA 0xb1
0000            140   _P0             DATA 0x80
0000            141   _P0MASK         DATA 0xfe
0000            142   _P0MAT          DATA 0xfd
0000            143   _P0MDIN         DATA 0xf1
0000            144   _P0MDOUT        DATA 0xa4
0000            145   _P0SKIP         DATA 0xd4
0000            146   _P1             DATA 0x90
0000            147   _P1MASK         DATA 0xee
0000            148   _P1MAT          DATA 0xed
0000            149   _P1MDIN         DATA 0xf2
0000            150   _P1MDOUT        DATA 0xa5
0000            151   _P1SKIP         DATA 0xd5
0000            152   _P2             DATA 0xa0
0000            153   _P2MASK         DATA 0xfc
0000            154   _P2MAT          DATA 0xfb
0000            155   _P2MDIN         DATA 0xf3
0000            156   _P2MDOUT        DATA 0xa6
0000            157   _P2SKIP         DATA 0xcc
0000            158   _P3             DATA 0xb0
0000            159   _P3MDIN         DATA 0xf4
0000            160   _P3MDOUT        DATA 0x9c
0000            161   _PCA0CENT       DATA 0x9e
0000            162   _PCA0CLR        DATA 0x9c
0000            163   _PCA0CN0        DATA 0xd8
0000            164   _PCA0CPH0       DATA 0xfc
0000            165   _PCA0CPH1       DATA 0xea
0000            166   _PCA0CPH2       DATA 0xec
0000            167   _PCA0CPH3       DATA 0xf5
0000            168   _PCA0CPH4       DATA 0x85
0000            169   _PCA0CPH5       DATA 0xde
0000            170   _PCA0CPL0       DATA 0xfb
0000            171   _PCA0CPL1       DATA 0xe9
0000            172   _PCA0CPL2       DATA 0xeb
0000            173   _PCA0CPL3       DATA 0xf4
0000            174   _PCA0CPL4       DATA 0x84
0000            175   _PCA0CPL5       DATA 0xdd
0000            176   _PCA0CPM0       DATA 0xda
0000            177   _PCA0CPM1       DATA 0xdb
0000            178   _PCA0CPM2       DATA 0xdc
0000            179   _PCA0CPM3       DATA 0xae
0000            180   _PCA0CPM4       DATA 0xaf
0000            181   _PCA0CPM5       DATA 0xcc
0000            182   _PCA0H          DATA 0xfa
0000            183   _PCA0L          DATA 0xf9
0000            184   _PCA0MD         DATA 0xd9
0000            185   _PCA0POL        DATA 0x96
0000            186   _PCA0PWM        DATA 0xf7
0000            187   _PCON0          DATA 0x87
0000            188   _PCON1          DATA 0xcd
0000            189   _PFE0CN         DATA 0xc1
0000            190   _PRTDRV         DATA 0xf6
0000            191   _PSCTL          DATA 0x8f
0000            192   _PSTAT0         DATA 0xaa
0000            193   _PSW            DATA 0xd0
0000            194   _REF0CN         DATA 0xd1
0000            195   _REG0CN         DATA 0xc9
0000            196   _REVID          DATA 0xb6
0000            197   _RSTSRC         DATA 0xef
0000            198   _SBCON1         DATA 0x94
0000            199   _SBRLH1         DATA 0x96
0000            200   _SBRLL1         DATA 0x95
0000            201   _SBUF           DATA 0x99
0000            202   _SBUF0          DATA 0x99
0000            203   _SBUF1          DATA 0x92
0000            204   _SCON           DATA 0x98
0000            205   _SCON0          DATA 0x98
0000            206   _SCON1          DATA 0xc8
0000            207   _SFRPAGE        DATA 0xa7
0000            208   _SFRPGCN        DATA 0xbc
0000            209   _SFRSTACK       DATA 0xd7
0000            210   _SMB0ADM        DATA 0xd6
0000            211   _SMB0ADR        DATA 0xd7
0000            212   _SMB0CF         DATA 0xc1
0000            213   _SMB0CN0        DATA 0xc0
0000            214   _SMB0DAT        DATA 0xc2
0000            215   _SMB0FCN0       DATA 0xc3
0000            216   _SMB0FCN1       DATA 0xc4
0000            217   _SMB0FCT        DATA 0xef
0000            218   _SMB0RXLN       DATA 0xc5
0000            219   _SMB0TC         DATA 0xac
0000            220   _SMOD1          DATA 0x93
0000            221   _SP             DATA 0x81
0000            222   _SPI0CFG        DATA 0xa1
0000            223   _SPI0CKR        DATA 0xa2
0000            224   _SPI0CN0        DATA 0xf8
0000            225   _SPI0DAT        DATA 0xa3
0000            226   _SPI0FCN0       DATA 0x9a
0000            227   _SPI0FCN1       DATA 0x9b
0000            228   _SPI0FCT        DATA 0xf7
0000            229   _SPI0PCF        DATA 0xdf
0000            230   _TCON           DATA 0x88
0000            231   _TH0            DATA 0x8c
0000            232   _TH1            DATA 0x8d
0000            233   _TL0            DATA 0x8a
0000            234   _TL1            DATA 0x8b
0000            235   _TMOD           DATA 0x89
0000            236   _TMR2CN0        DATA 0xc8
0000            237   _TMR2CN1        DATA 0xfd
0000            238   _TMR2H          DATA 0xcf
0000            239   _TMR2L          DATA 0xce
0000            240   _TMR2RLH        DATA 0xcb
0000            241   _TMR2RLL        DATA 0xca
0000            242   _TMR3CN0        DATA 0x91
0000            243   _TMR3CN1        DATA 0xfe
0000            244   _TMR3H          DATA 0x95
0000            245   _TMR3L          DATA 0x94
0000            246   _TMR3RLH        DATA 0x93
0000            247   _TMR3RLL        DATA 0x92
0000            248   _TMR4CN0        DATA 0x98
0000            249   _TMR4CN1        DATA 0xff
0000            250   _TMR4H          DATA 0xa5
0000            251   _TMR4L          DATA 0xa4
0000            252   _TMR4RLH        DATA 0xa3
0000            253   _TMR4RLL        DATA 0xa2
0000            254   _TMR5CN0        DATA 0xc0
0000            255   _TMR5CN1        DATA 0xf1
0000            256   _TMR5H          DATA 0xd5
0000            257   _TMR5L          DATA 0xd4
0000            258   _TMR5RLH        DATA 0xd3
0000            259   _TMR5RLL        DATA 0xd2
0000            260   _UART0PCF       DATA 0xd9
0000            261   _UART1FCN0      DATA 0x9d
0000            262   _UART1FCN1      DATA 0xd8
0000            263   _UART1FCT       DATA 0xfa
0000            264   _UART1LIN       DATA 0x9e
0000            265   _UART1PCF       DATA 0xda
0000            266   _VDM0CN         DATA 0xff
0000            267   _WDTCN          DATA 0x97
0000            268   _XBR0           DATA 0xe1
0000            269   _XBR1           DATA 0xe2
0000            270   _XBR2           DATA 0xe3
0000            271   _XOSC0CN        DATA 0x86
0000            272   _DPTR           DATA 0x8382
0000            273   _TMR2RL         DATA 0xcbca
0000            274   _TMR3RL         DATA 0x9392
0000            275   _TMR4RL         DATA 0xa3a2
0000            276   _TMR5RL         DATA 0xd3d2
0000            277   _TMR0           DATA 0x8c8a
0000            278   _TMR1           DATA 0x8d8b
0000            279   _TMR2           DATA 0xcfce
0000            280   _TMR3           DATA 0x9594
0000            281   _TMR4           DATA 0xa5a4
0000            282   _TMR5           DATA 0xd5d4
0000            283   _SBRL1          DATA 0x9695
0000            284   _PCA0           DATA 0xfaf9
0000            285   _PCA0CP0        DATA 0xfcfb
0000            286   _PCA0CP1        DATA 0xeae9
0000            287   _PCA0CP2        DATA 0xeceb
0000            288   _PCA0CP3        DATA 0xf5f4
0000            289   _PCA0CP4        DATA 0x8584
0000            290   _PCA0CP5        DATA 0xdedd
0000            291   _ADC0ASA        DATA 0xb6b5
0000            292   _ADC0GT         DATA 0xc4c3
0000            293   _ADC0           DATA 0xbebd
0000            294   _ADC0LT         DATA 0xc6c5
0000            295   _DAC0           DATA 0x8584
0000            296   _DAC1           DATA 0x8a89
0000            297   _DAC2           DATA 0x8c8b
0000            298   _DAC3           DATA 0x8e8d
0000            299   ;--------------------------------------------------------
0000            300   ; special function bits
0000            301   ;--------------------------------------------------------
0000            302   _ACC_0          BIT 0xe0
0000            303   _ACC_1          BIT 0xe1
0000            304   _ACC_2          BIT 0xe2
0000            305   _ACC_3          BIT 0xe3
0000            306   _ACC_4          BIT 0xe4
0000            307   _ACC_5          BIT 0xe5
0000            308   _ACC_6          BIT 0xe6
0000            309   _ACC_7          BIT 0xe7
0000            310   _TEMPE          BIT 0xe8
0000            311   _ADGN0          BIT 0xe9
0000            312   _ADGN1          BIT 0xea
0000            313   _ADWINT         BIT 0xeb
0000            314   _ADBUSY         BIT 0xec
0000            315   _ADINT          BIT 0xed
0000            316   _IPOEN          BIT 0xee
0000            317   _ADEN           BIT 0xef
0000            318   _B_0            BIT 0xf0
0000            319   _B_1            BIT 0xf1
0000            320   _B_2            BIT 0xf2
0000            321   _B_3            BIT 0xf3
0000            322   _B_4            BIT 0xf4
0000            323   _B_5            BIT 0xf5
0000            324   _B_6            BIT 0xf6
0000            325   _B_7            BIT 0xf7
0000            326   _C0FIF          BIT 0xe8
0000            327   _C0RIF          BIT 0xe9
0000            328   _C1FIF          BIT 0xea
0000            329   _C1RIF          BIT 0xeb
0000            330   _C2FIF          BIT 0xec
0000            331   _C2RIF          BIT 0xed
0000            332   _C3FIF          BIT 0xee
0000            333   _C3RIF          BIT 0xef
0000            334   _D1SRC0         BIT 0x88
0000            335   _D1SRC1         BIT 0x89
0000            336   _D1AMEN         BIT 0x8a
0000            337   _D01REFSL       BIT 0x8b
0000            338   _D3SRC0         BIT 0x8c
0000            339   _D3SRC1         BIT 0x8d
0000            340   _D3AMEN         BIT 0x8e
0000            341   _D23REFSL       BIT 0x8f
0000            342   _D0UDIS         BIT 0x98
0000            343   _D1UDIS         BIT 0x99
0000            344   _D2UDIS         BIT 0x9a
0000            345   _D3UDIS         BIT 0x9b
0000            346   _EX0            BIT 0xa8
0000            347   _ET0            BIT 0xa9
0000            348   _EX1            BIT 0xaa
0000            349   _ET1            BIT 0xab
0000            350   _ES0            BIT 0xac
0000            351   _ET2            BIT 0xad
0000            352   _ESPI0          BIT 0xae
0000            353   _EA             BIT 0xaf
0000            354   _PX0            BIT 0xb8
0000            355   _PT0            BIT 0xb9
0000            356   _PX1            BIT 0xba
0000            357   _PT1            BIT 0xbb
0000            358   _PS0            BIT 0xbc
0000            359   _PT2            BIT 0xbd
0000            360   _PSPI0          BIT 0xbe
0000            361   _P0_0           BIT 0x80
0000            362   _P0_1           BIT 0x81
0000            363   _P0_2           BIT 0x82
0000            364   _P0_3           BIT 0x83
0000            365   _P0_4           BIT 0x84
0000            366   _P0_5           BIT 0x85
0000            367   _P0_6           BIT 0x86
0000            368   _P0_7           BIT 0x87
0000            369   _P1_0           BIT 0x90
0000            370   _P1_1           BIT 0x91
0000            371   _P1_2           BIT 0x92
0000            372   _P1_3           BIT 0x93
0000            373   _P1_4           BIT 0x94
0000            374   _P1_5           BIT 0x95
0000            375   _P1_6           BIT 0x96
0000            376   _P1_7           BIT 0x97
0000            377   _P2_0           BIT 0xa0
0000            378   _P2_1           BIT 0xa1
0000            379   _P2_2           BIT 0xa2
0000            380   _P2_3           BIT 0xa3
0000            381   _P2_4           BIT 0xa4
0000            382   _P2_5           BIT 0xa5
0000            383   _P2_6           BIT 0xa6
0000            384   _P3_0           BIT 0xb0
0000            385   _P3_1           BIT 0xb1
0000            386   _P3_2           BIT 0xb2
0000            387   _P3_3           BIT 0xb3
0000            388   _P3_4           BIT 0xb4
0000            389   _P3_7           BIT 0xb7
0000            390   _CCF0           BIT 0xd8
0000            391   _CCF1           BIT 0xd9
0000            392   _CCF2           BIT 0xda
0000            393   _CCF3           BIT 0xdb
0000            394   _CCF4           BIT 0xdc
0000            395   _CCF5           BIT 0xdd
0000            396   _CR             BIT 0xde
0000            397   _CF             BIT 0xdf
0000            398   _PARITY         BIT 0xd0
0000            399   _F1             BIT 0xd1
0000            400   _OV             BIT 0xd2
0000            401   _RS0            BIT 0xd3
0000            402   _RS1            BIT 0xd4
0000            403   _F0             BIT 0xd5
0000            404   _AC             BIT 0xd6
0000            405   _CY             BIT 0xd7
0000            406   _RI             BIT 0x98
0000            407   _TI             BIT 0x99
0000            408   _RB8            BIT 0x9a
0000            409   _TB8            BIT 0x9b
0000            410   _REN            BIT 0x9c
0000            411   _CE             BIT 0x9d
0000            412   _SMODE          BIT 0x9e
0000            413   _RI1            BIT 0xc8
0000            414   _TI1            BIT 0xc9
0000            415   _RBX1           BIT 0xca
0000            416   _TBX1           BIT 0xcb
0000            417   _REN1           BIT 0xcc
0000            418   _PERR1          BIT 0xcd
0000            419   _OVR1           BIT 0xce
0000            420   _SI             BIT 0xc0
0000            421   _ACK            BIT 0xc1
0000            422   _ARBLOST        BIT 0xc2
0000            423   _ACKRQ          BIT 0xc3
0000            424   _STO            BIT 0xc4
0000            425   _STA            BIT 0xc5
0000            426   _TXMODE         BIT 0xc6
0000            427   _MASTER         BIT 0xc7
0000            428   _SPIEN          BIT 0xf8
0000            429   _TXNF           BIT 0xf9
0000            430   _NSSMD0         BIT 0xfa
0000            431   _NSSMD1         BIT 0xfb
0000            432   _RXOVRN         BIT 0xfc
0000            433   _MODF           BIT 0xfd
0000            434   _WCOL           BIT 0xfe
0000            435   _SPIF           BIT 0xff
0000            436   _IT0            BIT 0x88
0000            437   _IE0            BIT 0x89
0000            438   _IT1            BIT 0x8a
0000            439   _IE1            BIT 0x8b
0000            440   _TR0            BIT 0x8c
0000            441   _TF0            BIT 0x8d
0000            442   _TR1            BIT 0x8e
0000            443   _TF1            BIT 0x8f
0000            444   _T2XCLK0        BIT 0xc8
0000            445   _T2XCLK1        BIT 0xc9
0000            446   _TR2            BIT 0xca
0000            447   _T2SPLIT        BIT 0xcb
0000            448   _TF2CEN         BIT 0xcc
0000            449   _TF2LEN         BIT 0xcd
0000            450   _TF2L           BIT 0xce
0000            451   _TF2H           BIT 0xcf
0000            452   _T4XCLK0        BIT 0x98
0000            453   _T4XCLK1        BIT 0x99
0000            454   _TR4            BIT 0x9a
0000            455   _T4SPLIT        BIT 0x9b
0000            456   _TF4CEN         BIT 0x9c
0000            457   _TF4LEN         BIT 0x9d
0000            458   _TF4L           BIT 0x9e
0000            459   _TF4H           BIT 0x9f
0000            460   _T5XCLK0        BIT 0xc0
0000            461   _T5XCLK1        BIT 0xc1
0000            462   _TR5            BIT 0xc2
0000            463   _T5SPLIT        BIT 0xc3
0000            464   _TF5CEN         BIT 0xc4
0000            465   _TF5LEN         BIT 0xc5
0000            466   _TF5L           BIT 0xc6
0000            467   _TF5H           BIT 0xc7
0000            468   _RIE            BIT 0xd8
0000            469   _RXTO0          BIT 0xd9
0000            470   _RXTO1          BIT 0xda
0000            471   _RFRQ           BIT 0xdb
0000            472   _TIE            BIT 0xdc
0000            473   _TXHOLD         BIT 0xdd
0000            474   _TXNF1          BIT 0xde
0000            475   _TFRQ           BIT 0xdf
0000            476   ;--------------------------------------------------------
0000            477   ; overlayable register banks
0000            478   ;--------------------------------------------------------
0000            479            rbank0 segment data overlay
0000            480   ;--------------------------------------------------------
0000            481   ; internal ram data
0000            482   ;--------------------------------------------------------
0000            483            rseg R_DSEG
0000            484   _main_v_1_59:
0000            485            ds 8
0008            486   _main_x_volts_1_59:
0008            487            ds 4
000C            488   _main_y_volts_1_59:
000C            489            ds 4
0010            490   _main_x_1_59:
0010            491            ds 1
0011            492   _main_sloc0_1_0:
0011            493            ds 4
0015            494   ;--------------------------------------------------------
0015            495   ; overlayable items in internal ram 
0015            496   ;--------------------------------------------------------
0000            497            rseg    R_OSEG
0000            498            rseg    R_OSEG
0000            499   _InitPinADC_PARM_2:
0000            500            ds 1
0001            501            rseg    R_OSEG
0001            502   ;--------------------------------------------------------
0001            503   ; indirectly addressable internal ram data
0001            504   ;--------------------------------------------------------
0000            505            rseg R_ISEG
0000            506   ;--------------------------------------------------------
0000            507   ; absolute internal ram data
0000            508   ;--------------------------------------------------------
0000            509            DSEG
0000            510   ;--------------------------------------------------------
0000            511   ; bit data
0000            512   ;--------------------------------------------------------
0000            513            rseg R_BSEG
0000            514   ;--------------------------------------------------------
0000            515   ; paged external ram data
0000            516   ;--------------------------------------------------------
0000            517            rseg R_PSEG
0000            518   ;--------------------------------------------------------
0000            519   ; external ram data
0000            520   ;--------------------------------------------------------
0000            521            rseg R_XSEG
0000            522   ;--------------------------------------------------------
0000            523   ; absolute external ram data
0000            524   ;--------------------------------------------------------
0000            525            XSEG
0000            526   ;--------------------------------------------------------
0000            527   ; external initialized ram data
0000            528   ;--------------------------------------------------------
0000            529            rseg R_IXSEG
0000            530            rseg R_HOME
0000            531            rseg R_GSINIT
0000            532            rseg R_CSEG
0000            533   ;--------------------------------------------------------
0000            534   ; Reset entry point and interrupt vectors
0000            535   ;--------------------------------------------------------
0000            536            CSEG at 0x0000
0000 020100     537            ljmp    _crt0
0003            538   ;--------------------------------------------------------
0003            539   ; global & static initialisations
0003            540   ;--------------------------------------------------------
0000            541            rseg R_HOME
0000            542            rseg R_GSINIT
0000            543            rseg R_GSINIT
0000            544   ;--------------------------------------------------------
0000            545   ; data variables initialization
0000            546   ;--------------------------------------------------------
0000            547            rseg R_DINIT
0000            548            ; The linker places a 'ret' at the end of segment R_DINIT.
0000            549   ;--------------------------------------------------------
0000            550   ; code
0000            551   ;--------------------------------------------------------
0000            552            rseg R_CSEG
0000            553   ;------------------------------------------------------------
0000            554   ;Allocation info for local variables in function '_c51_external_startup'
0000            555   ;------------------------------------------------------------
0000            556   ;------------------------------------------------------------
0000            557   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:22: char _c51_external_startup (void)
0000            558   ;        -----------------------------------------
0000            559   ;         function _c51_external_startup
0000            560   ;        -----------------------------------------
0000            561   __c51_external_startup:
0000            562            using   0
0000            563   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:25: SFRPAGE = 0x00;
0000 75A700     564            mov     _SFRPAGE,#0x00
0003            565   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:26: WDTCN = 0xDE; //First key
0003 7597DE     566            mov     _WDTCN,#0xDE
0006            567   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:27: WDTCN = 0xAD; //Second key
0006 7597AD     568            mov     _WDTCN,#0xAD
0009            569   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:29: VDM0CN=0x80;       // enable VDD monitor
0009 75FF80     570            mov     _VDM0CN,#0x80
000C            571   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:30: RSTSRC=0x02|0x04;  // Enable reset on missing clock detector and VDD
000C 75EF06     572            mov     _RSTSRC,#0x06
000F            573   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:37: SFRPAGE = 0x10;
000F 75A710     574            mov     _SFRPAGE,#0x10
0012            575   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:38: PFE0CN  = 0x20; // SYSCLK < 75 MHz.
0012 75C120     576            mov     _PFE0CN,#0x20
0015            577   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:39: SFRPAGE = 0x00;
0015 75A700     578            mov     _SFRPAGE,#0x00
0018            579   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:60: CLKSEL = 0x00;
0018 75A900     580            mov     _CLKSEL,#0x00
001B            581   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:61: CLKSEL = 0x00;
001B 75A900     582            mov     _CLKSEL,#0x00
001E            583   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:62: while ((CLKSEL & 0x80) == 0);
001E            584   L002001?:
001E E5A9       585            mov     a,_CLKSEL
0020 30E720     586            jnb     acc.7,L002001?
0023            587   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:63: CLKSEL = 0x03;
0023 75A903     588            mov     _CLKSEL,#0x03
0026            589   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:64: CLKSEL = 0x03;
0026 75A903     590            mov     _CLKSEL,#0x03
0029            591   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:65: while ((CLKSEL & 0x80) == 0);
0029            592   L002004?:
0029 E5A9       593            mov     a,_CLKSEL
002B 30E7A0     594            jnb     acc.7,L002004?
002E            595   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:70: P0MDOUT |= 0x10; // Enable UART0 TX as push-pull output
002E 43A410     596            orl     _P0MDOUT,#0x10
0031            597   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:71: XBR0     = 0x01; // Enable UART0 on P0.4(TX) and P0.5(RX)                     
0031 75E101     598            mov     _XBR0,#0x01
0034            599   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:72: XBR1     = 0X00;
0034 75E200     600            mov     _XBR1,#0x00
0037            601   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:73: XBR2     = 0x40; // Enable crossbar and weak pull-ups
0037 75E340     602            mov     _XBR2,#0x40
003A            603   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:79: SCON0 = 0x10;
003A 759810     604            mov     _SCON0,#0x10
003D            605   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:80: TH1 = 0x100-((SYSCLK/BAUDRATE)/(2L*12L));
003D 758DE6     606            mov     _TH1,#0xE6
0040            607   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:81: TL1 = TH1;      // Init Timer1
0040 858D8B     608            mov     _TL1,_TH1
0043            609   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:82: TMOD &= ~0xf0;  // TMOD: timer 1 in 8-bit auto-reload
0043 53890F     610            anl     _TMOD,#0x0F
0046            611   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:83: TMOD |=  0x20;                       
0046 438920     612            orl     _TMOD,#0x20
0049            613   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:84: TR1 = 1; // START Timer1
0049 D28E       614            setb    _TR1
004B            615   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:85: TI = 1;  // Indicate TX0 ready
004B D299       616            setb    _TI
004D            617   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:87: EA = 0;
004D C2AF       618            clr     _EA
004F            619   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:88: return 0;
004F 758200     620            mov     dpl,#0x00
0052 22         621            ret
0053            622   ;------------------------------------------------------------
0053            623   ;Allocation info for local variables in function 'InitADC'
0053            624   ;------------------------------------------------------------
0053            625   ;------------------------------------------------------------
0053            626   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:91: void InitADC (void)
0053            627   ;        -----------------------------------------
0053            628   ;         function InitADC
0053            629   ;        -----------------------------------------
0053            630   _InitADC:
0053            631   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:93: SFRPAGE = 0x00;
0053 75A700     632            mov     _SFRPAGE,#0x00
0056            633   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:94: ADC0CN1 = 0b_10_000_000; //14-bit,  Right justified no shifting applied, perform and Accumulate 1 conversion.
0056 75B280     634            mov     _ADC0CN1,#0x80
0059            635   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:95: ADC0CF0 = 0b_11111_0_00; // SYSCLK/32
0059 75BCF8     636            mov     _ADC0CF0,#0xF8
005C            637   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:96: ADC0CF1 = 0b_0_0_011110; // Same as default for now
005C 75B91E     638            mov     _ADC0CF1,#0x1E
005F            639   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:97: ADC0CN0 = 0b_0_0_0_0_0_00_0; // Same as default for now
005F 75E800     640            mov     _ADC0CN0,#0x00
0062            641   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:98: ADC0CF2 = 0b_0_01_11111 ; // GND pin, Vref=VDD
0062 75DF3F     642            mov     _ADC0CF2,#0x3F
0065            643   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:99: ADC0CN2 = 0b_0_000_0000;  // Same as default for now. ADC0 conversion initiated on write of 1 to ADBUSY.
0065 75B300     644            mov     _ADC0CN2,#0x00
0068            645   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:100: ADEN=1; // Enable ADC
0068 D2EF       646            setb    _ADEN
006A 22         647            ret
006B            648   ;------------------------------------------------------------
006B            649   ;Allocation info for local variables in function 'Timer3us'
006B            650   ;------------------------------------------------------------
006B            651   ;us                        Allocated to registers r2 
006B            652   ;i                         Allocated to registers r3 
006B            653   ;------------------------------------------------------------
006B            654   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:104: void Timer3us(unsigned char us)
006B            655   ;        -----------------------------------------
006B            656   ;         function Timer3us
006B            657   ;        -----------------------------------------
006B            658   _Timer3us:
006B AA82       659            mov     r2,dpl
006D            660   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:109: CKCON0|=0b_0100_0000;
006D 438E40     661            orl     _CKCON0,#0x40
0070            662   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:111: TMR3RL = (-(SYSCLK)/1000000L); // Set Timer3 to overflow in 1us.
0070 7592B8     663            mov     _TMR3RL,#0xB8
0073 7593FF     664            mov     (_TMR3RL >> 8),#0xFF
0076            665   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:112: TMR3 = TMR3RL;                 // Initialize Timer3 for first overflow
0076 859294     666            mov     _TMR3,_TMR3RL
0079 859395     667            mov     (_TMR3 >> 8),(_TMR3RL >> 8)
007C            668   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:114: TMR3CN0 = 0x04;                 // Sart Timer3 and clear overflow flag
007C 759104     669            mov     _TMR3CN0,#0x04
007F            670   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:115: for (i = 0; i < us; i++)       // Count <us> overflows
007F 7B00       671            mov     r3,#0x00
0081            672   L004004?:
0081 C3         673            clr     c
0082 EB         674            mov     a,r3
0083 9A         675            subb    a,r2
0084 5001       676            jnc     L004007?
0086            677   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:117: while (!(TMR3CN0 & 0x80));  // Wait for overflow
0086            678   L004001?:
0086 E591       679            mov     a,_TMR3CN0
0088 30E7A0     680            jnb     acc.7,L004001?
008B            681   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:118: TMR3CN0 &= ~(0x80);         // Clear overflow indicator
008B 53917F     682            anl     _TMR3CN0,#0x7F
008E            683   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:115: for (i = 0; i < us; i++)       // Count <us> overflows
008E 0B         684            inc     r3
008F 8001       685            sjmp    L004004?
0091            686   L004007?:
0091            687   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:120: TMR3CN0 = 0 ;                   // Stop Timer3 and clear overflow flag
0091 759100     688            mov     _TMR3CN0,#0x00
0094 22         689            ret
0095            690   ;------------------------------------------------------------
0095            691   ;Allocation info for local variables in function 'waitms'
0095            692   ;------------------------------------------------------------
0095            693   ;ms                        Allocated to registers r2 r3 
0095            694   ;j                         Allocated to registers r4 r5 
0095            695   ;k                         Allocated to registers r6 
0095            696   ;------------------------------------------------------------
0095            697   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:123: void waitms (unsigned int ms)
0095            698   ;        -----------------------------------------
0095            699   ;         function waitms
0095            700   ;        -----------------------------------------
0095            701   _waitms:
0095 AA82       702            mov     r2,dpl
0097 AB83       703            mov     r3,dph
0099            704   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:127: for(j=0; j<ms; j++)
0099 7C00       705            mov     r4,#0x00
009B 7D00       706            mov     r5,#0x00
009D            707   L005005?:
009D C3         708            clr     c
009E EC         709            mov     a,r4
009F 9A         710            subb    a,r2
00A0 ED         711            mov     a,r5
00A1 9B         712            subb    a,r3
00A2 5001       713            jnc     L005009?
00A4            714   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:128: for (k=0; k<4; k++) Timer3us(250);
00A4 7E00       715            mov     r6,#0x00
00A6            716   L005001?:
00A6 BE04E0     717            cjne    r6,#0x04,L005018?
00A9            718   L005018?:
00A9 5001       719            jnc     L005007?
00AB 7582FA     720            mov     dpl,#0xFA
00AE C002       721            push    ar2
00B0 C003       722            push    ar3
00B2 C004       723            push    ar4
00B4 C005       724            push    ar5
00B6 C006       725            push    ar6
00B8 120100     726            lcall   _Timer3us
00BB D006       727            pop     ar6
00BD D005       728            pop     ar5
00BF D004       729            pop     ar4
00C1 D003       730            pop     ar3
00C3 D002       731            pop     ar2
00C5 0E         732            inc     r6
00C6 8001       733            sjmp    L005001?
00C8            734   L005007?:
00C8            735   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:127: for(j=0; j<ms; j++)
00C8 0C         736            inc     r4
00C9 BC0020     737            cjne    r4,#0x00,L005005?
00CC 0D         738            inc     r5
00CD 8001       739            sjmp    L005005?
00CF            740   L005009?:
00CF 22         741            ret
00D0            742   ;------------------------------------------------------------
00D0            743   ;Allocation info for local variables in function 'InitPinADC'
00D0            744   ;------------------------------------------------------------
00D0            745   ;pin_num                   Allocated with name '_InitPinADC_PARM_2'
00D0            746   ;portno                    Allocated to registers r2 
00D0            747   ;mask                      Allocated to registers r3 
00D0            748   ;------------------------------------------------------------
00D0            749   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:133: void InitPinADC (unsigned char portno, unsigned char pin_num)
00D0            750   ;        -----------------------------------------
00D0            751   ;         function InitPinADC
00D0            752   ;        -----------------------------------------
00D0            753   _InitPinADC:
00D0 AA82       754            mov     r2,dpl
00D2            755   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:137: mask=1<<pin_num;
00D2 8550F0     756            mov     b,_InitPinADC_PARM_2
00D5 05F0       757            inc     b
00D7 7401       758            mov     a,#0x01
00D9 8001       759            sjmp    L006013?
00DB            760   L006011?:
00DB 25E0       761            add     a,acc
00DD            762   L006013?:
00DD D5F0E0     763            djnz    b,L006011?
00E0 FB         764            mov     r3,a
00E1            765   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:139: SFRPAGE = 0x20;
00E1 75A720     766            mov     _SFRPAGE,#0x20
00E4            767   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:140: switch (portno)
00E4 BA0020     768            cjne    r2,#0x00,L006014?
00E7 8001       769            sjmp    L006001?
00E9            770   L006014?:
00E9 BA01A0     771            cjne    r2,#0x01,L006015?
00EC 8001       772            sjmp    L006002?
00EE            773   L006015?:
00EE            774   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:142: case 0:
00EE BA0220     775            cjne    r2,#0x02,L006005?
00F1 8001       776            sjmp    L006003?
00F3            777   L006001?:
00F3            778   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:143: P0MDIN &= (~mask); // Set pin as analog input
00F3 EB         779            mov     a,r3
00F4 F4         780            cpl     a
00F5 FA         781            mov     r2,a
00F6 52F1       782            anl     _P0MDIN,a
00F8            783   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:144: P0SKIP |= mask; // Skip Crossbar decoding for this pin
00F8 EB         784            mov     a,r3
00F9 42D4       785            orl     _P0SKIP,a
00FB            786   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:145: break;
00FB            787   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:146: case 1:
00FB 8001       788            sjmp    L006005?
00FD            789   L006002?:
00FD            790   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:147: P1MDIN &= (~mask); // Set pin as analog input
00FD EB         791            mov     a,r3
00FE F4         792            cpl     a
00FF FA         793            mov     r2,a
0100 52F2       794            anl     _P1MDIN,a
0102            795   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:148: P1SKIP |= mask; // Skip Crossbar decoding for this pin
0102 EB         796            mov     a,r3
0103 42D5       797            orl     _P1SKIP,a
0105            798   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:149: break;
0105            799   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:150: case 2:
0105 8001       800            sjmp    L006005?
0107            801   L006003?:
0107            802   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:151: P2MDIN &= (~mask); // Set pin as analog input
0107 EB         803            mov     a,r3
0108 F4         804            cpl     a
0109 FA         805            mov     r2,a
010A 52F3       806            anl     _P2MDIN,a
010C            807   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:152: P2SKIP |= mask; // Skip Crossbar decoding for this pin
010C EB         808            mov     a,r3
010D 42CC       809            orl     _P2SKIP,a
010F            810   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:156: }
010F            811   L006005?:
010F            812   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:157: SFRPAGE = 0x00;
010F 75A700     813            mov     _SFRPAGE,#0x00
0112 22         814            ret
0113            815   ;------------------------------------------------------------
0113            816   ;Allocation info for local variables in function 'ADC_at_Pin'
0113            817   ;------------------------------------------------------------
0113            818   ;pin                       Allocated to registers 
0113            819   ;------------------------------------------------------------
0113            820   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:160: unsigned int ADC_at_Pin(unsigned char pin)
0113            821   ;        -----------------------------------------
0113            822   ;         function ADC_at_Pin
0113            823   ;        -----------------------------------------
0113            824   _ADC_at_Pin:
0113 8582BB     825            mov     _ADC0MX,dpl
0116            826   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:163: ADBUSY=1;       // Dummy conversion first to select new pin
0116 D2EC       827            setb    _ADBUSY
0118            828   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:164: while (ADBUSY); // Wait for dummy conversion to finish
0118            829   L007001?:
0118 20ECA0     830            jb      _ADBUSY,L007001?
011B            831   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:165: ADBUSY = 1;     // Convert voltage at the pin
011B D2EC       832            setb    _ADBUSY
011D            833   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:166: while (ADBUSY); // Wait for conversion to complete
011D            834   L007004?:
011D 20ECE0     835            jb      _ADBUSY,L007004?
0120            836   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:167: return (ADC0);
0120 85BD82     837            mov     dpl,_ADC0
0123 85BE83     838            mov     dph,(_ADC0 >> 8)
0126 22         839            ret
0127            840   ;------------------------------------------------------------
0127            841   ;Allocation info for local variables in function 'Volts_at_Pin'
0127            842   ;------------------------------------------------------------
0127            843   ;pin                       Allocated to registers r2 
0127            844   ;------------------------------------------------------------
0127            845   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:170: float Volts_at_Pin(unsigned char pin)
0127            846   ;        -----------------------------------------
0127            847   ;         function Volts_at_Pin
0127            848   ;        -----------------------------------------
0127            849   _Volts_at_Pin:
0127            850   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:172: return ((ADC_at_Pin(pin)*VDD)/16383.0);
0127 120100     851            lcall   _ADC_at_Pin
012A 120100     852            lcall   ___uint2fs
012D AA82       853            mov     r2,dpl
012F AB83       854            mov     r3,dph
0131 ACF0       855            mov     r4,b
0133 FD         856            mov     r5,a
0134 C002       857            push    ar2
0136 C003       858            push    ar3
0138 C004       859            push    ar4
013A C005       860            push    ar5
013C 906C8B     861            mov     dptr,#0x6C8B
013F 75F053     862            mov     b,#0x53
0142 7440       863            mov     a,#0x40
0144 120100     864            lcall   ___fsmul
0147 AA82       865            mov     r2,dpl
0149 AB83       866            mov     r3,dph
014B ACF0       867            mov     r4,b
014D FD         868            mov     r5,a
014E E581       869            mov     a,sp
0150 24FC       870            add     a,#0xfc
0152 F581       871            mov     sp,a
0154 E4         872            clr     a
0155 C0E0       873            push    acc
0157 74FC       874            mov     a,#0xFC
0159 C0E0       875            push    acc
015B 747F       876            mov     a,#0x7F
015D C0E0       877            push    acc
015F 7446       878            mov     a,#0x46
0161 C0E0       879            push    acc
0163 8A82       880            mov     dpl,r2
0165 8B83       881            mov     dph,r3
0167 8CF0       882            mov     b,r4
0169 ED         883            mov     a,r5
016A 120100     884            lcall   ___fsdiv
016D AA82       885            mov     r2,dpl
016F AB83       886            mov     r3,dph
0171 ACF0       887            mov     r4,b
0173 FD         888            mov     r5,a
0174 E581       889            mov     a,sp
0176 24FC       890            add     a,#0xfc
0178 F581       891            mov     sp,a
017A 8A82       892            mov     dpl,r2
017C 8B83       893            mov     dph,r3
017E 8CF0       894            mov     b,r4
0180 ED         895            mov     a,r5
0181 22         896            ret
0182            897   ;------------------------------------------------------------
0182            898   ;Allocation info for local variables in function 'main'
0182            899   ;------------------------------------------------------------
0182            900   ;v                         Allocated with name '_main_v_1_59'
0182            901   ;x_volts                   Allocated with name '_main_x_volts_1_59'
0182            902   ;y_volts                   Allocated with name '_main_y_volts_1_59'
0182            903   ;x                         Allocated with name '_main_x_1_59'
0182            904   ;y                         Allocated to registers r7 
0182            905   ;sloc0                     Allocated with name '_main_sloc0_1_0'
0182            906   ;------------------------------------------------------------
0182            907   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:175: void main (void)
0182            908   ;        -----------------------------------------
0182            909   ;         function main
0182            910   ;        -----------------------------------------
0182            911   _main:
0182            912   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:181: waitms(500); // Give PuTTy a chance to start before sending
0182 9001F4     913            mov     dptr,#0x01F4
0185 120100     914            lcall   _waitms
0188            915   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:182: printf("\x1b[2J"); // Clear screen using ANSI escape sequence.
0188 7420       916            mov     a,#__str_0
018A C0E0       917            push    acc
018C 74BA       918            mov     a,#(__str_0 >> 8)
018E C0E0       919            push    acc
0190 7480       920            mov     a,#0x80
0192 C0E0       921            push    acc
0194 120100     922            lcall   _printf
0197 1581       923            dec     sp
0199 1581       924            dec     sp
019B 1581       925            dec     sp
019D            926   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:184: InitPinADC(0, 1); // Configure P2.2 as analog input
019D 755001     927            mov     _InitPinADC_PARM_2,#0x01
01A0 758200     928            mov     dpl,#0x00
01A3 120100     929            lcall   _InitPinADC
01A6            930   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:185: InitPinADC(0, 2); // Configure P2.3 as analog input
01A6 755002     931            mov     _InitPinADC_PARM_2,#0x02
01A9 758200     932            mov     dpl,#0x00
01AC 120100     933            lcall   _InitPinADC
01AF            934   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:186: InitADC();
01AF 120100     935            lcall   _InitADC
01B2            936   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:188: while(1)
01B2            937   L009018?:
01B2            938   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:191: v[0] = Volts_at_Pin(QFP32_MUX_P0_1); // x
01B2 758200     939            mov     dpl,#0x00
01B5 120100     940            lcall   _Volts_at_Pin
01B8 AA82       941            mov     r2,dpl
01BA AB83       942            mov     r3,dph
01BC ACF0       943            mov     r4,b
01BE FD         944            mov     r5,a
01BF 8A80       945            mov     _main_v_1_59,r2
01C1 8B81       946            mov     (_main_v_1_59 + 1),r3
01C3 8C82       947            mov     (_main_v_1_59 + 2),r4
01C5 8D83       948            mov     (_main_v_1_59 + 3),r5
01C7            949   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:192: v[1] = Volts_at_Pin(QFP32_MUX_P0_2); // y
01C7 758201     950            mov     dpl,#0x01
01CA 120100     951            lcall   _Volts_at_Pin
01CD 8582A0     952            mov     _main_sloc0_1_0,dpl
01D0 8583A1     953            mov     (_main_sloc0_1_0 + 1),dph
01D3 85F0A2     954            mov     (_main_sloc0_1_0 + 2),b
01D6 F5A3       955            mov     (_main_sloc0_1_0 + 3),a
01D8 85A084     956            mov     (_main_v_1_59 + 0x0004),_main_sloc0_1_0
01DB 85A185     957            mov     ((_main_v_1_59 + 0x0004) + 1),(_main_sloc0_1_0 + 1)
01DE 85A286     958            mov     ((_main_v_1_59 + 0x0004) + 2),(_main_sloc0_1_0 + 2)
01E1 85A387     959            mov     ((_main_v_1_59 + 0x0004) + 3),(_main_sloc0_1_0 + 3)
01E4            960   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:195: x_volts = 16.0 * (v[0] - MID_VOLTS) / (HIGH_VOLTS_X - LOW_VOLTS_X);
01E4 7485       961            mov     a,#0x85
01E6 C0E0       962            push    acc
01E8 74EB       963            mov     a,#0xEB
01EA C0E0       964            push    acc
01EC 74D1       965            mov     a,#0xD1
01EE C0E0       966            push    acc
01F0 743F       967            mov     a,#0x3F
01F2 C0E0       968            push    acc
01F4 858082     969            mov     dpl,_main_v_1_59
01F7 858183     970            mov     dph,(_main_v_1_59 + 1)
01FA 8582F0     971            mov     b,(_main_v_1_59 + 2)
01FD E583       972            mov     a,(_main_v_1_59 + 3)
01FF 120100     973            lcall   ___fssub
0202 AE82       974            mov     r6,dpl
0204 AF83       975            mov     r7,dph
0206 AAF0       976            mov     r2,b
0208 FB         977            mov     r3,a
0209 E581       978            mov     a,sp
020B 24FC       979            add     a,#0xfc
020D F581       980            mov     sp,a
020F C006       981            push    ar6
0211 C007       982            push    ar7
0213 C002       983            push    ar2
0215 C003       984            push    ar3
0217 900000     985            mov     dptr,#0x0000
021A 75F080     986            mov     b,#0x80
021D 7441       987            mov     a,#0x41
021F 120100     988            lcall   ___fsmul
0222 AA82       989            mov     r2,dpl
0224 AB83       990            mov     r3,dph
0226 ACF0       991            mov     r4,b
0228 FD         992            mov     r5,a
0229 E581       993            mov     a,sp
022B 24FC       994            add     a,#0xfc
022D F581       995            mov     sp,a
022F 740A       996            mov     a,#0x0A
0231 C0E0       997            push    acc
0233 74D7       998            mov     a,#0xD7
0235 C0E0       999            push    acc
0237 7423      1000            mov     a,#0x23
0239 C0E0      1001            push    acc
023B 743F      1002            mov     a,#0x3F
023D C0E0      1003            push    acc
023F 8A82      1004            mov     dpl,r2
0241 8B83      1005            mov     dph,r3
0243 8CF0      1006            mov     b,r4
0245 ED        1007            mov     a,r5
0246 120100    1008            lcall   ___fsdiv
0249 8582D0    1009            mov     _main_x_volts_1_59,dpl
024C 8583D1    1010            mov     (_main_x_volts_1_59 + 1),dph
024F 85F0D2    1011            mov     (_main_x_volts_1_59 + 2),b
0252 F5D3      1012            mov     (_main_x_volts_1_59 + 3),a
0254 E581      1013            mov     a,sp
0256 24FC      1014            add     a,#0xfc
0258 F581      1015            mov     sp,a
025A           1016   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:196: y_volts = -16.0 * (v[1] - MID_VOLTS) / (HIGH_VOLTS_Y - LOW_VOLTS_Y);
025A 7485      1017            mov     a,#0x85
025C C0E0      1018            push    acc
025E 74EB      1019            mov     a,#0xEB
0260 C0E0      1020            push    acc
0262 74D1      1021            mov     a,#0xD1
0264 C0E0      1022            push    acc
0266 743F      1023            mov     a,#0x3F
0268 C0E0      1024            push    acc
026A 85A082    1025            mov     dpl,_main_sloc0_1_0
026D 85A183    1026            mov     dph,(_main_sloc0_1_0 + 1)
0270 85A2F0    1027            mov     b,(_main_sloc0_1_0 + 2)
0273 E5A3      1028            mov     a,(_main_sloc0_1_0 + 3)
0275 120100    1029            lcall   ___fssub
0278 AE82      1030            mov     r6,dpl
027A AF83      1031            mov     r7,dph
027C AAF0      1032            mov     r2,b
027E FB        1033            mov     r3,a
027F E581      1034            mov     a,sp
0281 24FC      1035            add     a,#0xfc
0283 F581      1036            mov     sp,a
0285 C006      1037            push    ar6
0287 C007      1038            push    ar7
0289 C002      1039            push    ar2
028B C003      1040            push    ar3
028D 900000    1041            mov     dptr,#0x0000
0290 75F080    1042            mov     b,#0x80
0293 74C1      1043            mov     a,#0xC1
0295 120100    1044            lcall   ___fsmul
0298 AA82      1045            mov     r2,dpl
029A AB83      1046            mov     r3,dph
029C ACF0      1047            mov     r4,b
029E FD        1048            mov     r5,a
029F E581      1049            mov     a,sp
02A1 24FC      1050            add     a,#0xfc
02A3 F581      1051            mov     sp,a
02A5 74AE      1052            mov     a,#0xAE
02A7 C0E0      1053            push    acc
02A9 7447      1054            mov     a,#0x47
02AB C0E0      1055            push    acc
02AD 7421      1056            mov     a,#0x21
02AF C0E0      1057            push    acc
02B1 743F      1058            mov     a,#0x3F
02B3 C0E0      1059            push    acc
02B5 8A82      1060            mov     dpl,r2
02B7 8B83      1061            mov     dph,r3
02B9 8CF0      1062            mov     b,r4
02BB ED        1063            mov     a,r5
02BC 120100    1064            lcall   ___fsdiv
02BF 858220    1065            mov     _main_y_volts_1_59,dpl
02C2 858321    1066            mov     (_main_y_volts_1_59 + 1),dph
02C5 85F022    1067            mov     (_main_y_volts_1_59 + 2),b
02C8 F523      1068            mov     (_main_y_volts_1_59 + 3),a
02CA E581      1069            mov     a,sp
02CC 24FC      1070            add     a,#0xfc
02CE F581      1071            mov     sp,a
02D0           1072   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:199: if (x_volts < 3 && x_volts > -3) x_volts = 0;
02D0 E4        1073            clr     a
02D1 C0E0      1074            push    acc
02D3 C0E0      1075            push    acc
02D5 7440      1076            mov     a,#0x40
02D7 C0E0      1077            push    acc
02D9 C0E0      1078            push    acc
02DB 85D082    1079            mov     dpl,_main_x_volts_1_59
02DE 85D183    1080            mov     dph,(_main_x_volts_1_59 + 1)
02E1 85D2F0    1081            mov     b,(_main_x_volts_1_59 + 2)
02E4 E5D3      1082            mov     a,(_main_x_volts_1_59 + 3)
02E6 120100    1083            lcall   ___fslt
02E9 AE82      1084            mov     r6,dpl
02EB E581      1085            mov     a,sp
02ED 24FC      1086            add     a,#0xfc
02EF F581      1087            mov     sp,a
02F1 EE        1088            mov     a,r6
02F2 6001      1089            jz      L009002?
02F4 E4        1090            clr     a
02F5 C0E0      1091            push    acc
02F7 C0E0      1092            push    acc
02F9 7440      1093            mov     a,#0x40
02FB C0E0      1094            push    acc
02FD 74C0      1095            mov     a,#0xC0
02FF C0E0      1096            push    acc
0301 85D082    1097            mov     dpl,_main_x_volts_1_59
0304 85D183    1098            mov     dph,(_main_x_volts_1_59 + 1)
0307 85D2F0    1099            mov     b,(_main_x_volts_1_59 + 2)
030A E5D3      1100            mov     a,(_main_x_volts_1_59 + 3)
030C 120100    1101            lcall   ___fsgt
030F AE82      1102            mov     r6,dpl
0311 E581      1103            mov     a,sp
0313 24FC      1104            add     a,#0xfc
0315 F581      1105            mov     sp,a
0317 EE        1106            mov     a,r6
0318 6001      1107            jz      L009002?
031A 75D000    1108            mov     _main_x_volts_1_59,#0x00
031D 75D100    1109            mov     (_main_x_volts_1_59 + 1),#0x00
0320 75D200    1110            mov     (_main_x_volts_1_59 + 2),#0x00
0323 75D300    1111            mov     (_main_x_volts_1_59 + 3),#0x00
0326           1112   L009002?:
0326           1113   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:200: if (y_volts < 3 && y_volts > -3) y_volts = 0;
0326 E4        1114            clr     a
0327 C0E0      1115            push    acc
0329 C0E0      1116            push    acc
032B 7440      1117            mov     a,#0x40
032D C0E0      1118            push    acc
032F C0E0      1119            push    acc
0331 852082    1120            mov     dpl,_main_y_volts_1_59
0334 852183    1121            mov     dph,(_main_y_volts_1_59 + 1)
0337 8522F0    1122            mov     b,(_main_y_volts_1_59 + 2)
033A E523      1123            mov     a,(_main_y_volts_1_59 + 3)
033C 120100    1124            lcall   ___fslt
033F AE82      1125            mov     r6,dpl
0341 E581      1126            mov     a,sp
0343 24FC      1127            add     a,#0xfc
0345 F581      1128            mov     sp,a
0347 EE        1129            mov     a,r6
0348 6001      1130            jz      L009005?
034A E4        1131            clr     a
034B C0E0      1132            push    acc
034D C0E0      1133            push    acc
034F 7440      1134            mov     a,#0x40
0351 C0E0      1135            push    acc
0353 74C0      1136            mov     a,#0xC0
0355 C0E0      1137            push    acc
0357 852082    1138            mov     dpl,_main_y_volts_1_59
035A 852183    1139            mov     dph,(_main_y_volts_1_59 + 1)
035D 8522F0    1140            mov     b,(_main_y_volts_1_59 + 2)
0360 E523      1141            mov     a,(_main_y_volts_1_59 + 3)
0362 120100    1142            lcall   ___fsgt
0365 AE82      1143            mov     r6,dpl
0367 E581      1144            mov     a,sp
0369 24FC      1145            add     a,#0xfc
036B F581      1146            mov     sp,a
036D EE        1147            mov     a,r6
036E 6001      1148            jz      L009005?
0370 752000    1149            mov     _main_y_volts_1_59,#0x00
0373 752100    1150            mov     (_main_y_volts_1_59 + 1),#0x00
0376 752200    1151            mov     (_main_y_volts_1_59 + 2),#0x00
0379 752300    1152            mov     (_main_y_volts_1_59 + 3),#0x00
037C           1153   L009005?:
037C           1154   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:202: if (x_volts > 9) x_volts = 9;
037C E4        1155            clr     a
037D C0E0      1156            push    acc
037F C0E0      1157            push    acc
0381 7410      1158            mov     a,#0x10
0383 C0E0      1159            push    acc
0385 7441      1160            mov     a,#0x41
0387 C0E0      1161            push    acc
0389 85D082    1162            mov     dpl,_main_x_volts_1_59
038C 85D183    1163            mov     dph,(_main_x_volts_1_59 + 1)
038F 85D2F0    1164            mov     b,(_main_x_volts_1_59 + 2)
0392 E5D3      1165            mov     a,(_main_x_volts_1_59 + 3)
0394 120100    1166            lcall   ___fsgt
0397 AE82      1167            mov     r6,dpl
0399 E581      1168            mov     a,sp
039B 24FC      1169            add     a,#0xfc
039D F581      1170            mov     sp,a
039F EE        1171            mov     a,r6
03A0 6001      1172            jz      L009010?
03A2 75D000    1173            mov     _main_x_volts_1_59,#0x00
03A5 75D100    1174            mov     (_main_x_volts_1_59 + 1),#0x00
03A8 75D210    1175            mov     (_main_x_volts_1_59 + 2),#0x10
03AB 75D341    1176            mov     (_main_x_volts_1_59 + 3),#0x41
03AE 8001      1177            sjmp    L009011?
03B0           1178   L009010?:
03B0           1179   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:203: else if (x_volts < -9) x_volts = -9;
03B0 E4        1180            clr     a
03B1 C0E0      1181            push    acc
03B3 C0E0      1182            push    acc
03B5 7410      1183            mov     a,#0x10
03B7 C0E0      1184            push    acc
03B9 74C1      1185            mov     a,#0xC1
03BB C0E0      1186            push    acc
03BD 85D082    1187            mov     dpl,_main_x_volts_1_59
03C0 85D183    1188            mov     dph,(_main_x_volts_1_59 + 1)
03C3 85D2F0    1189            mov     b,(_main_x_volts_1_59 + 2)
03C6 E5D3      1190            mov     a,(_main_x_volts_1_59 + 3)
03C8 120100    1191            lcall   ___fslt
03CB AE82      1192            mov     r6,dpl
03CD E581      1193            mov     a,sp
03CF 24FC      1194            add     a,#0xfc
03D1 F581      1195            mov     sp,a
03D3 EE        1196            mov     a,r6
03D4 6001      1197            jz      L009011?
03D6 75D000    1198            mov     _main_x_volts_1_59,#0x00
03D9 75D100    1199            mov     (_main_x_volts_1_59 + 1),#0x00
03DC 75D210    1200            mov     (_main_x_volts_1_59 + 2),#0x10
03DF 75D3C1    1201            mov     (_main_x_volts_1_59 + 3),#0xC1
03E2           1202   L009011?:
03E2           1203   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:204: if (y_volts > 8) y_volts = 8;
03E2 E4        1204            clr     a
03E3 C0E0      1205            push    acc
03E5 C0E0      1206            push    acc
03E7 C0E0      1207            push    acc
03E9 7441      1208            mov     a,#0x41
03EB C0E0      1209            push    acc
03ED 852082    1210            mov     dpl,_main_y_volts_1_59
03F0 852183    1211            mov     dph,(_main_y_volts_1_59 + 1)
03F3 8522F0    1212            mov     b,(_main_y_volts_1_59 + 2)
03F6 E523      1213            mov     a,(_main_y_volts_1_59 + 3)
03F8 120100    1214            lcall   ___fsgt
03FB AE82      1215            mov     r6,dpl
03FD E581      1216            mov     a,sp
03FF 24FC      1217            add     a,#0xfc
0401 F581      1218            mov     sp,a
0403 EE        1219            mov     a,r6
0404 6001      1220            jz      L009015?
0406 752000    1221            mov     _main_y_volts_1_59,#0x00
0409 752100    1222            mov     (_main_y_volts_1_59 + 1),#0x00
040C 752200    1223            mov     (_main_y_volts_1_59 + 2),#0x00
040F 752341    1224            mov     (_main_y_volts_1_59 + 3),#0x41
0412 8001      1225            sjmp    L009016?
0414           1226   L009015?:
0414           1227   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:205: else if (y_volts < -9) y_volts = -9;
0414 E4        1228            clr     a
0415 C0E0      1229            push    acc
0417 C0E0      1230            push    acc
0419 7410      1231            mov     a,#0x10
041B C0E0      1232            push    acc
041D 74C1      1233            mov     a,#0xC1
041F C0E0      1234            push    acc
0421 852082    1235            mov     dpl,_main_y_volts_1_59
0424 852183    1236            mov     dph,(_main_y_volts_1_59 + 1)
0427 8522F0    1237            mov     b,(_main_y_volts_1_59 + 2)
042A E523      1238            mov     a,(_main_y_volts_1_59 + 3)
042C 120100    1239            lcall   ___fslt
042F AE82      1240            mov     r6,dpl
0431 E581      1241            mov     a,sp
0433 24FC      1242            add     a,#0xfc
0435 F581      1243            mov     sp,a
0437 EE        1244            mov     a,r6
0438 6001      1245            jz      L009016?
043A 752000    1246            mov     _main_y_volts_1_59,#0x00
043D 752100    1247            mov     (_main_y_volts_1_59 + 1),#0x00
0440 752210    1248            mov     (_main_y_volts_1_59 + 2),#0x10
0443 7523C1    1249            mov     (_main_y_volts_1_59 + 3),#0xC1
0446           1250   L009016?:
0446           1251   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:208: x = x_volts;
0446 85D082    1252            mov     dpl,_main_x_volts_1_59
0449 85D183    1253            mov     dph,(_main_x_volts_1_59 + 1)
044C 85D2F0    1254            mov     b,(_main_x_volts_1_59 + 2)
044F E5D3      1255            mov     a,(_main_x_volts_1_59 + 3)
0451 120100    1256            lcall   ___fs2schar
0454 858260    1257            mov     _main_x_1_59,dpl
0457           1258   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:209: y = y_volts;
0457 852082    1259            mov     dpl,_main_y_volts_1_59
045A 852183    1260            mov     dph,(_main_y_volts_1_59 + 1)
045D 8522F0    1261            mov     b,(_main_y_volts_1_59 + 2)
0460 E523      1262            mov     a,(_main_y_volts_1_59 + 3)
0462 120100    1263            lcall   ___fs2schar
0465           1264   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:211: printf ("V@xPin=%7.5fV, V@yPin=%7.5fV, x_volts=%f, y_volts=%f, x=%d, y=%d,   \r", v[0], v[1], x_volts, y_volts, x, y);
0465 E582      1265            mov     a,dpl
0467 FF        1266            mov     r7,a
0468 33        1267            rlc     a
0469 95E0      1268            subb    a,acc
046B FE        1269            mov     r6,a
046C E560      1270            mov     a,_main_x_1_59
046E FA        1271            mov     r2,a
046F 33        1272            rlc     a
0470 95E0      1273            subb    a,acc
0472 FB        1274            mov     r3,a
0473 C007      1275            push    ar7
0475 C006      1276            push    ar6
0477 C002      1277            push    ar2
0479 C003      1278            push    ar3
047B C020      1279            push    _main_y_volts_1_59
047D C021      1280            push    (_main_y_volts_1_59 + 1)
047F C022      1281            push    (_main_y_volts_1_59 + 2)
0481 C023      1282            push    (_main_y_volts_1_59 + 3)
0483 C0D0      1283            push    _main_x_volts_1_59
0485 C0D1      1284            push    (_main_x_volts_1_59 + 1)
0487 C0D2      1285            push    (_main_x_volts_1_59 + 2)
0489 C0D3      1286            push    (_main_x_volts_1_59 + 3)
048B C084      1287            push    (_main_v_1_59 + 0x0004)
048D C085      1288            push    ((_main_v_1_59 + 0x0004) + 1)
048F C086      1289            push    ((_main_v_1_59 + 0x0004) + 2)
0491 C087      1290            push    ((_main_v_1_59 + 0x0004) + 3)
0493 C080      1291            push    _main_v_1_59
0495 C081      1292            push    (_main_v_1_59 + 1)
0497 C082      1293            push    (_main_v_1_59 + 2)
0499 C083      1294            push    (_main_v_1_59 + 3)
049B 7460      1295            mov     a,#__str_1
049D C0E0      1296            push    acc
049F 74BD      1297            mov     a,#(__str_1 >> 8)
04A1 C0E0      1298            push    acc
04A3 7480      1299            mov     a,#0x80
04A5 C0E0      1300            push    acc
04A7 120100    1301            lcall   _printf
04AA E581      1302            mov     a,sp
04AC 24E9      1303            add     a,#0xe9
04AE F581      1304            mov     sp,a
04B0           1305   ;        D:\School\Elec 291\Project 2\mcar\accelerometer\accelerometer.c:212: waitms(500);
04B0 9001F4    1306            mov     dptr,#0x01F4
04B3 120100    1307            lcall   _waitms
04B6 020100    1308            ljmp    L009018?
04B9           1309            rseg R_CSEG
04B9           1310   
0000           1311            rseg R_XINIT
0000           1312   
0000           1313            rseg R_CONST
0000           1314   __str_0:
0000 1B        1315            db 0x1B
0001 5B324A    1316            db '[2J'
0004 00        1317            db 0x00
0005           1318   __str_1:
0005 56407850  1319            db 'V@xPin=%7.5fV, V@yPin=%7.5fV, x_volts=%f, y_volts=%f, x=%d, '
     696E3D25
     372E3566
     562C2056
     40795069
     6E3D2537
     2E356656
     2C20785F
     766F6C74
     733D2566
     2C20795F
     766F6C74
     733D2566
     2C20783D
     25642C20
0041 793D2564  1320            db 'y=%d,   '
     2C202020
0049 0D        1321            db 0x0D
004A 00        1322            db 0x00
004B           1323   
0003           1324            CSEG
0003           1325   
0003           1326   end
