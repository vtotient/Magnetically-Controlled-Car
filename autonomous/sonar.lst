0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1069 (Apr 23 2015) (MSVC)
0000              4   ; This file was generated Fri Mar 30 17:15:13 2018
0000              5   ;--------------------------------------------------------
                  5   $name TestingSonar
                  6   $optc51 --model-small
0000              8            R_DSEG    segment data
0000              9            R_CSEG    segment code
0000             10            R_BSEG    segment bit
0000             11            R_XSEG    segment xdata
0000             12            R_PSEG    segment xdata
0000             13            R_ISEG    segment idata
0000             14            R_OSEG    segment data overlay
0000             15            BIT_BANK  segment data overlay
0000             16            R_HOME    segment code
0000             17            R_GSINIT  segment code
0000             18            R_IXSEG   segment xdata
0000             19            R_CONST   segment code
0000             20            R_XINIT   segment code
0000             21            R_DINIT   segment code
0000             22   
0000             23   ;--------------------------------------------------------
0000             24   ; Public variables in this module
0000             25   ;--------------------------------------------------------
0000             26            public _mot_dir_PARM_2
0000             27            public _InitPinADC_PARM_2
0000             28            public _main
0000             29            public _US_Ratio_CM
0000             30            public _Find_Object
0000             31            public _Detect_Object
0000             32            public _Timer2_ISR
0000             33            public __c51_external_startup
0000             34            public _Claw_Pos
0000             35            public _Distance
0000             36            public _sonar_op
0000             37            public _claw_control
0000             38            public _debug
0000             39            public _spin_right
0000             40            public _spin_left
0000             41            public _stop
0000             42            public _mot_dir
0000             43            public _Volts_at_Pin
0000             44            public _ADC_at_Pin
0000             45            public _InitPinADC
0000             46            public _waitms
0000             47            public _Timer3us
0000             48            public _InitADC
0000             49            public _claw_pos
0000             50            public _CLAW_L
0000             51            public _CLAW_R
0000             52            public _claw_count
0000             53            public _timer_count
0000             54            public _pwm
0000             55            public _pwmR
0000             56            public _pwmL
0000             57            public _sonar_state
0000             58            public _circ2
0000             59            public _break_when_dir_found
0000             60            public _dir_flag
0000             61            public _find_circle2_flag
0000             62            public _find_circle1_flag
0000             63            public _find_bridge_flag
0000             64            public _dir
0000             65            public _MR_dir
0000             66            public _ML_dir
0000             67            public _pwm_count
0000             68            public _sonar_count_2
0000             69            public _sonar_count
0000             70   ;--------------------------------------------------------
0000             71   ; Special Function Registers
0000             72   ;--------------------------------------------------------
0000             73   _ACC            DATA 0xe0
0000             74   _ADC0ASAH       DATA 0xb6
0000             75   _ADC0ASAL       DATA 0xb5
0000             76   _ADC0ASCF       DATA 0xa1
0000             77   _ADC0ASCT       DATA 0xc7
0000             78   _ADC0CF0        DATA 0xbc
0000             79   _ADC0CF1        DATA 0xb9
0000             80   _ADC0CF2        DATA 0xdf
0000             81   _ADC0CN0        DATA 0xe8
0000             82   _ADC0CN1        DATA 0xb2
0000             83   _ADC0CN2        DATA 0xb3
0000             84   _ADC0GTH        DATA 0xc4
0000             85   _ADC0GTL        DATA 0xc3
0000             86   _ADC0H          DATA 0xbe
0000             87   _ADC0L          DATA 0xbd
0000             88   _ADC0LTH        DATA 0xc6
0000             89   _ADC0LTL        DATA 0xc5
0000             90   _ADC0MX         DATA 0xbb
0000             91   _B              DATA 0xf0
0000             92   _CKCON0         DATA 0x8e
0000             93   _CKCON1         DATA 0xa6
0000             94   _CLEN0          DATA 0xc6
0000             95   _CLIE0          DATA 0xc7
0000             96   _CLIF0          DATA 0xe8
0000             97   _CLKSEL         DATA 0xa9
0000             98   _CLOUT0         DATA 0xd1
0000             99   _CLU0CF         DATA 0xb1
0000            100   _CLU0FN         DATA 0xaf
0000            101   _CLU0MX         DATA 0x84
0000            102   _CLU1CF         DATA 0xb3
0000            103   _CLU1FN         DATA 0xb2
0000            104   _CLU1MX         DATA 0x85
0000            105   _CLU2CF         DATA 0xb6
0000            106   _CLU2FN         DATA 0xb5
0000            107   _CLU2MX         DATA 0x91
0000            108   _CLU3CF         DATA 0xbf
0000            109   _CLU3FN         DATA 0xbe
0000            110   _CLU3MX         DATA 0xae
0000            111   _CMP0CN0        DATA 0x9b
0000            112   _CMP0CN1        DATA 0x99
0000            113   _CMP0MD         DATA 0x9d
0000            114   _CMP0MX         DATA 0x9f
0000            115   _CMP1CN0        DATA 0xbf
0000            116   _CMP1CN1        DATA 0xac
0000            117   _CMP1MD         DATA 0xab
0000            118   _CMP1MX         DATA 0xaa
0000            119   _CRC0CN0        DATA 0xce
0000            120   _CRC0CN1        DATA 0x86
0000            121   _CRC0CNT        DATA 0xd3
0000            122   _CRC0DAT        DATA 0xcb
0000            123   _CRC0FLIP       DATA 0xcf
0000            124   _CRC0IN         DATA 0xca
0000            125   _CRC0ST         DATA 0xd2
0000            126   _DAC0CF0        DATA 0x91
0000            127   _DAC0CF1        DATA 0x92
0000            128   _DAC0H          DATA 0x85
0000            129   _DAC0L          DATA 0x84
0000            130   _DAC1CF0        DATA 0x93
0000            131   _DAC1CF1        DATA 0x94
0000            132   _DAC1H          DATA 0x8a
0000            133   _DAC1L          DATA 0x89
0000            134   _DAC2CF0        DATA 0x95
0000            135   _DAC2CF1        DATA 0x96
0000            136   _DAC2H          DATA 0x8c
0000            137   _DAC2L          DATA 0x8b
0000            138   _DAC3CF0        DATA 0x9a
0000            139   _DAC3CF1        DATA 0x9c
0000            140   _DAC3H          DATA 0x8e
0000            141   _DAC3L          DATA 0x8d
0000            142   _DACGCF0        DATA 0x88
0000            143   _DACGCF1        DATA 0x98
0000            144   _DACGCF2        DATA 0xa2
0000            145   _DERIVID        DATA 0xad
0000            146   _DEVICEID       DATA 0xb5
0000            147   _DPH            DATA 0x83
0000            148   _DPL            DATA 0x82
0000            149   _EIE1           DATA 0xe6
0000            150   _EIE2           DATA 0xf3
0000            151   _EIP1           DATA 0xbb
0000            152   _EIP1H          DATA 0xee
0000            153   _EIP2           DATA 0xed
0000            154   _EIP2H          DATA 0xf6
0000            155   _EMI0CN         DATA 0xe7
0000            156   _FLKEY          DATA 0xb7
0000            157   _HFO0CAL        DATA 0xc7
0000            158   _HFO1CAL        DATA 0xd6
0000            159   _HFOCN          DATA 0xef
0000            160   _I2C0ADM        DATA 0xff
0000            161   _I2C0CN0        DATA 0xba
0000            162   _I2C0DIN        DATA 0xbc
0000            163   _I2C0DOUT       DATA 0xbb
0000            164   _I2C0FCN0       DATA 0xad
0000            165   _I2C0FCN1       DATA 0xab
0000            166   _I2C0FCT        DATA 0xf5
0000            167   _I2C0SLAD       DATA 0xbd
0000            168   _I2C0STAT       DATA 0xb9
0000            169   _IE             DATA 0xa8
0000            170   _IP             DATA 0xb8
0000            171   _IPH            DATA 0xf2
0000            172   _IT01CF         DATA 0xe4
0000            173   _LFO0CN         DATA 0xb1
0000            174   _P0             DATA 0x80
0000            175   _P0MASK         DATA 0xfe
0000            176   _P0MAT          DATA 0xfd
0000            177   _P0MDIN         DATA 0xf1
0000            178   _P0MDOUT        DATA 0xa4
0000            179   _P0SKIP         DATA 0xd4
0000            180   _P1             DATA 0x90
0000            181   _P1MASK         DATA 0xee
0000            182   _P1MAT          DATA 0xed
0000            183   _P1MDIN         DATA 0xf2
0000            184   _P1MDOUT        DATA 0xa5
0000            185   _P1SKIP         DATA 0xd5
0000            186   _P2             DATA 0xa0
0000            187   _P2MASK         DATA 0xfc
0000            188   _P2MAT          DATA 0xfb
0000            189   _P2MDIN         DATA 0xf3
0000            190   _P2MDOUT        DATA 0xa6
0000            191   _P2SKIP         DATA 0xcc
0000            192   _P3             DATA 0xb0
0000            193   _P3MDIN         DATA 0xf4
0000            194   _P3MDOUT        DATA 0x9c
0000            195   _PCA0CENT       DATA 0x9e
0000            196   _PCA0CLR        DATA 0x9c
0000            197   _PCA0CN0        DATA 0xd8
0000            198   _PCA0CPH0       DATA 0xfc
0000            199   _PCA0CPH1       DATA 0xea
0000            200   _PCA0CPH2       DATA 0xec
0000            201   _PCA0CPH3       DATA 0xf5
0000            202   _PCA0CPH4       DATA 0x85
0000            203   _PCA0CPH5       DATA 0xde
0000            204   _PCA0CPL0       DATA 0xfb
0000            205   _PCA0CPL1       DATA 0xe9
0000            206   _PCA0CPL2       DATA 0xeb
0000            207   _PCA0CPL3       DATA 0xf4
0000            208   _PCA0CPL4       DATA 0x84
0000            209   _PCA0CPL5       DATA 0xdd
0000            210   _PCA0CPM0       DATA 0xda
0000            211   _PCA0CPM1       DATA 0xdb
0000            212   _PCA0CPM2       DATA 0xdc
0000            213   _PCA0CPM3       DATA 0xae
0000            214   _PCA0CPM4       DATA 0xaf
0000            215   _PCA0CPM5       DATA 0xcc
0000            216   _PCA0H          DATA 0xfa
0000            217   _PCA0L          DATA 0xf9
0000            218   _PCA0MD         DATA 0xd9
0000            219   _PCA0POL        DATA 0x96
0000            220   _PCA0PWM        DATA 0xf7
0000            221   _PCON0          DATA 0x87
0000            222   _PCON1          DATA 0xcd
0000            223   _PFE0CN         DATA 0xc1
0000            224   _PRTDRV         DATA 0xf6
0000            225   _PSCTL          DATA 0x8f
0000            226   _PSTAT0         DATA 0xaa
0000            227   _PSW            DATA 0xd0
0000            228   _REF0CN         DATA 0xd1
0000            229   _REG0CN         DATA 0xc9
0000            230   _REVID          DATA 0xb6
0000            231   _RSTSRC         DATA 0xef
0000            232   _SBCON1         DATA 0x94
0000            233   _SBRLH1         DATA 0x96
0000            234   _SBRLL1         DATA 0x95
0000            235   _SBUF           DATA 0x99
0000            236   _SBUF0          DATA 0x99
0000            237   _SBUF1          DATA 0x92
0000            238   _SCON           DATA 0x98
0000            239   _SCON0          DATA 0x98
0000            240   _SCON1          DATA 0xc8
0000            241   _SFRPAGE        DATA 0xa7
0000            242   _SFRPGCN        DATA 0xbc
0000            243   _SFRSTACK       DATA 0xd7
0000            244   _SMB0ADM        DATA 0xd6
0000            245   _SMB0ADR        DATA 0xd7
0000            246   _SMB0CF         DATA 0xc1
0000            247   _SMB0CN0        DATA 0xc0
0000            248   _SMB0DAT        DATA 0xc2
0000            249   _SMB0FCN0       DATA 0xc3
0000            250   _SMB0FCN1       DATA 0xc4
0000            251   _SMB0FCT        DATA 0xef
0000            252   _SMB0RXLN       DATA 0xc5
0000            253   _SMB0TC         DATA 0xac
0000            254   _SMOD1          DATA 0x93
0000            255   _SP             DATA 0x81
0000            256   _SPI0CFG        DATA 0xa1
0000            257   _SPI0CKR        DATA 0xa2
0000            258   _SPI0CN0        DATA 0xf8
0000            259   _SPI0DAT        DATA 0xa3
0000            260   _SPI0FCN0       DATA 0x9a
0000            261   _SPI0FCN1       DATA 0x9b
0000            262   _SPI0FCT        DATA 0xf7
0000            263   _SPI0PCF        DATA 0xdf
0000            264   _TCON           DATA 0x88
0000            265   _TH0            DATA 0x8c
0000            266   _TH1            DATA 0x8d
0000            267   _TL0            DATA 0x8a
0000            268   _TL1            DATA 0x8b
0000            269   _TMOD           DATA 0x89
0000            270   _TMR2CN0        DATA 0xc8
0000            271   _TMR2CN1        DATA 0xfd
0000            272   _TMR2H          DATA 0xcf
0000            273   _TMR2L          DATA 0xce
0000            274   _TMR2RLH        DATA 0xcb
0000            275   _TMR2RLL        DATA 0xca
0000            276   _TMR3CN0        DATA 0x91
0000            277   _TMR3CN1        DATA 0xfe
0000            278   _TMR3H          DATA 0x95
0000            279   _TMR3L          DATA 0x94
0000            280   _TMR3RLH        DATA 0x93
0000            281   _TMR3RLL        DATA 0x92
0000            282   _TMR4CN0        DATA 0x98
0000            283   _TMR4CN1        DATA 0xff
0000            284   _TMR4H          DATA 0xa5
0000            285   _TMR4L          DATA 0xa4
0000            286   _TMR4RLH        DATA 0xa3
0000            287   _TMR4RLL        DATA 0xa2
0000            288   _TMR5CN0        DATA 0xc0
0000            289   _TMR5CN1        DATA 0xf1
0000            290   _TMR5H          DATA 0xd5
0000            291   _TMR5L          DATA 0xd4
0000            292   _TMR5RLH        DATA 0xd3
0000            293   _TMR5RLL        DATA 0xd2
0000            294   _UART0PCF       DATA 0xd9
0000            295   _UART1FCN0      DATA 0x9d
0000            296   _UART1FCN1      DATA 0xd8
0000            297   _UART1FCT       DATA 0xfa
0000            298   _UART1LIN       DATA 0x9e
0000            299   _UART1PCF       DATA 0xda
0000            300   _VDM0CN         DATA 0xff
0000            301   _WDTCN          DATA 0x97
0000            302   _XBR0           DATA 0xe1
0000            303   _XBR1           DATA 0xe2
0000            304   _XBR2           DATA 0xe3
0000            305   _XOSC0CN        DATA 0x86
0000            306   _DPTR           DATA 0x8382
0000            307   _TMR2RL         DATA 0xcbca
0000            308   _TMR3RL         DATA 0x9392
0000            309   _TMR4RL         DATA 0xa3a2
0000            310   _TMR5RL         DATA 0xd3d2
0000            311   _TMR0           DATA 0x8c8a
0000            312   _TMR1           DATA 0x8d8b
0000            313   _TMR2           DATA 0xcfce
0000            314   _TMR3           DATA 0x9594
0000            315   _TMR4           DATA 0xa5a4
0000            316   _TMR5           DATA 0xd5d4
0000            317   _SBRL1          DATA 0x9695
0000            318   _PCA0           DATA 0xfaf9
0000            319   _PCA0CP0        DATA 0xfcfb
0000            320   _PCA0CP1        DATA 0xeae9
0000            321   _PCA0CP2        DATA 0xeceb
0000            322   _PCA0CP3        DATA 0xf5f4
0000            323   _PCA0CP4        DATA 0x8584
0000            324   _PCA0CP5        DATA 0xdedd
0000            325   _ADC0ASA        DATA 0xb6b5
0000            326   _ADC0GT         DATA 0xc4c3
0000            327   _ADC0           DATA 0xbebd
0000            328   _ADC0LT         DATA 0xc6c5
0000            329   _DAC0           DATA 0x8584
0000            330   _DAC1           DATA 0x8a89
0000            331   _DAC2           DATA 0x8c8b
0000            332   _DAC3           DATA 0x8e8d
0000            333   ;--------------------------------------------------------
0000            334   ; special function bits
0000            335   ;--------------------------------------------------------
0000            336   _ACC_0          BIT 0xe0
0000            337   _ACC_1          BIT 0xe1
0000            338   _ACC_2          BIT 0xe2
0000            339   _ACC_3          BIT 0xe3
0000            340   _ACC_4          BIT 0xe4
0000            341   _ACC_5          BIT 0xe5
0000            342   _ACC_6          BIT 0xe6
0000            343   _ACC_7          BIT 0xe7
0000            344   _TEMPE          BIT 0xe8
0000            345   _ADGN0          BIT 0xe9
0000            346   _ADGN1          BIT 0xea
0000            347   _ADWINT         BIT 0xeb
0000            348   _ADBUSY         BIT 0xec
0000            349   _ADINT          BIT 0xed
0000            350   _IPOEN          BIT 0xee
0000            351   _ADEN           BIT 0xef
0000            352   _B_0            BIT 0xf0
0000            353   _B_1            BIT 0xf1
0000            354   _B_2            BIT 0xf2
0000            355   _B_3            BIT 0xf3
0000            356   _B_4            BIT 0xf4
0000            357   _B_5            BIT 0xf5
0000            358   _B_6            BIT 0xf6
0000            359   _B_7            BIT 0xf7
0000            360   _C0FIF          BIT 0xe8
0000            361   _C0RIF          BIT 0xe9
0000            362   _C1FIF          BIT 0xea
0000            363   _C1RIF          BIT 0xeb
0000            364   _C2FIF          BIT 0xec
0000            365   _C2RIF          BIT 0xed
0000            366   _C3FIF          BIT 0xee
0000            367   _C3RIF          BIT 0xef
0000            368   _D1SRC0         BIT 0x88
0000            369   _D1SRC1         BIT 0x89
0000            370   _D1AMEN         BIT 0x8a
0000            371   _D01REFSL       BIT 0x8b
0000            372   _D3SRC0         BIT 0x8c
0000            373   _D3SRC1         BIT 0x8d
0000            374   _D3AMEN         BIT 0x8e
0000            375   _D23REFSL       BIT 0x8f
0000            376   _D0UDIS         BIT 0x98
0000            377   _D1UDIS         BIT 0x99
0000            378   _D2UDIS         BIT 0x9a
0000            379   _D3UDIS         BIT 0x9b
0000            380   _EX0            BIT 0xa8
0000            381   _ET0            BIT 0xa9
0000            382   _EX1            BIT 0xaa
0000            383   _ET1            BIT 0xab
0000            384   _ES0            BIT 0xac
0000            385   _ET2            BIT 0xad
0000            386   _ESPI0          BIT 0xae
0000            387   _EA             BIT 0xaf
0000            388   _PX0            BIT 0xb8
0000            389   _PT0            BIT 0xb9
0000            390   _PX1            BIT 0xba
0000            391   _PT1            BIT 0xbb
0000            392   _PS0            BIT 0xbc
0000            393   _PT2            BIT 0xbd
0000            394   _PSPI0          BIT 0xbe
0000            395   _P0_0           BIT 0x80
0000            396   _P0_1           BIT 0x81
0000            397   _P0_2           BIT 0x82
0000            398   _P0_3           BIT 0x83
0000            399   _P0_4           BIT 0x84
0000            400   _P0_5           BIT 0x85
0000            401   _P0_6           BIT 0x86
0000            402   _P0_7           BIT 0x87
0000            403   _P1_0           BIT 0x90
0000            404   _P1_1           BIT 0x91
0000            405   _P1_2           BIT 0x92
0000            406   _P1_3           BIT 0x93
0000            407   _P1_4           BIT 0x94
0000            408   _P1_5           BIT 0x95
0000            409   _P1_6           BIT 0x96
0000            410   _P1_7           BIT 0x97
0000            411   _P2_0           BIT 0xa0
0000            412   _P2_1           BIT 0xa1
0000            413   _P2_2           BIT 0xa2
0000            414   _P2_3           BIT 0xa3
0000            415   _P2_4           BIT 0xa4
0000            416   _P2_5           BIT 0xa5
0000            417   _P2_6           BIT 0xa6
0000            418   _P3_0           BIT 0xb0
0000            419   _P3_1           BIT 0xb1
0000            420   _P3_2           BIT 0xb2
0000            421   _P3_3           BIT 0xb3
0000            422   _P3_4           BIT 0xb4
0000            423   _P3_7           BIT 0xb7
0000            424   _CCF0           BIT 0xd8
0000            425   _CCF1           BIT 0xd9
0000            426   _CCF2           BIT 0xda
0000            427   _CCF3           BIT 0xdb
0000            428   _CCF4           BIT 0xdc
0000            429   _CCF5           BIT 0xdd
0000            430   _CR             BIT 0xde
0000            431   _CF             BIT 0xdf
0000            432   _PARITY         BIT 0xd0
0000            433   _F1             BIT 0xd1
0000            434   _OV             BIT 0xd2
0000            435   _RS0            BIT 0xd3
0000            436   _RS1            BIT 0xd4
0000            437   _F0             BIT 0xd5
0000            438   _AC             BIT 0xd6
0000            439   _CY             BIT 0xd7
0000            440   _RI             BIT 0x98
0000            441   _TI             BIT 0x99
0000            442   _RB8            BIT 0x9a
0000            443   _TB8            BIT 0x9b
0000            444   _REN            BIT 0x9c
0000            445   _CE             BIT 0x9d
0000            446   _SMODE          BIT 0x9e
0000            447   _RI1            BIT 0xc8
0000            448   _TI1            BIT 0xc9
0000            449   _RBX1           BIT 0xca
0000            450   _TBX1           BIT 0xcb
0000            451   _REN1           BIT 0xcc
0000            452   _PERR1          BIT 0xcd
0000            453   _OVR1           BIT 0xce
0000            454   _SI             BIT 0xc0
0000            455   _ACK            BIT 0xc1
0000            456   _ARBLOST        BIT 0xc2
0000            457   _ACKRQ          BIT 0xc3
0000            458   _STO            BIT 0xc4
0000            459   _STA            BIT 0xc5
0000            460   _TXMODE         BIT 0xc6
0000            461   _MASTER         BIT 0xc7
0000            462   _SPIEN          BIT 0xf8
0000            463   _TXNF           BIT 0xf9
0000            464   _NSSMD0         BIT 0xfa
0000            465   _NSSMD1         BIT 0xfb
0000            466   _RXOVRN         BIT 0xfc
0000            467   _MODF           BIT 0xfd
0000            468   _WCOL           BIT 0xfe
0000            469   _SPIF           BIT 0xff
0000            470   _IT0            BIT 0x88
0000            471   _IE0            BIT 0x89
0000            472   _IT1            BIT 0x8a
0000            473   _IE1            BIT 0x8b
0000            474   _TR0            BIT 0x8c
0000            475   _TF0            BIT 0x8d
0000            476   _TR1            BIT 0x8e
0000            477   _TF1            BIT 0x8f
0000            478   _T2XCLK0        BIT 0xc8
0000            479   _T2XCLK1        BIT 0xc9
0000            480   _TR2            BIT 0xca
0000            481   _T2SPLIT        BIT 0xcb
0000            482   _TF2CEN         BIT 0xcc
0000            483   _TF2LEN         BIT 0xcd
0000            484   _TF2L           BIT 0xce
0000            485   _TF2H           BIT 0xcf
0000            486   _T4XCLK0        BIT 0x98
0000            487   _T4XCLK1        BIT 0x99
0000            488   _TR4            BIT 0x9a
0000            489   _T4SPLIT        BIT 0x9b
0000            490   _TF4CEN         BIT 0x9c
0000            491   _TF4LEN         BIT 0x9d
0000            492   _TF4L           BIT 0x9e
0000            493   _TF4H           BIT 0x9f
0000            494   _T5XCLK0        BIT 0xc0
0000            495   _T5XCLK1        BIT 0xc1
0000            496   _TR5            BIT 0xc2
0000            497   _T5SPLIT        BIT 0xc3
0000            498   _TF5CEN         BIT 0xc4
0000            499   _TF5LEN         BIT 0xc5
0000            500   _TF5L           BIT 0xc6
0000            501   _TF5H           BIT 0xc7
0000            502   _RIE            BIT 0xd8
0000            503   _RXTO0          BIT 0xd9
0000            504   _RXTO1          BIT 0xda
0000            505   _RFRQ           BIT 0xdb
0000            506   _TIE            BIT 0xdc
0000            507   _TXHOLD         BIT 0xdd
0000            508   _TXNF1          BIT 0xde
0000            509   _TFRQ           BIT 0xdf
0000            510   ;--------------------------------------------------------
0000            511   ; overlayable register banks
0000            512   ;--------------------------------------------------------
0000            513            rbank0 segment data overlay
0000            514            rbank2 segment data overlay
0000            515   ;--------------------------------------------------------
0000            516   ; overlayable bit register bank
0000            517   ;--------------------------------------------------------
0000            518            rseg BIT_BANK
0000            519   bits:
0000            520            ds 1
0001            521            b0 equ  bits.0 
0001            522            b1 equ  bits.1 
0001            523            b2 equ  bits.2 
0001            524            b3 equ  bits.3 
0001            525            b4 equ  bits.4 
0001            526            b5 equ  bits.5 
0001            527            b6 equ  bits.6 
0001            528            b7 equ  bits.7 
0001            529   ;--------------------------------------------------------
0001            530   ; internal ram data
0001            531   ;--------------------------------------------------------
0000            532            rseg R_DSEG
0000            533   _sonar_count:
0000            534            ds 2
0002            535   _sonar_count_2:
0002            536            ds 2
0004            537   _pwm_count:
0004            538            ds 2
0006            539   ;--------------------------------------------------------
0006            540   ; overlayable items in internal ram 
0006            541   ;--------------------------------------------------------
0000            542            rseg    R_OSEG
0000            543            rseg    R_OSEG
0000            544   _InitPinADC_PARM_2:
0000            545            ds 1
0001            546            rseg    R_OSEG
0001            547            rseg    R_OSEG
0001            548   _mot_dir_PARM_2:
0001            549            ds 2
0003            550            rseg    R_OSEG
0003            551   ;--------------------------------------------------------
0003            552   ; indirectly addressable internal ram data
0003            553   ;--------------------------------------------------------
0000            554            rseg R_ISEG
0000            555   ;--------------------------------------------------------
0000            556   ; absolute internal ram data
0000            557   ;--------------------------------------------------------
0000            558            DSEG
0000            559   ;--------------------------------------------------------
0000            560   ; bit data
0000            561   ;--------------------------------------------------------
0000            562            rseg R_BSEG
0000            563   _ML_dir:
0000            564            DBIT    1
0001            565   _MR_dir:
0001            566            DBIT    1
0002            567   _dir:
0002            568            DBIT    1
0003            569   _find_bridge_flag:
0003            570            DBIT    1
0004            571   _find_circle1_flag:
0004            572            DBIT    1
0005            573   _find_circle2_flag:
0005            574            DBIT    1
0006            575   _dir_flag:
0006            576            DBIT    1
0007            577   _break_when_dir_found:
0007            578            DBIT    1
0008            579   _circ2:
0008            580            DBIT    1
0009            581   _sonar_state:
0009            582            DBIT    1
000A            583   ;--------------------------------------------------------
000A            584   ; paged external ram data
000A            585   ;--------------------------------------------------------
0000            586            rseg R_PSEG
0000            587   ;--------------------------------------------------------
0000            588   ; external ram data
0000            589   ;--------------------------------------------------------
0000            590            rseg R_XSEG
0000            591   ;--------------------------------------------------------
0000            592   ; absolute external ram data
0000            593   ;--------------------------------------------------------
0000            594            XSEG
0000            595   ;--------------------------------------------------------
0000            596   ; external initialized ram data
0000            597   ;--------------------------------------------------------
0000            598            rseg R_IXSEG
0000            599   _pwmL:
0000            600            ds 2
0002            601   _pwmR:
0002            602            ds 2
0004            603   _pwm:
0004            604            ds 2
0006            605   _timer_count:
0006            606            ds 2
0008            607   _claw_count:
0008            608            ds 2
000A            609   _CLAW_R:
000A            610            ds 2
000C            611   _CLAW_L:
000C            612            ds 2
000E            613   _claw_pos:
000E            614            ds 2
0000            615            rseg R_HOME
0000            616            rseg R_GSINIT
0000            617            rseg R_CSEG
0000            618   ;--------------------------------------------------------
0000            619   ; Reset entry point and interrupt vectors
0000            620   ;--------------------------------------------------------
0000            621            CSEG at 0x0000
0000 020100     622            ljmp    _crt0
002B            623            CSEG at 0x002b
002B 020100     624            ljmp    _Timer2_ISR
002E            625   ;--------------------------------------------------------
002E            626   ; global & static initialisations
002E            627   ;--------------------------------------------------------
0000            628            rseg R_HOME
0000            629            rseg R_GSINIT
0000            630            rseg R_GSINIT
0000            631   ;--------------------------------------------------------
0000            632   ; data variables initialization
0000            633   ;--------------------------------------------------------
0000            634            rseg R_DINIT
0000            635   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:35: volatile int sonar_count = 0;
0000 E4         636            clr     a
0001 F578       637            mov     _sonar_count,a
0003 F579       638            mov     (_sonar_count + 1),a
0005            639   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:36: volatile int sonar_count_2 = 0;
0005 E4         640            clr     a
0006 F538       641            mov     _sonar_count_2,a
0008 F539       642            mov     (_sonar_count_2 + 1),a
000A            643   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:37: volatile int pwm_count = 0;
000A E4         644            clr     a
000B F5F8       645            mov     _pwm_count,a
000D F5F9       646            mov     (_pwm_count + 1),a
000F            647   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:39: volatile bit find_bridge_flag =0;
000F C2F8       648            clr     _find_bridge_flag
0011            649   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:40: volatile bit find_circle1_flag = 0;
0011 C2A8       650            clr     _find_circle1_flag
0013            651   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:41: volatile bit find_circle2_flag = 0;
0013 C258       652            clr     _find_circle2_flag
0015            653   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:42: volatile bit dir_flag=0;                       //set high to indicate that the dir_count has been incremented, wait for flag low
0015 C208       654            clr     _dir_flag
0017            655   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:43: volatile bit break_when_dir_found = 0;
0017 C2C8       656            clr     _break_when_dir_found
0019            657   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:44: volatile bit circ2 = 0;
0019 C260       658            clr     _circ2
001B            659   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:45: volatile bit sonar_state = 0;
001B C220       660            clr     _sonar_state
001D            661            ; The linker places a 'ret' at the end of segment R_DINIT.
001D            662   ;--------------------------------------------------------
001D            663   ; code
001D            664   ;--------------------------------------------------------
0000            665            rseg R_CSEG
0000            666   ;------------------------------------------------------------
0000            667   ;Allocation info for local variables in function 'InitADC'
0000            668   ;------------------------------------------------------------
0000            669   ;------------------------------------------------------------
0000            670   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:2: void InitADC (void)
0000            671   ;        -----------------------------------------
0000            672   ;         function InitADC
0000            673   ;        -----------------------------------------
0000            674   _InitADC:
0000            675            using   0
0000            676   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:4: SFRPAGE = 0x00;
0000 75A700     677            mov     _SFRPAGE,#0x00
0003            678   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:5: ADC0CN1 = 0b_10_000_000; //14-bit,  Right justified no shifting applied, perform and Accumulate 1 conversion.
0003 75B280     679            mov     _ADC0CN1,#0x80
0006            680   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:6: ADC0CF0 = 0b_11111_0_00; // SYSCLK/32
0006 75BCF8     681            mov     _ADC0CF0,#0xF8
0009            682   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:7: ADC0CF1 = 0b_0_0_011110; // Same as default for now
0009 75B91E     683            mov     _ADC0CF1,#0x1E
000C            684   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:8: ADC0CN0 = 0b_0_0_0_0_0_00_0; // Same as default for now
000C 75E800     685            mov     _ADC0CN0,#0x00
000F            686   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:9: ADC0CF2 = 0b_0_01_11111 ; // GND pin, Vref=VDD
000F 75DF3F     687            mov     _ADC0CF2,#0x3F
0012            688   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:10: ADC0CN2 = 0b_0_000_0000;  // Same as default for now. ADC0 conversion initiated on write of 1 to ADBUSY.
0012 75B300     689            mov     _ADC0CN2,#0x00
0015            690   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:11: ADEN=1; // Enable ADC
0015 D2EF       691            setb    _ADEN
0017 22         692            ret
0018            693   ;------------------------------------------------------------
0018            694   ;Allocation info for local variables in function 'Timer3us'
0018            695   ;------------------------------------------------------------
0018            696   ;us                        Allocated to registers r2 
0018            697   ;i                         Allocated to registers r3 
0018            698   ;------------------------------------------------------------
0018            699   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:15: void Timer3us(unsigned char us)
0018            700   ;        -----------------------------------------
0018            701   ;         function Timer3us
0018            702   ;        -----------------------------------------
0018            703   _Timer3us:
0018 AA82       704            mov     r2,dpl
001A            705   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:20: CKCON0|=0b_0100_0000;
001A 438E40     706            orl     _CKCON0,#0x40
001D            707   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:22: TMR3RL = (-(SYSCLK)/1000000L); // Set Timer3 to overflow in 1us.
001D 7592B8     708            mov     _TMR3RL,#0xB8
0020 7593FF     709            mov     (_TMR3RL >> 8),#0xFF
0023            710   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:23: TMR3 = TMR3RL;                 // Initialize Timer3 for first overflow
0023 859294     711            mov     _TMR3,_TMR3RL
0026 859395     712            mov     (_TMR3 >> 8),(_TMR3RL >> 8)
0029            713   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:25: TMR3CN0 = 0x04;                 // Sart Timer3 and clear overflow flag
0029 759104     714            mov     _TMR3CN0,#0x04
002C            715   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:26: for (i = 0; i < us; i++)       // Count <us> overflows
002C 7B00       716            mov     r3,#0x00
002E            717   L003004?:
002E C3         718            clr     c
002F EB         719            mov     a,r3
0030 9A         720            subb    a,r2
0031 5001       721            jnc     L003007?
0033            722   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:28: while (!(TMR3CN0 & 0x80));  // Wait for overflow
0033            723   L003001?:
0033 E591       724            mov     a,_TMR3CN0
0035 30E7C0     725            jnb     acc.7,L003001?
0038            726   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:29: TMR3CN0 &= ~(0x80);         // Clear overflow indicator
0038 53917F     727            anl     _TMR3CN0,#0x7F
003B            728   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:26: for (i = 0; i < us; i++)       // Count <us> overflows
003B 0B         729            inc     r3
003C 8001       730            sjmp    L003004?
003E            731   L003007?:
003E            732   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:31: TMR3CN0 = 0 ;                   // Stop Timer3 and clear overflow flag
003E 759100     733            mov     _TMR3CN0,#0x00
0041 22         734            ret
0042            735   ;------------------------------------------------------------
0042            736   ;Allocation info for local variables in function 'waitms'
0042            737   ;------------------------------------------------------------
0042            738   ;ms                        Allocated to registers r2 r3 
0042            739   ;j                         Allocated to registers r4 r5 
0042            740   ;k                         Allocated to registers r6 
0042            741   ;------------------------------------------------------------
0042            742   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:34: void waitms (unsigned int ms)
0042            743   ;        -----------------------------------------
0042            744   ;         function waitms
0042            745   ;        -----------------------------------------
0042            746   _waitms:
0042 AA82       747            mov     r2,dpl
0044 AB83       748            mov     r3,dph
0046            749   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:38: for(j=0; j<ms; j++)
0046 7C00       750            mov     r4,#0x00
0048 7D00       751            mov     r5,#0x00
004A            752   L004005?:
004A C3         753            clr     c
004B EC         754            mov     a,r4
004C 9A         755            subb    a,r2
004D ED         756            mov     a,r5
004E 9B         757            subb    a,r3
004F 5001       758            jnc     L004009?
0051            759   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:39: for (k=0; k<4; k++) Timer3us(250);
0051 7E00       760            mov     r6,#0x00
0053            761   L004001?:
0053 BE0440     762            cjne    r6,#0x04,L004018?
0056            763   L004018?:
0056 5001       764            jnc     L004007?
0058 7582FA     765            mov     dpl,#0xFA
005B C002       766            push    ar2
005D C003       767            push    ar3
005F C004       768            push    ar4
0061 C005       769            push    ar5
0063 C006       770            push    ar6
0065 120100     771            lcall   _Timer3us
0068 D006       772            pop     ar6
006A D005       773            pop     ar5
006C D004       774            pop     ar4
006E D003       775            pop     ar3
0070 D002       776            pop     ar2
0072 0E         777            inc     r6
0073 8001       778            sjmp    L004001?
0075            779   L004007?:
0075            780   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:38: for(j=0; j<ms; j++)
0075 0C         781            inc     r4
0076 BC0080     782            cjne    r4,#0x00,L004005?
0079 0D         783            inc     r5
007A 8001       784            sjmp    L004005?
007C            785   L004009?:
007C 22         786            ret
007D            787   ;------------------------------------------------------------
007D            788   ;Allocation info for local variables in function 'InitPinADC'
007D            789   ;------------------------------------------------------------
007D            790   ;pinno                     Allocated with name '_InitPinADC_PARM_2'
007D            791   ;portno                    Allocated to registers r2 
007D            792   ;mask                      Allocated to registers r3 
007D            793   ;------------------------------------------------------------
007D            794   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:44: void InitPinADC (unsigned char portno, unsigned char pinno)
007D            795   ;        -----------------------------------------
007D            796   ;         function InitPinADC
007D            797   ;        -----------------------------------------
007D            798   _InitPinADC:
007D AA82       799            mov     r2,dpl
007F            800   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:48: mask=1<<pinno;
007F 8590F0     801            mov     b,_InitPinADC_PARM_2
0082 05F0       802            inc     b
0084 7401       803            mov     a,#0x01
0086 8001       804            sjmp    L005013?
0088            805   L005011?:
0088 25E0       806            add     a,acc
008A            807   L005013?:
008A D5F040     808            djnz    b,L005011?
008D FB         809            mov     r3,a
008E            810   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:50: SFRPAGE = 0x20;
008E 75A720     811            mov     _SFRPAGE,#0x20
0091            812   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:51: switch (portno)
0091 BA0080     813            cjne    r2,#0x00,L005014?
0094 8001       814            sjmp    L005001?
0096            815   L005014?:
0096 BA0100     816            cjne    r2,#0x01,L005015?
0099 8001       817            sjmp    L005002?
009B            818   L005015?:
009B            819   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:53: case 0:
009B BA0280     820            cjne    r2,#0x02,L005005?
009E 8001       821            sjmp    L005003?
00A0            822   L005001?:
00A0            823   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:54: P0MDIN &= (~mask); // Set pin as analog input
00A0 EB         824            mov     a,r3
00A1 F4         825            cpl     a
00A2 FA         826            mov     r2,a
00A3 52F1       827            anl     _P0MDIN,a
00A5            828   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:55: P0SKIP |= mask; // Skip Crossbar decoding for this pin
00A5 EB         829            mov     a,r3
00A6 42D4       830            orl     _P0SKIP,a
00A8            831   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:56: break;
00A8            832   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:57: case 1:
00A8 8001       833            sjmp    L005005?
00AA            834   L005002?:
00AA            835   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:58: P1MDIN &= (~mask); // Set pin as analog input
00AA EB         836            mov     a,r3
00AB F4         837            cpl     a
00AC FA         838            mov     r2,a
00AD 52F2       839            anl     _P1MDIN,a
00AF            840   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:59: P1SKIP |= mask; // Skip Crossbar decoding for this pin
00AF EB         841            mov     a,r3
00B0 42D5       842            orl     _P1SKIP,a
00B2            843   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:60: break;
00B2            844   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:61: case 2:
00B2 8001       845            sjmp    L005005?
00B4            846   L005003?:
00B4            847   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:62: P2MDIN &= (~mask); // Set pin as analog input
00B4 EB         848            mov     a,r3
00B5 F4         849            cpl     a
00B6 FA         850            mov     r2,a
00B7 52F3       851            anl     _P2MDIN,a
00B9            852   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:63: P2SKIP |= mask; // Skip Crossbar decoding for this pin
00B9 EB         853            mov     a,r3
00BA 42CC       854            orl     _P2SKIP,a
00BC            855   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:67: }
00BC            856   L005005?:
00BC            857   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:68: SFRPAGE = 0x00;
00BC 75A700     858            mov     _SFRPAGE,#0x00
00BF 22         859            ret
00C0            860   ;------------------------------------------------------------
00C0            861   ;Allocation info for local variables in function 'ADC_at_Pin'
00C0            862   ;------------------------------------------------------------
00C0            863   ;pin                       Allocated to registers 
00C0            864   ;------------------------------------------------------------
00C0            865   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:71: unsigned int ADC_at_Pin(unsigned char pin)
00C0            866   ;        -----------------------------------------
00C0            867   ;         function ADC_at_Pin
00C0            868   ;        -----------------------------------------
00C0            869   _ADC_at_Pin:
00C0 8582BB     870            mov     _ADC0MX,dpl
00C3            871   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:74: ADBUSY=1;       // Dummy conversion first to select new pin
00C3 D2EC       872            setb    _ADBUSY
00C5            873   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:75: while (ADBUSY); // Wait for dummy conversion to finish
00C5            874   L006001?:
00C5 20EC00     875            jb      _ADBUSY,L006001?
00C8            876   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:76: ADBUSY = 1;     // Convert voltage at the pin
00C8 D2EC       877            setb    _ADBUSY
00CA            878   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:77: while (ADBUSY); // Wait for conversion to complete
00CA            879   L006004?:
00CA 20EC40     880            jb      _ADBUSY,L006004?
00CD            881   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:78: return (ADC0);
00CD 85BD82     882            mov     dpl,_ADC0
00D0 85BE83     883            mov     dph,(_ADC0 >> 8)
00D3 22         884            ret
00D4            885   ;------------------------------------------------------------
00D4            886   ;Allocation info for local variables in function 'Volts_at_Pin'
00D4            887   ;------------------------------------------------------------
00D4            888   ;pin                       Allocated to registers r2 
00D4            889   ;------------------------------------------------------------
00D4            890   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:81: float Volts_at_Pin(unsigned char pin)
00D4            891   ;        -----------------------------------------
00D4            892   ;         function Volts_at_Pin
00D4            893   ;        -----------------------------------------
00D4            894   _Volts_at_Pin:
00D4            895   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:83: return ((ADC_at_Pin(pin)*VDD)/0b_0011_1111_1111_1111);
00D4 120100     896            lcall   _ADC_at_Pin
00D7 120100     897            lcall   ___uint2fs
00DA AA82       898            mov     r2,dpl
00DC AB83       899            mov     r3,dph
00DE ACF0       900            mov     r4,b
00E0 FD         901            mov     r5,a
00E1 C002       902            push    ar2
00E3 C003       903            push    ar3
00E5 C004       904            push    ar4
00E7 C005       905            push    ar5
00E9 906C8B     906            mov     dptr,#0x6C8B
00EC 75F053     907            mov     b,#0x53
00EF 7440       908            mov     a,#0x40
00F1 120100     909            lcall   ___fsmul
00F4 AA82       910            mov     r2,dpl
00F6 AB83       911            mov     r3,dph
00F8 ACF0       912            mov     r4,b
00FA FD         913            mov     r5,a
00FB E581       914            mov     a,sp
00FD 24FC       915            add     a,#0xfc
00FF F581       916            mov     sp,a
0101 E4         917            clr     a
0102 C0E0       918            push    acc
0104 74FC       919            mov     a,#0xFC
0106 C0E0       920            push    acc
0108 747F       921            mov     a,#0x7F
010A C0E0       922            push    acc
010C 7446       923            mov     a,#0x46
010E C0E0       924            push    acc
0110 8A82       925            mov     dpl,r2
0112 8B83       926            mov     dph,r3
0114 8CF0       927            mov     b,r4
0116 ED         928            mov     a,r5
0117 120100     929            lcall   ___fsdiv
011A AA82       930            mov     r2,dpl
011C AB83       931            mov     r3,dph
011E ACF0       932            mov     r4,b
0120 FD         933            mov     r5,a
0121 E581       934            mov     a,sp
0123 24FC       935            add     a,#0xfc
0125 F581       936            mov     sp,a
0127 8A82       937            mov     dpl,r2
0129 8B83       938            mov     dph,r3
012B 8CF0       939            mov     b,r4
012D ED         940            mov     a,r5
012E 22         941            ret
012F            942   ;------------------------------------------------------------
012F            943   ;Allocation info for local variables in function 'mot_dir'
012F            944   ;------------------------------------------------------------
012F            945   ;MR                        Allocated with name '_mot_dir_PARM_2'
012F            946   ;ML                        Allocated to registers r2 r3 
012F            947   ;------------------------------------------------------------
012F            948   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:86: void mot_dir(int ML, int MR)
012F            949   ;        -----------------------------------------
012F            950   ;         function mot_dir
012F            951   ;        -----------------------------------------
012F            952   _mot_dir:
012F AA82       953            mov     r2,dpl
0131 AB83       954            mov     r3,dph
0133            955   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:88: ML_dir = ML;
0133 EA         956            mov     a,r2
0134 4B         957            orl     a,r3
0135 24FF       958            add     a,#0xff
0137 92B8       959            mov     _ML_dir,c
0139            960   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:89: MR_dir = MR;
0139 E540       961            mov     a,_mot_dir_PARM_2
013B 4541       962            orl     a,(_mot_dir_PARM_2 + 1)
013D 24FF       963            add     a,#0xff
013F 9278       964            mov     _MR_dir,c
0141 22         965            ret
0142            966   ;------------------------------------------------------------
0142            967   ;Allocation info for local variables in function 'stop'
0142            968   ;------------------------------------------------------------
0142            969   ;------------------------------------------------------------
0142            970   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:92: void stop(void){
0142            971   ;        -----------------------------------------
0142            972   ;         function stop
0142            973   ;        -----------------------------------------
0142            974   _stop:
0142            975   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:93: pwmL=0;
0142 9018E0     976            mov     dptr,#_pwmL
0145 E4         977            clr     a
0146 F0         978            movx    @dptr,a
0147 A3         979            inc     dptr
0148 F0         980            movx    @dptr,a
0149            981   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:94: pwmR=0;   
0149 9018A0     982            mov     dptr,#_pwmR
014C E4         983            clr     a
014D F0         984            movx    @dptr,a
014E A3         985            inc     dptr
014F F0         986            movx    @dptr,a
0150            987   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:95: waitms(100);
0150 900064     988            mov     dptr,#0x0064
0153 020100     989            ljmp    _waitms
0156            990   ;------------------------------------------------------------
0156            991   ;Allocation info for local variables in function 'spin_left'
0156            992   ;------------------------------------------------------------
0156            993   ;offset                    Allocated to registers r2 r3 
0156            994   ;------------------------------------------------------------
0156            995   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:98: void spin_left(int offset)
0156            996   ;        -----------------------------------------
0156            997   ;         function spin_left
0156            998   ;        -----------------------------------------
0156            999   _spin_left:
0156 AA82      1000            mov     r2,dpl
0158 AB83      1001            mov     r3,dph
015A           1002   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:100: mot_dir(1,0);
015A E4        1003            clr     a
015B F540      1004            mov     _mot_dir_PARM_2,a
015D F541      1005            mov     (_mot_dir_PARM_2 + 1),a
015F 900001    1006            mov     dptr,#0x0001
0162 C002      1007            push    ar2
0164 C003      1008            push    ar3
0166 120100    1009            lcall   _mot_dir
0169 D003      1010            pop     ar3
016B D002      1011            pop     ar2
016D           1012   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:101: pwmR = BOOSTPWM+offset;
016D 9018A0    1013            mov     dptr,#_pwmR
0170 7455      1014            mov     a,#0x55
0172 2A        1015            add     a,r2
0173 F0        1016            movx    @dptr,a
0174 E4        1017            clr     a
0175 3B        1018            addc    a,r3
0176 A3        1019            inc     dptr
0177 F0        1020            movx    @dptr,a
0178           1021   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:102: pwmL = BASEPWM+offset;
0178 9018E0    1022            mov     dptr,#_pwmL
017B 7428      1023            mov     a,#0x28
017D 2A        1024            add     a,r2
017E F0        1025            movx    @dptr,a
017F E4        1026            clr     a
0180 3B        1027            addc    a,r3
0181 A3        1028            inc     dptr
0182 F0        1029            movx    @dptr,a
0183 22        1030            ret
0184           1031   ;------------------------------------------------------------
0184           1032   ;Allocation info for local variables in function 'spin_right'
0184           1033   ;------------------------------------------------------------
0184           1034   ;offset                    Allocated to registers r2 r3 
0184           1035   ;------------------------------------------------------------
0184           1036   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:106: void spin_right(int offset)
0184           1037   ;        -----------------------------------------
0184           1038   ;         function spin_right
0184           1039   ;        -----------------------------------------
0184           1040   _spin_right:
0184 AA82      1041            mov     r2,dpl
0186 AB83      1042            mov     r3,dph
0188           1043   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:108: mot_dir(0,1);
0188 754001    1044            mov     _mot_dir_PARM_2,#0x01
018B E4        1045            clr     a
018C F541      1046            mov     (_mot_dir_PARM_2 + 1),a
018E 900000    1047            mov     dptr,#0x0000
0191 C002      1048            push    ar2
0193 C003      1049            push    ar3
0195 120100    1050            lcall   _mot_dir
0198 D003      1051            pop     ar3
019A D002      1052            pop     ar2
019C           1053   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:109: pwmL = BOOSTPWM+offset;
019C 9018E0    1054            mov     dptr,#_pwmL
019F 7455      1055            mov     a,#0x55
01A1 2A        1056            add     a,r2
01A2 F0        1057            movx    @dptr,a
01A3 E4        1058            clr     a
01A4 3B        1059            addc    a,r3
01A5 A3        1060            inc     dptr
01A6 F0        1061            movx    @dptr,a
01A7           1062   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:110: pwmR = BASEPWM+offset;   
01A7 9018A0    1063            mov     dptr,#_pwmR
01AA 7428      1064            mov     a,#0x28
01AC 2A        1065            add     a,r2
01AD F0        1066            movx    @dptr,a
01AE E4        1067            clr     a
01AF 3B        1068            addc    a,r3
01B0 A3        1069            inc     dptr
01B1 F0        1070            movx    @dptr,a
01B2 22        1071            ret
01B3           1072   ;------------------------------------------------------------
01B3           1073   ;Allocation info for local variables in function 'debug'
01B3           1074   ;------------------------------------------------------------
01B3           1075   ;------------------------------------------------------------
01B3           1076   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:113: void debug( void )
01B3           1077   ;        -----------------------------------------
01B3           1078   ;         function debug
01B3           1079   ;        -----------------------------------------
01B3           1080   _debug:
01B3           1081   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:116: stop();
01B3 120100    1082            lcall   _stop
01B6           1083   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:117: while(1);
01B6           1084   L012002?:
01B6 8001      1085            sjmp    L012002?
01B8           1086   ;------------------------------------------------------------
01B8           1087   ;Allocation info for local variables in function 'claw_control'
01B8           1088   ;------------------------------------------------------------
01B8           1089   ;------------------------------------------------------------
01B8           1090   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:121: void claw_control(void)
01B8           1091   ;        -----------------------------------------
01B8           1092   ;         function claw_control
01B8           1093   ;        -----------------------------------------
01B8           1094   _claw_control:
01B8           1095   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:123: claw_count++;
01B8 9017E0    1096            mov     dptr,#_claw_count
01BB E0        1097            movx    a,@dptr
01BC 2401      1098            add     a,#0x01
01BE F0        1099            movx    @dptr,a
01BF A3        1100            inc     dptr
01C0 E0        1101            movx    a,@dptr
01C1 3400      1102            addc    a,#0x00
01C3 F0        1103            movx    @dptr,a
01C4           1104   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:124: if (claw_count > 199) claw_count=0;
01C4 9017E0    1105            mov     dptr,#_claw_count
01C7 E0        1106            movx    a,@dptr
01C8 FA        1107            mov     r2,a
01C9 A3        1108            inc     dptr
01CA E0        1109            movx    a,@dptr
01CB FB        1110            mov     r3,a
01CC C3        1111            clr     c
01CD 74C7      1112            mov     a,#0xC7
01CF 9A        1113            subb    a,r2
01D0 E4        1114            clr     a
01D1 6480      1115            xrl     a,#0x80
01D3 8BF0      1116            mov     b,r3
01D5 63F080    1117            xrl     b,#0x80
01D8 95F0      1118            subb    a,b
01DA 5001      1119            jnc     L013002?
01DC 9017E0    1120            mov     dptr,#_claw_count
01DF E4        1121            clr     a
01E0 F0        1122            movx    @dptr,a
01E1 A3        1123            inc     dptr
01E2 F0        1124            movx    @dptr,a
01E3           1125   L013002?:
01E3           1126   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:126: if (claw_count < 5)
01E3 9017E0    1127            mov     dptr,#_claw_count
01E6 E0        1128            movx    a,@dptr
01E7 FA        1129            mov     r2,a
01E8 A3        1130            inc     dptr
01E9 E0        1131            movx    a,@dptr
01EA FB        1132            mov     r3,a
01EB C3        1133            clr     c
01EC EA        1134            mov     a,r2
01ED 9405      1135            subb    a,#0x05
01EF EB        1136            mov     a,r3
01F0 6480      1137            xrl     a,#0x80
01F2 9480      1138            subb    a,#0x80
01F4 5001      1139            jnc     L013007?
01F6           1140   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:128: P2_1=!P2_1;
01F6 B2A1      1141            cpl     _P2_1
01F8           1142   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:129: CLAW_L = 1;
01F8 901760    1143            mov     dptr,#_CLAW_L
01FB 7401      1144            mov     a,#0x01
01FD F0        1145            movx    @dptr,a
01FE E4        1146            clr     a
01FF A3        1147            inc     dptr
0200 F0        1148            movx    @dptr,a
0201           1149   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:130: CLAW_R = 1;
0201 9017A0    1150            mov     dptr,#_CLAW_R
0204 7401      1151            mov     a,#0x01
0206 F0        1152            movx    @dptr,a
0207 E4        1153            clr     a
0208 A3        1154            inc     dptr
0209 F0        1155            movx    @dptr,a
020A 22        1156            ret
020B           1157   L013007?:
020B           1158   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:131: } else if (claw_count >= 22) {
020B 9017E0    1159            mov     dptr,#_claw_count
020E E0        1160            movx    a,@dptr
020F FA        1161            mov     r2,a
0210 A3        1162            inc     dptr
0211 E0        1163            movx    a,@dptr
0212 FB        1164            mov     r3,a
0213 C3        1165            clr     c
0214 EA        1166            mov     a,r2
0215 9416      1167            subb    a,#0x16
0217 EB        1168            mov     a,r3
0218 6480      1169            xrl     a,#0x80
021A 9480      1170            subb    a,#0x80
021C 4001      1171            jc      L013004?
021E           1172   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:132: CLAW_L = 0;
021E 901760    1173            mov     dptr,#_CLAW_L
0221 E4        1174            clr     a
0222 F0        1175            movx    @dptr,a
0223 A3        1176            inc     dptr
0224 F0        1177            movx    @dptr,a
0225           1178   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:133: CLAW_R = 0;
0225 9017A0    1179            mov     dptr,#_CLAW_R
0228 E4        1180            clr     a
0229 F0        1181            movx    @dptr,a
022A A3        1182            inc     dptr
022B F0        1183            movx    @dptr,a
022C 22        1184            ret
022D           1185   L013004?:
022D           1186   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:135: CLAW_L = (claw_count < claw_pos + 5) ? 1 : 0;
022D 901720    1187            mov     dptr,#_claw_pos
0230 E0        1188            movx    a,@dptr
0231 FA        1189            mov     r2,a
0232 A3        1190            inc     dptr
0233 E0        1191            movx    a,@dptr
0234 FB        1192            mov     r3,a
0235 7405      1193            mov     a,#0x05
0237 2A        1194            add     a,r2
0238 FA        1195            mov     r2,a
0239 E4        1196            clr     a
023A 3B        1197            addc    a,r3
023B FB        1198            mov     r3,a
023C 9017E0    1199            mov     dptr,#_claw_count
023F E0        1200            movx    a,@dptr
0240 FC        1201            mov     r4,a
0241 A3        1202            inc     dptr
0242 E0        1203            movx    a,@dptr
0243 FD        1204            mov     r5,a
0244 C3        1205            clr     c
0245 EC        1206            mov     a,r4
0246 9A        1207            subb    a,r2
0247 ED        1208            mov     a,r5
0248 6480      1209            xrl     a,#0x80
024A 8BF0      1210            mov     b,r3
024C 63F080    1211            xrl     b,#0x80
024F 95F0      1212            subb    a,b
0251 5001      1213            jnc     L013011?
0253 7A01      1214            mov     r2,#0x01
0255 8001      1215            sjmp    L013012?
0257           1216   L013011?:
0257 7A00      1217            mov     r2,#0x00
0259           1218   L013012?:
0259 901760    1219            mov     dptr,#_CLAW_L
025C EA        1220            mov     a,r2
025D F0        1221            movx    @dptr,a
025E A3        1222            inc     dptr
025F E4        1223            clr     a
0260 F0        1224            movx    @dptr,a
0261           1225   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:136: CLAW_R = (claw_count < 22 - claw_pos) ? 1 : 0;
0261 901720    1226            mov     dptr,#_claw_pos
0264 E0        1227            movx    a,@dptr
0265 FA        1228            mov     r2,a
0266 A3        1229            inc     dptr
0267 E0        1230            movx    a,@dptr
0268 FB        1231            mov     r3,a
0269 7416      1232            mov     a,#0x16
026B C3        1233            clr     c
026C 9A        1234            subb    a,r2
026D FA        1235            mov     r2,a
026E E4        1236            clr     a
026F 9B        1237            subb    a,r3
0270 FB        1238            mov     r3,a
0271 9017E0    1239            mov     dptr,#_claw_count
0274 E0        1240            movx    a,@dptr
0275 FC        1241            mov     r4,a
0276 A3        1242            inc     dptr
0277 E0        1243            movx    a,@dptr
0278 FD        1244            mov     r5,a
0279 C3        1245            clr     c
027A EC        1246            mov     a,r4
027B 9A        1247            subb    a,r2
027C ED        1248            mov     a,r5
027D 6480      1249            xrl     a,#0x80
027F 8BF0      1250            mov     b,r3
0281 63F080    1251            xrl     b,#0x80
0284 95F0      1252            subb    a,b
0286 5001      1253            jnc     L013013?
0288 7A01      1254            mov     r2,#0x01
028A 8001      1255            sjmp    L013014?
028C           1256   L013013?:
028C 7A00      1257            mov     r2,#0x00
028E           1258   L013014?:
028E 9017A0    1259            mov     dptr,#_CLAW_R
0291 EA        1260            mov     a,r2
0292 F0        1261            movx    @dptr,a
0293 A3        1262            inc     dptr
0294 E4        1263            clr     a
0295 F0        1264            movx    @dptr,a
0296 22        1265            ret
0297           1266   ;------------------------------------------------------------
0297           1267   ;Allocation info for local variables in function 'sonar_op'
0297           1268   ;------------------------------------------------------------
0297           1269   ;------------------------------------------------------------
0297           1270   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:141: void sonar_op(void)
0297           1271   ;        -----------------------------------------
0297           1272   ;         function sonar_op
0297           1273   ;        -----------------------------------------
0297           1274   _sonar_op:
0297           1275   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:144: Trig = pwm_count >= 50?0:1;
0297 C3        1276            clr     c
0298 E5F8      1277            mov     a,_pwm_count
029A 9432      1278            subb    a,#0x32
029C E5F9      1279            mov     a,(_pwm_count + 1)
029E 6480      1280            xrl     a,#0x80
02A0 9480      1281            subb    a,#0x80
02A2 9290      1282            mov     _P1_0,c
02A4           1283   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:147: if (!sonar_state) {
02A4 202080    1284            jb      _sonar_state,L014007?
02A7           1285   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:148: if (P0_7) {
02A7 3087C0    1286            jnb     _P0_7,L014009?
02AA           1287   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:149: sonar_state = 1;
02AA D220      1288            setb    _sonar_state
02AC           1289   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:150: sonar_count = 0;
02AC E4        1290            clr     a
02AD F578      1291            mov     _sonar_count,a
02AF F579      1292            mov     (_sonar_count + 1),a
02B1 22        1293            ret
02B2           1294   L014007?:
02B2           1295   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:152: } else if (P0_7) {
02B2 308700    1296            jnb     _P0_7,L014004?
02B5           1297   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:153: sonar_count++;
02B5 7401      1298            mov     a,#0x01
02B7 2578      1299            add     a,_sonar_count
02B9 F578      1300            mov     _sonar_count,a
02BB E4        1301            clr     a
02BC 3579      1302            addc    a,(_sonar_count + 1)
02BE F579      1303            mov     (_sonar_count + 1),a
02C0 22        1304            ret
02C1           1305   L014004?:
02C1           1306   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:156: sonar_count_2 = sonar_count;
02C1 857838    1307            mov     _sonar_count_2,_sonar_count
02C4 857939    1308            mov     (_sonar_count_2 + 1),(_sonar_count + 1)
02C7           1309   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:158: sonar_state = 0;
02C7 C220      1310            clr     _sonar_state
02C9           1311   L014009?:
02C9 22        1312            ret
02CA           1313   ;------------------------------------------------------------
02CA           1314   ;Allocation info for local variables in function 'Distance'
02CA           1315   ;------------------------------------------------------------
02CA           1316   ;------------------------------------------------------------
02CA           1317   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:162: float Distance ( void )
02CA           1318   ;        -----------------------------------------
02CA           1319   ;         function Distance
02CA           1320   ;        -----------------------------------------
02CA           1321   _Distance:
02CA           1322   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:164: return sonar_count_2;    
02CA 853882    1323            mov     dpl,_sonar_count_2
02CD 853983    1324            mov     dph,(_sonar_count_2 + 1)
02D0 020100    1325            ljmp    ___sint2fs
02D3           1326   ;------------------------------------------------------------
02D3           1327   ;Allocation info for local variables in function 'Claw_Pos'
02D3           1328   ;------------------------------------------------------------
02D3           1329   ;pos                       Allocated to registers r2 r3 
02D3           1330   ;------------------------------------------------------------
02D3           1331   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:167: void Claw_Pos( int pos ) 
02D3           1332   ;        -----------------------------------------
02D3           1333   ;         function Claw_Pos
02D3           1334   ;        -----------------------------------------
02D3           1335   _Claw_Pos:
02D3 AA82      1336            mov     r2,dpl
02D5 AB83      1337            mov     r3,dph
02D7           1338   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\/lewislib.h:169: claw_pos = pos;
02D7 901720    1339            mov     dptr,#_claw_pos
02DA EA        1340            mov     a,r2
02DB F0        1341            movx    @dptr,a
02DC A3        1342            inc     dptr
02DD EB        1343            mov     a,r3
02DE F0        1344            movx    @dptr,a
02DF 22        1345            ret
02E0           1346   ;------------------------------------------------------------
02E0           1347   ;Allocation info for local variables in function '_c51_external_startup'
02E0           1348   ;------------------------------------------------------------
02E0           1349   ;------------------------------------------------------------
02E0           1350   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:60: char _c51_external_startup (void)
02E0           1351   ;        -----------------------------------------
02E0           1352   ;         function _c51_external_startup
02E0           1353   ;        -----------------------------------------
02E0           1354   __c51_external_startup:
02E0           1355   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:63: SFRPAGE = 0x00;
02E0 75A700    1356            mov     _SFRPAGE,#0x00
02E3           1357   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:64: WDTCN = 0xDE; //First key
02E3 7597DE    1358            mov     _WDTCN,#0xDE
02E6           1359   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:65: WDTCN = 0xAD; //Second key
02E6 7597AD    1360            mov     _WDTCN,#0xAD
02E9           1361   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:67: VDM0CN=0x80;       // enable VDD monitor
02E9 75FF80    1362            mov     _VDM0CN,#0x80
02EC           1363   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:68: RSTSRC=0x02|0x04;  // Enable reset on missing clock detector and VDD
02EC 75EF06    1364            mov     _RSTSRC,#0x06
02EF           1365   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:75: SFRPAGE = 0x10;
02EF 75A710    1366            mov     _SFRPAGE,#0x10
02F2           1367   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:76: PFE0CN  = 0x20; // SYSCLK < 75 MHz.
02F2 75C120    1368            mov     _PFE0CN,#0x20
02F5           1369   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:77: SFRPAGE = 0x00;
02F5 75A700    1370            mov     _SFRPAGE,#0x00
02F8           1371   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:98: CLKSEL = 0x00;
02F8 75A900    1372            mov     _CLKSEL,#0x00
02FB           1373   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:99: CLKSEL = 0x00;
02FB 75A900    1374            mov     _CLKSEL,#0x00
02FE           1375   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:100: while ((CLKSEL & 0x80) == 0);
02FE           1376   L017001?:
02FE E5A9      1377            mov     a,_CLKSEL
0300 30E780    1378            jnb     acc.7,L017001?
0303           1379   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:101: CLKSEL = 0x03;
0303 75A903    1380            mov     _CLKSEL,#0x03
0306           1381   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:102: CLKSEL = 0x03;
0306 75A903    1382            mov     _CLKSEL,#0x03
0309           1383   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:103: while ((CLKSEL & 0x80) == 0);
0309           1384   L017004?:
0309 E5A9      1385            mov     a,_CLKSEL
030B 30E7C0    1386            jnb     acc.7,L017004?
030E           1387   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:108: P0MDOUT |= 0x10; // Enable UART0 TX as push-pull output
030E 43A410    1388            orl     _P0MDOUT,#0x10
0311           1389   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:109: XBR0     = 0x01; // Enable UART0 on P0.4(TX) and P0.5(RX)                     
0311 75E101    1390            mov     _XBR0,#0x01
0314           1391   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:110: XBR1     = 0X00;
0314 75E200    1392            mov     _XBR1,#0x00
0317           1393   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:111: XBR2     = 0x40; // Enable crossbar and weak pull-ups
0317 75E340    1394            mov     _XBR2,#0x40
031A           1395   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:117: SCON0 = 0x10;
031A 759810    1396            mov     _SCON0,#0x10
031D           1397   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:118: TH1 = 0x100-((SYSCLK/BAUDRATE)/(2L*12L));
031D 758DE6    1398            mov     _TH1,#0xE6
0320           1399   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:119: TL1 = TH1;      // Init Timer1
0320 858D8B    1400            mov     _TL1,_TH1
0323           1401   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:120: TMOD &= ~0xf0;  // TMOD: timer 1 in 8-bit auto-reload
0323 53890F    1402            anl     _TMOD,#0x0F
0326           1403   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:121: TMOD |=  0x20;                       
0326 438920    1404            orl     _TMOD,#0x20
0329           1405   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:122: TR1 = 1; // START Timer1
0329 D28E      1406            setb    _TR1
032B           1407   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:123: TI = 1;  // Indicate TX0 ready
032B D299      1408            setb    _TI
032D           1409   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:126: TMR2CN0=0x00;   // Stop Timer2; Clear TF2;
032D 75C800    1410            mov     _TMR2CN0,#0x00
0330           1411   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:127: CKCON0|=0b_0001_0000; // Timer 2 uses the system clock
0330 438E10    1412            orl     _CKCON0,#0x10
0333           1413   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:128: TMR2RL=(0x10000L-(SYSCLK/10000L)); // Initialize reload value
0333 75CAE0    1414            mov     _TMR2RL,#0xE0
0336 75CBE3    1415            mov     (_TMR2RL >> 8),#0xE3
0339           1416   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:129: TMR2=0xffff;   // Set to reload immediately
0339 75CEFF    1417            mov     _TMR2,#0xFF
033C 75CFFF    1418            mov     (_TMR2 >> 8),#0xFF
033F           1419   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:130: ET2=1;         // Enable Timer2 interrupts
033F D2AD      1420            setb    _ET2
0341           1421   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:131: TR2=1;         // Start Timer2 (TMR2CN is bit addressable)
0341 D2CA      1422            setb    _TR2
0343           1423   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:133: EA=1; // Enable interrupts
0343 D2AF      1424            setb    _EA
0345           1425   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:135: return 0;
0345 758200    1426            mov     dpl,#0x00
0348 22        1427            ret
0349           1428   ;------------------------------------------------------------
0349           1429   ;Allocation info for local variables in function 'Timer2_ISR'
0349           1430   ;------------------------------------------------------------
0349           1431   ;------------------------------------------------------------
0349           1432   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:138: void Timer2_ISR (void) interrupt 5 using 2
0349           1433   ;        -----------------------------------------
0349           1434   ;         function Timer2_ISR
0349           1435   ;        -----------------------------------------
0349           1436   _Timer2_ISR:
0349           1437            using   2
0349 C0C0      1438            push    bits
034B C0E0      1439            push    acc
034D C0F0      1440            push    b
034F C082      1441            push    dpl
0351 C083      1442            push    dph
0353 C002      1443            push    (0+2)
0355 C003      1444            push    (0+3)
0357 C004      1445            push    (0+4)
0359 C005      1446            push    (0+5)
035B C006      1447            push    (0+6)
035D C007      1448            push    (0+7)
035F C000      1449            push    (0+0)
0361 C001      1450            push    (0+1)
0363 C0D0      1451            push    psw
0365 75D010    1452            mov     psw,#0x10
0368           1453   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:140: TF2H = 0; // Clear Timer2 interrupt flag
0368 C2CF      1454            clr     _TF2H
036A           1455   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:142: pwm_count++;
036A 7401      1456            mov     a,#0x01
036C 25F8      1457            add     a,_pwm_count
036E F5F8      1458            mov     _pwm_count,a
0370 E4        1459            clr     a
0371 35F9      1460            addc    a,(_pwm_count + 1)
0373 F5F9      1461            mov     (_pwm_count + 1),a
0375           1462   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:143: if (pwm_count >= 100) {
0375 C3        1463            clr     c
0376 E5F8      1464            mov     a,_pwm_count
0378 9464      1465            subb    a,#0x64
037A E5F9      1466            mov     a,(_pwm_count + 1)
037C 6480      1467            xrl     a,#0x80
037E 9480      1468            subb    a,#0x80
0380 4001      1469            jc      L018004?
0382           1470   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:144: pwm_count=0;
0382 E4        1471            clr     a
0383 F5F8      1472            mov     _pwm_count,a
0385 F5F9      1473            mov     (_pwm_count + 1),a
0387           1474   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:145: timer_count++;
0387 901820    1475            mov     dptr,#_timer_count
038A E0        1476            movx    a,@dptr
038B 2401      1477            add     a,#0x01
038D F0        1478            movx    @dptr,a
038E A3        1479            inc     dptr
038F E0        1480            movx    a,@dptr
0390 3400      1481            addc    a,#0x00
0392 F0        1482            movx    @dptr,a
0393           1483   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:146: if (timer_count >= 50) {              //every 0.5 seconds enter
0393 901820    1484            mov     dptr,#_timer_count
0396 E0        1485            movx    a,@dptr
0397 FA        1486            mov     r2,a
0398 A3        1487            inc     dptr
0399 E0        1488            movx    a,@dptr
039A FB        1489            mov     r3,a
039B C3        1490            clr     c
039C EA        1491            mov     a,r2
039D 9432      1492            subb    a,#0x32
039F EB        1493            mov     a,r3
03A0 9400      1494            subb    a,#0x00
03A2 4001      1495            jc      L018004?
03A4           1496   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:147: timer_count =  0;
03A4 901820    1497            mov     dptr,#_timer_count
03A7 E4        1498            clr     a
03A8 F0        1499            movx    @dptr,a
03A9 A3        1500            inc     dptr
03AA F0        1501            movx    @dptr,a
03AB           1502   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:148: dir_flag = 0;         
03AB C208      1503            clr     _dir_flag
03AD           1504   L018004?:
03AD           1505   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:151: claw_control();
03AD 75D000    1506            mov     psw,#0x00
03B0 120100    1507            lcall   _claw_control
03B3           1508   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:154: sonar_op();
03B3 75D000    1509            mov     psw,#0x00
03B6 120100    1510            lcall   _sonar_op
03B9 75D010    1511            mov     psw,#0x10
03BC D0D0      1512            pop     psw
03BE D001      1513            pop     (0+1)
03C0 D000      1514            pop     (0+0)
03C2 D007      1515            pop     (0+7)
03C4 D006      1516            pop     (0+6)
03C6 D005      1517            pop     (0+5)
03C8 D004      1518            pop     (0+4)
03CA D003      1519            pop     (0+3)
03CC D002      1520            pop     (0+2)
03CE D083      1521            pop     dph
03D0 D082      1522            pop     dpl
03D2 D0F0      1523            pop     b
03D4 D0E0      1524            pop     acc
03D6 D0C0      1525            pop     bits
03D8 32        1526            reti
03D9           1527   ;------------------------------------------------------------
03D9           1528   ;Allocation info for local variables in function 'Detect_Object'
03D9           1529   ;------------------------------------------------------------
03D9           1530   ;------------------------------------------------------------
03D9           1531   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:160: int Detect_Object (/*int distancepwm*/void)
03D9           1532   ;        -----------------------------------------
03D9           1533   ;         function Detect_Object
03D9           1534   ;        -----------------------------------------
03D9           1535   _Detect_Object:
03D9           1536            using   0
03D9           1537   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:165: if (((Volts_at_Pin(QFP32_MUX_P1_2) * 1000) < 1000) || ((Volts_at_Pin(QFP32_MUX_P1_3) * 1000) < 1000))
03D9 758208    1538            mov     dpl,#0x08
03DC 120100    1539            lcall   _Volts_at_Pin
03DF AA82      1540            mov     r2,dpl
03E1 AB83      1541            mov     r3,dph
03E3 ACF0      1542            mov     r4,b
03E5 FD        1543            mov     r5,a
03E6 C002      1544            push    ar2
03E8 C003      1545            push    ar3
03EA C004      1546            push    ar4
03EC C005      1547            push    ar5
03EE 900000    1548            mov     dptr,#0x0000
03F1 75F07A    1549            mov     b,#0x7A
03F4 7444      1550            mov     a,#0x44
03F6 120100    1551            lcall   ___fsmul
03F9 AA82      1552            mov     r2,dpl
03FB AB83      1553            mov     r3,dph
03FD ACF0      1554            mov     r4,b
03FF FD        1555            mov     r5,a
0400 E581      1556            mov     a,sp
0402 24FC      1557            add     a,#0xfc
0404 F581      1558            mov     sp,a
0406 E4        1559            clr     a
0407 C0E0      1560            push    acc
0409 C0E0      1561            push    acc
040B 747A      1562            mov     a,#0x7A
040D C0E0      1563            push    acc
040F 7444      1564            mov     a,#0x44
0411 C0E0      1565            push    acc
0413 8A82      1566            mov     dpl,r2
0415 8B83      1567            mov     dph,r3
0417 8CF0      1568            mov     b,r4
0419 ED        1569            mov     a,r5
041A 120100    1570            lcall   ___fslt
041D AA82      1571            mov     r2,dpl
041F E581      1572            mov     a,sp
0421 24FC      1573            add     a,#0xfc
0423 F581      1574            mov     sp,a
0425 EA        1575            mov     a,r2
0426 7001      1576            jnz     L019001?
0428 758209    1577            mov     dpl,#0x09
042B 120100    1578            lcall   _Volts_at_Pin
042E AA82      1579            mov     r2,dpl
0430 AB83      1580            mov     r3,dph
0432 ACF0      1581            mov     r4,b
0434 FD        1582            mov     r5,a
0435 C002      1583            push    ar2
0437 C003      1584            push    ar3
0439 C004      1585            push    ar4
043B C005      1586            push    ar5
043D 900000    1587            mov     dptr,#0x0000
0440 75F07A    1588            mov     b,#0x7A
0443 7444      1589            mov     a,#0x44
0445 120100    1590            lcall   ___fsmul
0448 AA82      1591            mov     r2,dpl
044A AB83      1592            mov     r3,dph
044C ACF0      1593            mov     r4,b
044E FD        1594            mov     r5,a
044F E581      1595            mov     a,sp
0451 24FC      1596            add     a,#0xfc
0453 F581      1597            mov     sp,a
0455 E4        1598            clr     a
0456 C0E0      1599            push    acc
0458 C0E0      1600            push    acc
045A 747A      1601            mov     a,#0x7A
045C C0E0      1602            push    acc
045E 7444      1603            mov     a,#0x44
0460 C0E0      1604            push    acc
0462 8A82      1605            mov     dpl,r2
0464 8B83      1606            mov     dph,r3
0466 8CF0      1607            mov     b,r4
0468 ED        1608            mov     a,r5
0469 120100    1609            lcall   ___fslt
046C AA82      1610            mov     r2,dpl
046E E581      1611            mov     a,sp
0470 24FC      1612            add     a,#0xfc
0472 F581      1613            mov     sp,a
0474 EA        1614            mov     a,r2
0475 6001      1615            jz      L019002?
0477           1616   L019001?:
0477           1617   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:166: return 1;
0477 900001    1618            mov     dptr,#0x0001
047A           1619   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:168: return 0;
047A 22        1620            ret
047B           1621   L019002?:
047B 900000    1622            mov     dptr,#0x0000
047E 22        1623            ret
047F           1624   ;------------------------------------------------------------
047F           1625   ;Allocation info for local variables in function 'Find_Object'
047F           1626   ;------------------------------------------------------------
047F           1627   ;------------------------------------------------------------
047F           1628   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:171: void Find_Object( void )
047F           1629   ;        -----------------------------------------
047F           1630   ;         function Find_Object
047F           1631   ;        -----------------------------------------
047F           1632   _Find_Object:
047F           1633   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:174: if (dir) {
047F 303840    1634            jnb     _dir,L020002?
0482           1635   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:176: mot_dir(1,0);
0482 E4        1636            clr     a
0483 F540      1637            mov     _mot_dir_PARM_2,a
0485 F541      1638            mov     (_mot_dir_PARM_2 + 1),a
0487 900001    1639            mov     dptr,#0x0001
048A 120100    1640            lcall   _mot_dir
048D           1641   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:177: pwmR = 0;
048D 9018A0    1642            mov     dptr,#_pwmR
0490 E4        1643            clr     a
0491 F0        1644            movx    @dptr,a
0492 A3        1645            inc     dptr
0493 F0        1646            movx    @dptr,a
0494           1647   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:178: pwmL = BASEPWM;
0494 9018E0    1648            mov     dptr,#_pwmL
0497 7428      1649            mov     a,#0x28
0499 F0        1650            movx    @dptr,a
049A E4        1651            clr     a
049B A3        1652            inc     dptr
049C F0        1653            movx    @dptr,a
049D 8001      1654            sjmp    L020004?
049F           1655   L020002?:
049F           1656   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:181: mot_dir(0,1);
049F 754001    1657            mov     _mot_dir_PARM_2,#0x01
04A2 E4        1658            clr     a
04A3 F541      1659            mov     (_mot_dir_PARM_2 + 1),a
04A5 900000    1660            mov     dptr,#0x0000
04A8 120100    1661            lcall   _mot_dir
04AB           1662   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:182: pwmR = BASEPWM;
04AB 9018A0    1663            mov     dptr,#_pwmR
04AE 7428      1664            mov     a,#0x28
04B0 F0        1665            movx    @dptr,a
04B1 E4        1666            clr     a
04B2 A3        1667            inc     dptr
04B3 F0        1668            movx    @dptr,a
04B4           1669   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:183: pwmL =0;
04B4 9018E0    1670            mov     dptr,#_pwmL
04B7 E4        1671            clr     a
04B8 F0        1672            movx    @dptr,a
04B9 A3        1673            inc     dptr
04BA F0        1674            movx    @dptr,a
04BB           1675   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:186: while (Detect_Object() != 1);                 //locate an object with the IR sensors
04BB           1676   L020004?:
04BB 120100    1677            lcall   _Detect_Object
04BE AA82      1678            mov     r2,dpl
04C0 AB83      1679            mov     r3,dph
04C2 BA0180    1680            cjne    r2,#0x01,L020004?
04C5 BB0080    1681            cjne    r3,#0x00,L020004?
04C8 22        1682            ret
04C9           1683   ;------------------------------------------------------------
04C9           1684   ;Allocation info for local variables in function 'US_Ratio_CM'
04C9           1685   ;------------------------------------------------------------
04C9           1686   ;ratio                     Allocated to registers r2 r3 r4 r5 
04C9           1687   ;------------------------------------------------------------
04C9           1688   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:191: float US_Ratio_CM (float ratio)
04C9           1689   ;        -----------------------------------------
04C9           1690   ;         function US_Ratio_CM
04C9           1691   ;        -----------------------------------------
04C9           1692   _US_Ratio_CM:
04C9 AA82      1693            mov     r2,dpl
04CB AB83      1694            mov     r3,dph
04CD ACF0      1695            mov     r4,b
04CF FD        1696            mov     r5,a
04D0           1697   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:193: return (ratio-0.015)/(0.0055);
04D0 748F      1698            mov     a,#0x8F
04D2 C0E0      1699            push    acc
04D4 74C2      1700            mov     a,#0xC2
04D6 C0E0      1701            push    acc
04D8 7475      1702            mov     a,#0x75
04DA C0E0      1703            push    acc
04DC 743C      1704            mov     a,#0x3C
04DE C0E0      1705            push    acc
04E0 8A82      1706            mov     dpl,r2
04E2 8B83      1707            mov     dph,r3
04E4 8CF0      1708            mov     b,r4
04E6 ED        1709            mov     a,r5
04E7 120100    1710            lcall   ___fssub
04EA AA82      1711            mov     r2,dpl
04EC AB83      1712            mov     r3,dph
04EE ACF0      1713            mov     r4,b
04F0 FD        1714            mov     r5,a
04F1 E581      1715            mov     a,sp
04F3 24FC      1716            add     a,#0xfc
04F5 F581      1717            mov     sp,a
04F7 7458      1718            mov     a,#0x58
04F9 C0E0      1719            push    acc
04FB 7439      1720            mov     a,#0x39
04FD C0E0      1721            push    acc
04FF 74B4      1722            mov     a,#0xB4
0501 C0E0      1723            push    acc
0503 743B      1724            mov     a,#0x3B
0505 C0E0      1725            push    acc
0507 8A82      1726            mov     dpl,r2
0509 8B83      1727            mov     dph,r3
050B 8CF0      1728            mov     b,r4
050D ED        1729            mov     a,r5
050E 120100    1730            lcall   ___fsdiv
0511 AA82      1731            mov     r2,dpl
0513 AB83      1732            mov     r3,dph
0515 ACF0      1733            mov     r4,b
0517 FD        1734            mov     r5,a
0518 E581      1735            mov     a,sp
051A 24FC      1736            add     a,#0xfc
051C F581      1737            mov     sp,a
051E 8A82      1738            mov     dpl,r2
0520 8B83      1739            mov     dph,r3
0522 8CF0      1740            mov     b,r4
0524 ED        1741            mov     a,r5
0525 22        1742            ret
0526           1743   ;------------------------------------------------------------
0526           1744   ;Allocation info for local variables in function 'main'
0526           1745   ;------------------------------------------------------------
0526           1746   ;temp                      Allocated to registers 
0526           1747   ;------------------------------------------------------------
0526           1748   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:197: void main (void)
0526           1749   ;        -----------------------------------------
0526           1750   ;         function main
0526           1751   ;        -----------------------------------------
0526           1752   _main:
0526           1753   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:200: stop();
0526 120100    1754            lcall   _stop
0529           1755   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:202: InitPinADC(1, 6); // Configure as analog input        //PR L
0529 759006    1756            mov     _InitPinADC_PARM_2,#0x06
052C 758201    1757            mov     dpl,#0x01
052F 120100    1758            lcall   _InitPinADC
0532           1759   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:203: InitPinADC(1, 5); // Configure as analog input        //PR M
0532 759005    1760            mov     _InitPinADC_PARM_2,#0x05
0535 758201    1761            mov     dpl,#0x01
0538 120100    1762            lcall   _InitPinADC
053B           1763   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:204: InitPinADC(1, 4); // Configure as analog input        //PR R
053B 759004    1764            mov     _InitPinADC_PARM_2,#0x04
053E 758201    1765            mov     dpl,#0x01
0541 120100    1766            lcall   _InitPinADC
0544           1767   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:205: InitPinADC(1, 3); // Configure as analog input        //IR L
0544 759003    1768            mov     _InitPinADC_PARM_2,#0x03
0547 758201    1769            mov     dpl,#0x01
054A 120100    1770            lcall   _InitPinADC
054D           1771   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:206: InitPinADC(1, 2); // Configure as analog input        //IR R
054D 759002    1772            mov     _InitPinADC_PARM_2,#0x02
0550 758201    1773            mov     dpl,#0x01
0553 120100    1774            lcall   _InitPinADC
0556           1775   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:207: InitADC();
0556 120100    1776            lcall   _InitADC
0559           1777   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:208: P0_7 = 1;
0559 D287      1778            setb    _P0_7
055B           1779   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:211: while(1) {
055B           1780   L022002?:
055B           1781   ;        D:\School\Elec 291\Project 2\mcar\autonomous_firmware\TestingSonar.c:214: printf("%d %d\n", sonar_state,sonar_count_2);
055B A220      1782            mov     c,_sonar_state
055D E4        1783            clr     a
055E 33        1784            rlc     a
055F FA        1785            mov     r2,a
0560 7B00      1786            mov     r3,#0x00
0562 C038      1787            push    _sonar_count_2
0564 C039      1788            push    (_sonar_count_2 + 1)
0566 C002      1789            push    ar2
0568 C003      1790            push    ar3
056A 7440      1791            mov     a,#__str_0
056C C0E0      1792            push    acc
056E 74CA      1793            mov     a,#(__str_0 >> 8)
0570 C0E0      1794            push    acc
0572 7480      1795            mov     a,#0x80
0574 C0E0      1796            push    acc
0576 120100    1797            lcall   _printf
0579 E581      1798            mov     a,sp
057B 24F9      1799            add     a,#0xf9
057D F581      1800            mov     sp,a
057F 8001      1801            sjmp    L022002?
0581           1802            rseg R_CSEG
0581           1803   
0000           1804            rseg R_XINIT
0000           1805   __xinit__pwmL:
0000 FFFF      1806            db 0xFF,0xFF    ; 65535
0002           1807   __xinit__pwmR:
0002 FFFF      1808            db 0xFF,0xFF    ; 65535
0004           1809   __xinit__pwm:
0004 FFFF      1810            db 0xFF,0xFF    ; 65535
0006           1811   __xinit__timer_count:
0006 0000      1812            db 0x00,0x00    ; 0
0008           1813   __xinit__claw_count:
0008 0000      1814            db 0x00,0x00    ;  0
000A           1815   __xinit__CLAW_R:
000A 0000      1816            db 0x00,0x00    ;  0
000C           1817   __xinit__CLAW_L:
000C 0000      1818            db 0x00,0x00    ;  0
000E           1819   __xinit__claw_pos:
000E 0100      1820            db 0x01,0x00    ;  1
0010           1821   
0000           1822            rseg R_CONST
0000           1823   __str_0:
0000 25642025  1824            db '%d %d'
     64
0005 0A        1825            db 0x0A
0006 00        1826            db 0x00
0007           1827   
002E           1828            CSEG
002E           1829   
002E           1830   end
