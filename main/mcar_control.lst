0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1069 (Apr 23 2015) (MSVC)
0000              4   ; This file was generated Sun Apr 01 16:38:44 2018
0000              5   ;--------------------------------------------------------
                  5   $name mcar_control
                  6   $optc51 --model-small
0000              8            R_DSEG    segment data
0000              9            R_CSEG    segment code
0000             10            R_BSEG    segment bit
0000             11            R_XSEG    segment xdata
0000             12            R_PSEG    segment xdata
0000             13            R_ISEG    segment idata
0000             14            R_OSEG    segment data overlay
0000             15            BIT_BANK  segment data overlay
0000             16            R_HOME    segment code
0000             17            R_GSINIT  segment code
0000             18            R_IXSEG   segment xdata
0000             19            R_CONST   segment code
0000             20            R_XINIT   segment code
0000             21            R_DINIT   segment code
0000             22   
0000             23   ;--------------------------------------------------------
0000             24   ; Public variables in this module
0000             25   ;--------------------------------------------------------
0000             26            public _mot_dir_PARM_2
0000             27            public _InitPinADC_PARM_2
0000             28            public _main
0000             29            public _Timer2_ISR
0000             30            public __c51_external_startup
0000             31            public _Run_Autonomous
0000             32            public _Find_Object
0000             33            public _Detect_Object
0000             34            public _Track_Object
0000             35            public _Follow_Tape
0000             36            public _Calibrate_LSensors
0000             37            public _Distance
0000             38            public _sonar_op
0000             39            public _claw_control
0000             40            public _debug
0000             41            public _spin_right
0000             42            public _spin_left
0000             43            public _stop
0000             44            public _mot_dir
0000             45            public _Volts_at_Pin
0000             46            public _ADC_at_Pin
0000             47            public _InitPinADC
0000             48            public _waitms
0000             49            public _Timer3us
0000             50            public _InitADC
0000             51            public _timer_count
0000             52            public _pwm_count
0000             53            public _dir_count
0000             54            public _pwm
0000             55            public _pwmR
0000             56            public _pwmL
0000             57            public _sonar_state
0000             58            public _circ2
0000             59            public _break_when_dir_found
0000             60            public _dir_flag
0000             61            public _find_circle2_flag
0000             62            public _find_circle1_flag
0000             63            public _find_bridge_flag
0000             64            public _dir
0000             65            public _ML_dir
0000             66            public _MR_dir
0000             67            public _Bridge_Rotate_PARM_3
0000             68            public _Bridge_Rotate_PARM_2
0000             69            public _Rotate_PARM_2
0000             70            public _Find_Tape_PARM_2
0000             71            public _Follow_Tape_PARM_3
0000             72            public _Follow_Tape_PARM_2
0000             73            public _Calibrate_LSensors_PARM_3
0000             74            public _Calibrate_LSensors_PARM_2
0000             75            public _claw_count
0000             76            public _claw_pos
0000             77            public _sonar_count_2
0000             78            public _sonar_count
0000             79            public _Claw_Pos
0000             80            public _Find_Tape
0000             81            public _Rotate
0000             82            public _Bridge_Rotate
0000             83   ;--------------------------------------------------------
0000             84   ; Special Function Registers
0000             85   ;--------------------------------------------------------
0000             86   _ACC            DATA 0xe0
0000             87   _ADC0ASAH       DATA 0xb6
0000             88   _ADC0ASAL       DATA 0xb5
0000             89   _ADC0ASCF       DATA 0xa1
0000             90   _ADC0ASCT       DATA 0xc7
0000             91   _ADC0CF0        DATA 0xbc
0000             92   _ADC0CF1        DATA 0xb9
0000             93   _ADC0CF2        DATA 0xdf
0000             94   _ADC0CN0        DATA 0xe8
0000             95   _ADC0CN1        DATA 0xb2
0000             96   _ADC0CN2        DATA 0xb3
0000             97   _ADC0GTH        DATA 0xc4
0000             98   _ADC0GTL        DATA 0xc3
0000             99   _ADC0H          DATA 0xbe
0000            100   _ADC0L          DATA 0xbd
0000            101   _ADC0LTH        DATA 0xc6
0000            102   _ADC0LTL        DATA 0xc5
0000            103   _ADC0MX         DATA 0xbb
0000            104   _B              DATA 0xf0
0000            105   _CKCON0         DATA 0x8e
0000            106   _CKCON1         DATA 0xa6
0000            107   _CLEN0          DATA 0xc6
0000            108   _CLIE0          DATA 0xc7
0000            109   _CLIF0          DATA 0xe8
0000            110   _CLKSEL         DATA 0xa9
0000            111   _CLOUT0         DATA 0xd1
0000            112   _CLU0CF         DATA 0xb1
0000            113   _CLU0FN         DATA 0xaf
0000            114   _CLU0MX         DATA 0x84
0000            115   _CLU1CF         DATA 0xb3
0000            116   _CLU1FN         DATA 0xb2
0000            117   _CLU1MX         DATA 0x85
0000            118   _CLU2CF         DATA 0xb6
0000            119   _CLU2FN         DATA 0xb5
0000            120   _CLU2MX         DATA 0x91
0000            121   _CLU3CF         DATA 0xbf
0000            122   _CLU3FN         DATA 0xbe
0000            123   _CLU3MX         DATA 0xae
0000            124   _CMP0CN0        DATA 0x9b
0000            125   _CMP0CN1        DATA 0x99
0000            126   _CMP0MD         DATA 0x9d
0000            127   _CMP0MX         DATA 0x9f
0000            128   _CMP1CN0        DATA 0xbf
0000            129   _CMP1CN1        DATA 0xac
0000            130   _CMP1MD         DATA 0xab
0000            131   _CMP1MX         DATA 0xaa
0000            132   _CRC0CN0        DATA 0xce
0000            133   _CRC0CN1        DATA 0x86
0000            134   _CRC0CNT        DATA 0xd3
0000            135   _CRC0DAT        DATA 0xcb
0000            136   _CRC0FLIP       DATA 0xcf
0000            137   _CRC0IN         DATA 0xca
0000            138   _CRC0ST         DATA 0xd2
0000            139   _DAC0CF0        DATA 0x91
0000            140   _DAC0CF1        DATA 0x92
0000            141   _DAC0H          DATA 0x85
0000            142   _DAC0L          DATA 0x84
0000            143   _DAC1CF0        DATA 0x93
0000            144   _DAC1CF1        DATA 0x94
0000            145   _DAC1H          DATA 0x8a
0000            146   _DAC1L          DATA 0x89
0000            147   _DAC2CF0        DATA 0x95
0000            148   _DAC2CF1        DATA 0x96
0000            149   _DAC2H          DATA 0x8c
0000            150   _DAC2L          DATA 0x8b
0000            151   _DAC3CF0        DATA 0x9a
0000            152   _DAC3CF1        DATA 0x9c
0000            153   _DAC3H          DATA 0x8e
0000            154   _DAC3L          DATA 0x8d
0000            155   _DACGCF0        DATA 0x88
0000            156   _DACGCF1        DATA 0x98
0000            157   _DACGCF2        DATA 0xa2
0000            158   _DERIVID        DATA 0xad
0000            159   _DEVICEID       DATA 0xb5
0000            160   _DPH            DATA 0x83
0000            161   _DPL            DATA 0x82
0000            162   _EIE1           DATA 0xe6
0000            163   _EIE2           DATA 0xf3
0000            164   _EIP1           DATA 0xbb
0000            165   _EIP1H          DATA 0xee
0000            166   _EIP2           DATA 0xed
0000            167   _EIP2H          DATA 0xf6
0000            168   _EMI0CN         DATA 0xe7
0000            169   _FLKEY          DATA 0xb7
0000            170   _HFO0CAL        DATA 0xc7
0000            171   _HFO1CAL        DATA 0xd6
0000            172   _HFOCN          DATA 0xef
0000            173   _I2C0ADM        DATA 0xff
0000            174   _I2C0CN0        DATA 0xba
0000            175   _I2C0DIN        DATA 0xbc
0000            176   _I2C0DOUT       DATA 0xbb
0000            177   _I2C0FCN0       DATA 0xad
0000            178   _I2C0FCN1       DATA 0xab
0000            179   _I2C0FCT        DATA 0xf5
0000            180   _I2C0SLAD       DATA 0xbd
0000            181   _I2C0STAT       DATA 0xb9
0000            182   _IE             DATA 0xa8
0000            183   _IP             DATA 0xb8
0000            184   _IPH            DATA 0xf2
0000            185   _IT01CF         DATA 0xe4
0000            186   _LFO0CN         DATA 0xb1
0000            187   _P0             DATA 0x80
0000            188   _P0MASK         DATA 0xfe
0000            189   _P0MAT          DATA 0xfd
0000            190   _P0MDIN         DATA 0xf1
0000            191   _P0MDOUT        DATA 0xa4
0000            192   _P0SKIP         DATA 0xd4
0000            193   _P1             DATA 0x90
0000            194   _P1MASK         DATA 0xee
0000            195   _P1MAT          DATA 0xed
0000            196   _P1MDIN         DATA 0xf2
0000            197   _P1MDOUT        DATA 0xa5
0000            198   _P1SKIP         DATA 0xd5
0000            199   _P2             DATA 0xa0
0000            200   _P2MASK         DATA 0xfc
0000            201   _P2MAT          DATA 0xfb
0000            202   _P2MDIN         DATA 0xf3
0000            203   _P2MDOUT        DATA 0xa6
0000            204   _P2SKIP         DATA 0xcc
0000            205   _P3             DATA 0xb0
0000            206   _P3MDIN         DATA 0xf4
0000            207   _P3MDOUT        DATA 0x9c
0000            208   _PCA0CENT       DATA 0x9e
0000            209   _PCA0CLR        DATA 0x9c
0000            210   _PCA0CN0        DATA 0xd8
0000            211   _PCA0CPH0       DATA 0xfc
0000            212   _PCA0CPH1       DATA 0xea
0000            213   _PCA0CPH2       DATA 0xec
0000            214   _PCA0CPH3       DATA 0xf5
0000            215   _PCA0CPH4       DATA 0x85
0000            216   _PCA0CPH5       DATA 0xde
0000            217   _PCA0CPL0       DATA 0xfb
0000            218   _PCA0CPL1       DATA 0xe9
0000            219   _PCA0CPL2       DATA 0xeb
0000            220   _PCA0CPL3       DATA 0xf4
0000            221   _PCA0CPL4       DATA 0x84
0000            222   _PCA0CPL5       DATA 0xdd
0000            223   _PCA0CPM0       DATA 0xda
0000            224   _PCA0CPM1       DATA 0xdb
0000            225   _PCA0CPM2       DATA 0xdc
0000            226   _PCA0CPM3       DATA 0xae
0000            227   _PCA0CPM4       DATA 0xaf
0000            228   _PCA0CPM5       DATA 0xcc
0000            229   _PCA0H          DATA 0xfa
0000            230   _PCA0L          DATA 0xf9
0000            231   _PCA0MD         DATA 0xd9
0000            232   _PCA0POL        DATA 0x96
0000            233   _PCA0PWM        DATA 0xf7
0000            234   _PCON0          DATA 0x87
0000            235   _PCON1          DATA 0xcd
0000            236   _PFE0CN         DATA 0xc1
0000            237   _PRTDRV         DATA 0xf6
0000            238   _PSCTL          DATA 0x8f
0000            239   _PSTAT0         DATA 0xaa
0000            240   _PSW            DATA 0xd0
0000            241   _REF0CN         DATA 0xd1
0000            242   _REG0CN         DATA 0xc9
0000            243   _REVID          DATA 0xb6
0000            244   _RSTSRC         DATA 0xef
0000            245   _SBCON1         DATA 0x94
0000            246   _SBRLH1         DATA 0x96
0000            247   _SBRLL1         DATA 0x95
0000            248   _SBUF           DATA 0x99
0000            249   _SBUF0          DATA 0x99
0000            250   _SBUF1          DATA 0x92
0000            251   _SCON           DATA 0x98
0000            252   _SCON0          DATA 0x98
0000            253   _SCON1          DATA 0xc8
0000            254   _SFRPAGE        DATA 0xa7
0000            255   _SFRPGCN        DATA 0xbc
0000            256   _SFRSTACK       DATA 0xd7
0000            257   _SMB0ADM        DATA 0xd6
0000            258   _SMB0ADR        DATA 0xd7
0000            259   _SMB0CF         DATA 0xc1
0000            260   _SMB0CN0        DATA 0xc0
0000            261   _SMB0DAT        DATA 0xc2
0000            262   _SMB0FCN0       DATA 0xc3
0000            263   _SMB0FCN1       DATA 0xc4
0000            264   _SMB0FCT        DATA 0xef
0000            265   _SMB0RXLN       DATA 0xc5
0000            266   _SMB0TC         DATA 0xac
0000            267   _SMOD1          DATA 0x93
0000            268   _SP             DATA 0x81
0000            269   _SPI0CFG        DATA 0xa1
0000            270   _SPI0CKR        DATA 0xa2
0000            271   _SPI0CN0        DATA 0xf8
0000            272   _SPI0DAT        DATA 0xa3
0000            273   _SPI0FCN0       DATA 0x9a
0000            274   _SPI0FCN1       DATA 0x9b
0000            275   _SPI0FCT        DATA 0xf7
0000            276   _SPI0PCF        DATA 0xdf
0000            277   _TCON           DATA 0x88
0000            278   _TH0            DATA 0x8c
0000            279   _TH1            DATA 0x8d
0000            280   _TL0            DATA 0x8a
0000            281   _TL1            DATA 0x8b
0000            282   _TMOD           DATA 0x89
0000            283   _TMR2CN0        DATA 0xc8
0000            284   _TMR2CN1        DATA 0xfd
0000            285   _TMR2H          DATA 0xcf
0000            286   _TMR2L          DATA 0xce
0000            287   _TMR2RLH        DATA 0xcb
0000            288   _TMR2RLL        DATA 0xca
0000            289   _TMR3CN0        DATA 0x91
0000            290   _TMR3CN1        DATA 0xfe
0000            291   _TMR3H          DATA 0x95
0000            292   _TMR3L          DATA 0x94
0000            293   _TMR3RLH        DATA 0x93
0000            294   _TMR3RLL        DATA 0x92
0000            295   _TMR4CN0        DATA 0x98
0000            296   _TMR4CN1        DATA 0xff
0000            297   _TMR4H          DATA 0xa5
0000            298   _TMR4L          DATA 0xa4
0000            299   _TMR4RLH        DATA 0xa3
0000            300   _TMR4RLL        DATA 0xa2
0000            301   _TMR5CN0        DATA 0xc0
0000            302   _TMR5CN1        DATA 0xf1
0000            303   _TMR5H          DATA 0xd5
0000            304   _TMR5L          DATA 0xd4
0000            305   _TMR5RLH        DATA 0xd3
0000            306   _TMR5RLL        DATA 0xd2
0000            307   _UART0PCF       DATA 0xd9
0000            308   _UART1FCN0      DATA 0x9d
0000            309   _UART1FCN1      DATA 0xd8
0000            310   _UART1FCT       DATA 0xfa
0000            311   _UART1LIN       DATA 0x9e
0000            312   _UART1PCF       DATA 0xda
0000            313   _VDM0CN         DATA 0xff
0000            314   _WDTCN          DATA 0x97
0000            315   _XBR0           DATA 0xe1
0000            316   _XBR1           DATA 0xe2
0000            317   _XBR2           DATA 0xe3
0000            318   _XOSC0CN        DATA 0x86
0000            319   _DPTR           DATA 0x8382
0000            320   _TMR2RL         DATA 0xcbca
0000            321   _TMR3RL         DATA 0x9392
0000            322   _TMR4RL         DATA 0xa3a2
0000            323   _TMR5RL         DATA 0xd3d2
0000            324   _TMR0           DATA 0x8c8a
0000            325   _TMR1           DATA 0x8d8b
0000            326   _TMR2           DATA 0xcfce
0000            327   _TMR3           DATA 0x9594
0000            328   _TMR4           DATA 0xa5a4
0000            329   _TMR5           DATA 0xd5d4
0000            330   _SBRL1          DATA 0x9695
0000            331   _PCA0           DATA 0xfaf9
0000            332   _PCA0CP0        DATA 0xfcfb
0000            333   _PCA0CP1        DATA 0xeae9
0000            334   _PCA0CP2        DATA 0xeceb
0000            335   _PCA0CP3        DATA 0xf5f4
0000            336   _PCA0CP4        DATA 0x8584
0000            337   _PCA0CP5        DATA 0xdedd
0000            338   _ADC0ASA        DATA 0xb6b5
0000            339   _ADC0GT         DATA 0xc4c3
0000            340   _ADC0           DATA 0xbebd
0000            341   _ADC0LT         DATA 0xc6c5
0000            342   _DAC0           DATA 0x8584
0000            343   _DAC1           DATA 0x8a89
0000            344   _DAC2           DATA 0x8c8b
0000            345   _DAC3           DATA 0x8e8d
0000            346   ;--------------------------------------------------------
0000            347   ; special function bits
0000            348   ;--------------------------------------------------------
0000            349   _ACC_0          BIT 0xe0
0000            350   _ACC_1          BIT 0xe1
0000            351   _ACC_2          BIT 0xe2
0000            352   _ACC_3          BIT 0xe3
0000            353   _ACC_4          BIT 0xe4
0000            354   _ACC_5          BIT 0xe5
0000            355   _ACC_6          BIT 0xe6
0000            356   _ACC_7          BIT 0xe7
0000            357   _TEMPE          BIT 0xe8
0000            358   _ADGN0          BIT 0xe9
0000            359   _ADGN1          BIT 0xea
0000            360   _ADWINT         BIT 0xeb
0000            361   _ADBUSY         BIT 0xec
0000            362   _ADINT          BIT 0xed
0000            363   _IPOEN          BIT 0xee
0000            364   _ADEN           BIT 0xef
0000            365   _B_0            BIT 0xf0
0000            366   _B_1            BIT 0xf1
0000            367   _B_2            BIT 0xf2
0000            368   _B_3            BIT 0xf3
0000            369   _B_4            BIT 0xf4
0000            370   _B_5            BIT 0xf5
0000            371   _B_6            BIT 0xf6
0000            372   _B_7            BIT 0xf7
0000            373   _C0FIF          BIT 0xe8
0000            374   _C0RIF          BIT 0xe9
0000            375   _C1FIF          BIT 0xea
0000            376   _C1RIF          BIT 0xeb
0000            377   _C2FIF          BIT 0xec
0000            378   _C2RIF          BIT 0xed
0000            379   _C3FIF          BIT 0xee
0000            380   _C3RIF          BIT 0xef
0000            381   _D1SRC0         BIT 0x88
0000            382   _D1SRC1         BIT 0x89
0000            383   _D1AMEN         BIT 0x8a
0000            384   _D01REFSL       BIT 0x8b
0000            385   _D3SRC0         BIT 0x8c
0000            386   _D3SRC1         BIT 0x8d
0000            387   _D3AMEN         BIT 0x8e
0000            388   _D23REFSL       BIT 0x8f
0000            389   _D0UDIS         BIT 0x98
0000            390   _D1UDIS         BIT 0x99
0000            391   _D2UDIS         BIT 0x9a
0000            392   _D3UDIS         BIT 0x9b
0000            393   _EX0            BIT 0xa8
0000            394   _ET0            BIT 0xa9
0000            395   _EX1            BIT 0xaa
0000            396   _ET1            BIT 0xab
0000            397   _ES0            BIT 0xac
0000            398   _ET2            BIT 0xad
0000            399   _ESPI0          BIT 0xae
0000            400   _EA             BIT 0xaf
0000            401   _PX0            BIT 0xb8
0000            402   _PT0            BIT 0xb9
0000            403   _PX1            BIT 0xba
0000            404   _PT1            BIT 0xbb
0000            405   _PS0            BIT 0xbc
0000            406   _PT2            BIT 0xbd
0000            407   _PSPI0          BIT 0xbe
0000            408   _P0_0           BIT 0x80
0000            409   _P0_1           BIT 0x81
0000            410   _P0_2           BIT 0x82
0000            411   _P0_3           BIT 0x83
0000            412   _P0_4           BIT 0x84
0000            413   _P0_5           BIT 0x85
0000            414   _P0_6           BIT 0x86
0000            415   _P0_7           BIT 0x87
0000            416   _P1_0           BIT 0x90
0000            417   _P1_1           BIT 0x91
0000            418   _P1_2           BIT 0x92
0000            419   _P1_3           BIT 0x93
0000            420   _P1_4           BIT 0x94
0000            421   _P1_5           BIT 0x95
0000            422   _P1_6           BIT 0x96
0000            423   _P1_7           BIT 0x97
0000            424   _P2_0           BIT 0xa0
0000            425   _P2_1           BIT 0xa1
0000            426   _P2_2           BIT 0xa2
0000            427   _P2_3           BIT 0xa3
0000            428   _P2_4           BIT 0xa4
0000            429   _P2_5           BIT 0xa5
0000            430   _P2_6           BIT 0xa6
0000            431   _P3_0           BIT 0xb0
0000            432   _P3_1           BIT 0xb1
0000            433   _P3_2           BIT 0xb2
0000            434   _P3_3           BIT 0xb3
0000            435   _P3_4           BIT 0xb4
0000            436   _P3_7           BIT 0xb7
0000            437   _CCF0           BIT 0xd8
0000            438   _CCF1           BIT 0xd9
0000            439   _CCF2           BIT 0xda
0000            440   _CCF3           BIT 0xdb
0000            441   _CCF4           BIT 0xdc
0000            442   _CCF5           BIT 0xdd
0000            443   _CR             BIT 0xde
0000            444   _CF             BIT 0xdf
0000            445   _PARITY         BIT 0xd0
0000            446   _F1             BIT 0xd1
0000            447   _OV             BIT 0xd2
0000            448   _RS0            BIT 0xd3
0000            449   _RS1            BIT 0xd4
0000            450   _F0             BIT 0xd5
0000            451   _AC             BIT 0xd6
0000            452   _CY             BIT 0xd7
0000            453   _RI             BIT 0x98
0000            454   _TI             BIT 0x99
0000            455   _RB8            BIT 0x9a
0000            456   _TB8            BIT 0x9b
0000            457   _REN            BIT 0x9c
0000            458   _CE             BIT 0x9d
0000            459   _SMODE          BIT 0x9e
0000            460   _RI1            BIT 0xc8
0000            461   _TI1            BIT 0xc9
0000            462   _RBX1           BIT 0xca
0000            463   _TBX1           BIT 0xcb
0000            464   _REN1           BIT 0xcc
0000            465   _PERR1          BIT 0xcd
0000            466   _OVR1           BIT 0xce
0000            467   _SI             BIT 0xc0
0000            468   _ACK            BIT 0xc1
0000            469   _ARBLOST        BIT 0xc2
0000            470   _ACKRQ          BIT 0xc3
0000            471   _STO            BIT 0xc4
0000            472   _STA            BIT 0xc5
0000            473   _TXMODE         BIT 0xc6
0000            474   _MASTER         BIT 0xc7
0000            475   _SPIEN          BIT 0xf8
0000            476   _TXNF           BIT 0xf9
0000            477   _NSSMD0         BIT 0xfa
0000            478   _NSSMD1         BIT 0xfb
0000            479   _RXOVRN         BIT 0xfc
0000            480   _MODF           BIT 0xfd
0000            481   _WCOL           BIT 0xfe
0000            482   _SPIF           BIT 0xff
0000            483   _IT0            BIT 0x88
0000            484   _IE0            BIT 0x89
0000            485   _IT1            BIT 0x8a
0000            486   _IE1            BIT 0x8b
0000            487   _TR0            BIT 0x8c
0000            488   _TF0            BIT 0x8d
0000            489   _TR1            BIT 0x8e
0000            490   _TF1            BIT 0x8f
0000            491   _T2XCLK0        BIT 0xc8
0000            492   _T2XCLK1        BIT 0xc9
0000            493   _TR2            BIT 0xca
0000            494   _T2SPLIT        BIT 0xcb
0000            495   _TF2CEN         BIT 0xcc
0000            496   _TF2LEN         BIT 0xcd
0000            497   _TF2L           BIT 0xce
0000            498   _TF2H           BIT 0xcf
0000            499   _T4XCLK0        BIT 0x98
0000            500   _T4XCLK1        BIT 0x99
0000            501   _TR4            BIT 0x9a
0000            502   _T4SPLIT        BIT 0x9b
0000            503   _TF4CEN         BIT 0x9c
0000            504   _TF4LEN         BIT 0x9d
0000            505   _TF4L           BIT 0x9e
0000            506   _TF4H           BIT 0x9f
0000            507   _T5XCLK0        BIT 0xc0
0000            508   _T5XCLK1        BIT 0xc1
0000            509   _TR5            BIT 0xc2
0000            510   _T5SPLIT        BIT 0xc3
0000            511   _TF5CEN         BIT 0xc4
0000            512   _TF5LEN         BIT 0xc5
0000            513   _TF5L           BIT 0xc6
0000            514   _TF5H           BIT 0xc7
0000            515   _RIE            BIT 0xd8
0000            516   _RXTO0          BIT 0xd9
0000            517   _RXTO1          BIT 0xda
0000            518   _RFRQ           BIT 0xdb
0000            519   _TIE            BIT 0xdc
0000            520   _TXHOLD         BIT 0xdd
0000            521   _TXNF1          BIT 0xde
0000            522   _TFRQ           BIT 0xdf
0000            523   ;--------------------------------------------------------
0000            524   ; overlayable register banks
0000            525   ;--------------------------------------------------------
0000            526            rbank0 segment data overlay
0000            527            rbank2 segment data overlay
0000            528   ;--------------------------------------------------------
0000            529   ; overlayable bit register bank
0000            530   ;--------------------------------------------------------
0000            531            rseg BIT_BANK
0000            532   bits:
0000            533            ds 1
0001            534            b0 equ  bits.0 
0001            535            b1 equ  bits.1 
0001            536            b2 equ  bits.2 
0001            537            b3 equ  bits.3 
0001            538            b4 equ  bits.4 
0001            539            b5 equ  bits.5 
0001            540            b6 equ  bits.6 
0001            541            b7 equ  bits.7 
0001            542   ;--------------------------------------------------------
0001            543   ; internal ram data
0001            544   ;--------------------------------------------------------
0000            545            rseg R_DSEG
0000            546   _sonar_count:
0000            547            ds 2
0002            548   _sonar_count_2:
0002            549            ds 2
0004            550   _claw_pos:
0004            551            ds 2
0006            552   _claw_count:
0006            553            ds 2
0008            554   _Calibrate_LSensors_PARM_2:
0008            555            ds 3
000B            556   _Calibrate_LSensors_PARM_3:
000B            557            ds 3
000E            558   _Calibrate_LSensors_VL_1_107:
000E            559            ds 3
0011            560   _Follow_Tape_PARM_2:
0011            561            ds 3
0014            562   _Follow_Tape_PARM_3:
0014            563            ds 3
0017            564   _Follow_Tape_gnd_VL_1_119:
0017            565            ds 3
001A            566   _Follow_Tape_sloc0_1_0:
001A            567            ds 3
001D            568   _Follow_Tape_sloc1_1_0:
001D            569            ds 3
0020            570   _Follow_Tape_sloc2_1_0:
0020            571            ds 4
0024            572   _Follow_Tape_sloc3_1_0:
0024            573            ds 4
0028            574   _Follow_Tape_sloc4_1_0:
0028            575            ds 4
002C            576   _Find_Tape_PARM_2:
002C            577            ds 2
002E            578   _Find_Tape_gnd_VM_1_144:
002E            579            ds 3
0031            580   _Rotate_PARM_2:
0031            581            ds 3
0034            582   _Rotate_gnd_VL_1_149:
0034            583            ds 3
0037            584   _Rotate_sloc0_1_0:
0037            585            ds 3
003A            586   _Bridge_Rotate_PARM_2:
003A            587            ds 3
003D            588   _Bridge_Rotate_PARM_3:
003D            589            ds 3
0040            590   _Bridge_Rotate_gnd_VL_1_159:
0040            591            ds 3
0043            592   _Bridge_Rotate_sloc0_1_0:
0043            593            ds 3
0046            594   _Bridge_Rotate_sloc1_1_0:
0046            595            ds 3
0049            596   _Bridge_Rotate_sloc2_1_0:
0049            597            ds 4
004D            598   ;--------------------------------------------------------
004D            599   ; overlayable items in internal ram 
004D            600   ;--------------------------------------------------------
0000            601            rseg    R_OSEG
0000            602            rseg    R_OSEG
0000            603   _InitPinADC_PARM_2:
0000            604            ds 1
0001            605            rseg    R_OSEG
0001            606            rseg    R_OSEG
0001            607   _mot_dir_PARM_2:
0001            608            ds 2
0003            609            rseg    R_OSEG
0003            610   ;--------------------------------------------------------
0003            611   ; indirectly addressable internal ram data
0003            612   ;--------------------------------------------------------
0000            613            rseg R_ISEG
0000            614   ;--------------------------------------------------------
0000            615   ; absolute internal ram data
0000            616   ;--------------------------------------------------------
0000            617            DSEG
0000            618   ;--------------------------------------------------------
0000            619   ; bit data
0000            620   ;--------------------------------------------------------
0000            621            rseg R_BSEG
0000            622   _MR_dir:
0000            623            DBIT    1
0001            624   _ML_dir:
0001            625            DBIT    1
0002            626   _dir:
0002            627            DBIT    1
0003            628   _find_bridge_flag:
0003            629            DBIT    1
0004            630   _find_circle1_flag:
0004            631            DBIT    1
0005            632   _find_circle2_flag:
0005            633            DBIT    1
0006            634   _dir_flag:
0006            635            DBIT    1
0007            636   _break_when_dir_found:
0007            637            DBIT    1
0008            638   _circ2:
0008            639            DBIT    1
0009            640   _sonar_state:
0009            641            DBIT    1
000A            642   _Track_Object_flag_1_136:
000A            643            DBIT    1
000B            644   _Find_Tape_flag_1_145:
000B            645            DBIT    1
000C            646   ;--------------------------------------------------------
000C            647   ; paged external ram data
000C            648   ;--------------------------------------------------------
0000            649            rseg R_PSEG
0000            650   ;--------------------------------------------------------
0000            651   ; external ram data
0000            652   ;--------------------------------------------------------
0000            653            rseg R_XSEG
0000            654   _Calibrate_LSensors_countL_1_108:
0000            655            ds 2
0002            656   _Calibrate_LSensors_countM_1_108:
0002            657            ds 2
0004            658   _Calibrate_LSensors_countR_1_108:
0004            659            ds 2
0006            660   _Calibrate_LSensors_flags_1_108:
0006            661            ds 2
0008            662   _Run_Autonomous_gnd_VL_1_164:
0008            663            ds 2
000A            664   _Run_Autonomous_gnd_VR_1_164:
000A            665            ds 2
000C            666   _Run_Autonomous_gnd_VM_1_164:
000C            667            ds 2
000E            668   ;--------------------------------------------------------
000E            669   ; absolute external ram data
000E            670   ;--------------------------------------------------------
0000            671            XSEG
0000            672   ;--------------------------------------------------------
0000            673   ; external initialized ram data
0000            674   ;--------------------------------------------------------
0000            675            rseg R_IXSEG
0000            676   _pwmL:
0000            677            ds 2
0002            678   _pwmR:
0002            679            ds 2
0004            680   _pwm:
0004            681            ds 2
0006            682   _dir_count:
0006            683            ds 2
0008            684   _pwm_count:
0008            685            ds 1
0009            686   _timer_count:
0009            687            ds 2
0000            688            rseg R_HOME
0000            689            rseg R_GSINIT
0000            690            rseg R_CSEG
0000            691   ;--------------------------------------------------------
0000            692   ; Reset entry point and interrupt vectors
0000            693   ;--------------------------------------------------------
0000            694            CSEG at 0x0000
0000 020100     695            ljmp    _crt0
002B            696            CSEG at 0x002b
002B 020100     697            ljmp    _Timer2_ISR
002E            698   ;--------------------------------------------------------
002E            699   ; global & static initialisations
002E            700   ;--------------------------------------------------------
0000            701            rseg R_HOME
0000            702            rseg R_GSINIT
0000            703            rseg R_GSINIT
0000            704   ;--------------------------------------------------------
0000            705   ; data variables initialization
0000            706   ;--------------------------------------------------------
0000            707            rseg R_DINIT
0000            708   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:39: volatile int sonar_count = 0;
0000 E4         709            clr     a
0001 F540       710            mov     _sonar_count,a
0003 F541       711            mov     (_sonar_count + 1),a
0005            712   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:40: volatile int sonar_count_2 = 0;
0005 E4         713            clr     a
0006 F500       714            mov     _sonar_count_2,a
0008 F501       715            mov     (_sonar_count_2 + 1),a
000A            716   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:52: volatile unsigned short claw_pos = 2;
000A 75C002     717            mov     _claw_pos,#0x02
000D E4         718            clr     a
000E F5C1       719            mov     (_claw_pos + 1),a
0010            720   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:53: volatile unsigned short claw_count = 0;
0010 E4         721            clr     a
0011 F580       722            mov     _claw_count,a
0013 F581       723            mov     (_claw_count + 1),a
0015            724   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:31: volatile bit MR_dir=0;
0015 C2D0       725            clr     _MR_dir
0017            726   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:32: volatile bit ML_dir=0;
0017 C290       727            clr     _ML_dir
0019            728   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:33: volatile bit dir=0;                                        //indicates if ccw or cw
0019 C250       729            clr     _dir
001B            730   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:43: volatile bit find_bridge_flag =0;
001B C210       731            clr     _find_bridge_flag
001D            732   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:44: volatile bit find_circle1_flag = 0;
001D C2C0       733            clr     _find_circle1_flag
001F            734   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:45: volatile bit find_circle2_flag = 0;
001F C270       735            clr     _find_circle2_flag
0021            736   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:46: volatile bit dir_flag=0;                   //set high to indicate that the dir_count has been incremented, wait for flag low
0021 C220       737            clr     _dir_flag
0023            738   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:47: volatile bit break_when_dir_found = 0;
0023 C2E0       739            clr     _break_when_dir_found
0025            740   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:48: volatile bit circ2 = 0;
0025 C290       741            clr     _circ2
0027            742   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:49: volatile bit sonar_state = 0;
0027 C230       743            clr     _sonar_state
0029            744            ; The linker places a 'ret' at the end of segment R_DINIT.
0029            745   ;--------------------------------------------------------
0029            746   ; code
0029            747   ;--------------------------------------------------------
0000            748            rseg R_CSEG
0000            749   ;------------------------------------------------------------
0000            750   ;Allocation info for local variables in function 'InitADC'
0000            751   ;------------------------------------------------------------
0000            752   ;------------------------------------------------------------
0000            753   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:2: void InitADC (void)
0000            754   ;        -----------------------------------------
0000            755   ;         function InitADC
0000            756   ;        -----------------------------------------
0000            757   _InitADC:
0000            758            using   0
0000            759   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:4: SFRPAGE = 0x00;
0000 75A700     760            mov     _SFRPAGE,#0x00
0003            761   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:5: ADC0CN1 = 0b_10_000_000; //14-bit,  Right justified no shifting applied, perform and Accumulate 1 conversion.
0003 75B280     762            mov     _ADC0CN1,#0x80
0006            763   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:6: ADC0CF0 = 0b_11111_0_00; // SYSCLK/32
0006 75BCF8     764            mov     _ADC0CF0,#0xF8
0009            765   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:7: ADC0CF1 = 0b_0_0_011110; // Same as default for now
0009 75B91E     766            mov     _ADC0CF1,#0x1E
000C            767   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:8: ADC0CN0 = 0b_0_0_0_0_0_00_0; // Same as default for now
000C 75E800     768            mov     _ADC0CN0,#0x00
000F            769   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:9: ADC0CF2 = 0b_0_01_11111 ; // GND pin, Vref=VDD
000F 75DF3F     770            mov     _ADC0CF2,#0x3F
0012            771   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:10: ADC0CN2 = 0b_0_000_0000;  // Same as default for now. ADC0 conversion initiated on write of 1 to ADBUSY.
0012 75B300     772            mov     _ADC0CN2,#0x00
0015            773   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:11: ADEN=1; // Enable ADC
0015 D2EF       774            setb    _ADEN
0017 22         775            ret
0018            776   ;------------------------------------------------------------
0018            777   ;Allocation info for local variables in function 'Timer3us'
0018            778   ;------------------------------------------------------------
0018            779   ;us                        Allocated to registers r2 
0018            780   ;i                         Allocated to registers r3 
0018            781   ;------------------------------------------------------------
0018            782   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:15: void Timer3us(unsigned char us)
0018            783   ;        -----------------------------------------
0018            784   ;         function Timer3us
0018            785   ;        -----------------------------------------
0018            786   _Timer3us:
0018 AA82       787            mov     r2,dpl
001A            788   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:20: CKCON0|=0b_0100_0000;
001A 438E40     789            orl     _CKCON0,#0x40
001D            790   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:22: TMR3RL = (-(SYSCLK)/1000000L); // Set Timer3 to overflow in 1us.
001D 7592B8     791            mov     _TMR3RL,#0xB8
0020 7593FF     792            mov     (_TMR3RL >> 8),#0xFF
0023            793   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:23: TMR3 = TMR3RL;                 // Initialize Timer3 for first overflow
0023 859294     794            mov     _TMR3,_TMR3RL
0026 859395     795            mov     (_TMR3 >> 8),(_TMR3RL >> 8)
0029            796   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:25: TMR3CN0 = 0x04;                 // Sart Timer3 and clear overflow flag
0029 759104     797            mov     _TMR3CN0,#0x04
002C            798   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:26: for (i = 0; i < us; i++)       // Count <us> overflows
002C 7B00       799            mov     r3,#0x00
002E            800   L003004?:
002E C3         801            clr     c
002F EB         802            mov     a,r3
0030 9A         803            subb    a,r2
0031 5001       804            jnc     L003007?
0033            805   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:28: while (!(TMR3CN0 & 0x80));  // Wait for overflow
0033            806   L003001?:
0033 E591       807            mov     a,_TMR3CN0
0035 30E7E0     808            jnb     acc.7,L003001?
0038            809   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:29: TMR3CN0 &= ~(0x80);         // Clear overflow indicator
0038 53917F     810            anl     _TMR3CN0,#0x7F
003B            811   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:26: for (i = 0; i < us; i++)       // Count <us> overflows
003B 0B         812            inc     r3
003C 8001       813            sjmp    L003004?
003E            814   L003007?:
003E            815   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:31: TMR3CN0 = 0 ;                   // Stop Timer3 and clear overflow flag
003E 759100     816            mov     _TMR3CN0,#0x00
0041 22         817            ret
0042            818   ;------------------------------------------------------------
0042            819   ;Allocation info for local variables in function 'waitms'
0042            820   ;------------------------------------------------------------
0042            821   ;ms                        Allocated to registers r2 r3 
0042            822   ;j                         Allocated to registers r4 r5 
0042            823   ;k                         Allocated to registers r6 
0042            824   ;------------------------------------------------------------
0042            825   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:34: void waitms (unsigned int ms)
0042            826   ;        -----------------------------------------
0042            827   ;         function waitms
0042            828   ;        -----------------------------------------
0042            829   _waitms:
0042 AA82       830            mov     r2,dpl
0044 AB83       831            mov     r3,dph
0046            832   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:38: for(j=0; j<ms; j++)
0046 7C00       833            mov     r4,#0x00
0048 7D00       834            mov     r5,#0x00
004A            835   L004005?:
004A C3         836            clr     c
004B EC         837            mov     a,r4
004C 9A         838            subb    a,r2
004D ED         839            mov     a,r5
004E 9B         840            subb    a,r3
004F 5001       841            jnc     L004009?
0051            842   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:39: for (k=0; k<4; k++) Timer3us(250);
0051 7E00       843            mov     r6,#0x00
0053            844   L004001?:
0053 BE0460     845            cjne    r6,#0x04,L004018?
0056            846   L004018?:
0056 5001       847            jnc     L004007?
0058 7582FA     848            mov     dpl,#0xFA
005B C002       849            push    ar2
005D C003       850            push    ar3
005F C004       851            push    ar4
0061 C005       852            push    ar5
0063 C006       853            push    ar6
0065 120100     854            lcall   _Timer3us
0068 D006       855            pop     ar6
006A D005       856            pop     ar5
006C D004       857            pop     ar4
006E D003       858            pop     ar3
0070 D002       859            pop     ar2
0072 0E         860            inc     r6
0073 8001       861            sjmp    L004001?
0075            862   L004007?:
0075            863   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:38: for(j=0; j<ms; j++)
0075 0C         864            inc     r4
0076 BC00A0     865            cjne    r4,#0x00,L004005?
0079 0D         866            inc     r5
007A 8001       867            sjmp    L004005?
007C            868   L004009?:
007C 22         869            ret
007D            870   ;------------------------------------------------------------
007D            871   ;Allocation info for local variables in function 'InitPinADC'
007D            872   ;------------------------------------------------------------
007D            873   ;pinno                     Allocated with name '_InitPinADC_PARM_2'
007D            874   ;portno                    Allocated to registers r2 
007D            875   ;mask                      Allocated to registers r3 
007D            876   ;------------------------------------------------------------
007D            877   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:44: void InitPinADC (unsigned char portno, unsigned char pinno)
007D            878   ;        -----------------------------------------
007D            879   ;         function InitPinADC
007D            880   ;        -----------------------------------------
007D            881   _InitPinADC:
007D AA82       882            mov     r2,dpl
007F            883   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:48: mask=1<<pinno;
007F 8590F0     884            mov     b,_InitPinADC_PARM_2
0082 05F0       885            inc     b
0084 7401       886            mov     a,#0x01
0086 8001       887            sjmp    L005013?
0088            888   L005011?:
0088 25E0       889            add     a,acc
008A            890   L005013?:
008A D5F060     891            djnz    b,L005011?
008D FB         892            mov     r3,a
008E            893   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:50: SFRPAGE = 0x20;
008E 75A720     894            mov     _SFRPAGE,#0x20
0091            895   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:51: switch (portno)
0091 BA00A0     896            cjne    r2,#0x00,L005014?
0094 8001       897            sjmp    L005001?
0096            898   L005014?:
0096 BA0120     899            cjne    r2,#0x01,L005015?
0099 8001       900            sjmp    L005002?
009B            901   L005015?:
009B            902   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:53: case 0:
009B BA02A0     903            cjne    r2,#0x02,L005005?
009E 8001       904            sjmp    L005003?
00A0            905   L005001?:
00A0            906   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:54: P0MDIN &= (~mask); // Set pin as analog input
00A0 EB         907            mov     a,r3
00A1 F4         908            cpl     a
00A2 FA         909            mov     r2,a
00A3 52F1       910            anl     _P0MDIN,a
00A5            911   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:55: P0SKIP |= mask; // Skip Crossbar decoding for this pin
00A5 EB         912            mov     a,r3
00A6 42D4       913            orl     _P0SKIP,a
00A8            914   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:56: break;
00A8            915   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:57: case 1:
00A8 8001       916            sjmp    L005005?
00AA            917   L005002?:
00AA            918   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:58: P1MDIN &= (~mask); // Set pin as analog input
00AA EB         919            mov     a,r3
00AB F4         920            cpl     a
00AC FA         921            mov     r2,a
00AD 52F2       922            anl     _P1MDIN,a
00AF            923   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:59: P1SKIP |= mask; // Skip Crossbar decoding for this pin
00AF EB         924            mov     a,r3
00B0 42D5       925            orl     _P1SKIP,a
00B2            926   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:60: break;
00B2            927   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:61: case 2:
00B2 8001       928            sjmp    L005005?
00B4            929   L005003?:
00B4            930   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:62: P2MDIN &= (~mask); // Set pin as analog input
00B4 EB         931            mov     a,r3
00B5 F4         932            cpl     a
00B6 FA         933            mov     r2,a
00B7 52F3       934            anl     _P2MDIN,a
00B9            935   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:63: P2SKIP |= mask; // Skip Crossbar decoding for this pin
00B9 EB         936            mov     a,r3
00BA 42CC       937            orl     _P2SKIP,a
00BC            938   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:67: }
00BC            939   L005005?:
00BC            940   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:68: SFRPAGE = 0x00;
00BC 75A700     941            mov     _SFRPAGE,#0x00
00BF 22         942            ret
00C0            943   ;------------------------------------------------------------
00C0            944   ;Allocation info for local variables in function 'ADC_at_Pin'
00C0            945   ;------------------------------------------------------------
00C0            946   ;pin                       Allocated to registers 
00C0            947   ;------------------------------------------------------------
00C0            948   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:71: unsigned int ADC_at_Pin(unsigned char pin)
00C0            949   ;        -----------------------------------------
00C0            950   ;         function ADC_at_Pin
00C0            951   ;        -----------------------------------------
00C0            952   _ADC_at_Pin:
00C0 8582BB     953            mov     _ADC0MX,dpl
00C3            954   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:74: ADBUSY=1;       // Dummy conversion first to select new pin
00C3 D2EC       955            setb    _ADBUSY
00C5            956   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:75: while (ADBUSY); // Wait for dummy conversion to finish
00C5            957   L006001?:
00C5 20EC20     958            jb      _ADBUSY,L006001?
00C8            959   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:76: ADBUSY = 1;     // Convert voltage at the pin
00C8 D2EC       960            setb    _ADBUSY
00CA            961   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:77: while (ADBUSY); // Wait for conversion to complete
00CA            962   L006004?:
00CA 20EC60     963            jb      _ADBUSY,L006004?
00CD            964   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:78: return (ADC0);
00CD 85BD82     965            mov     dpl,_ADC0
00D0 85BE83     966            mov     dph,(_ADC0 >> 8)
00D3 22         967            ret
00D4            968   ;------------------------------------------------------------
00D4            969   ;Allocation info for local variables in function 'Volts_at_Pin'
00D4            970   ;------------------------------------------------------------
00D4            971   ;pin                       Allocated to registers r2 
00D4            972   ;------------------------------------------------------------
00D4            973   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:81: float Volts_at_Pin(unsigned char pin)
00D4            974   ;        -----------------------------------------
00D4            975   ;         function Volts_at_Pin
00D4            976   ;        -----------------------------------------
00D4            977   _Volts_at_Pin:
00D4            978   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:83: return ((ADC_at_Pin(pin)*VDD)/0b_0011_1111_1111_1111);
00D4 120100     979            lcall   _ADC_at_Pin
00D7 120100     980            lcall   ___uint2fs
00DA AA82       981            mov     r2,dpl
00DC AB83       982            mov     r3,dph
00DE ACF0       983            mov     r4,b
00E0 FD         984            mov     r5,a
00E1 C002       985            push    ar2
00E3 C003       986            push    ar3
00E5 C004       987            push    ar4
00E7 C005       988            push    ar5
00E9 906C8B     989            mov     dptr,#0x6C8B
00EC 75F053     990            mov     b,#0x53
00EF 7440       991            mov     a,#0x40
00F1 120100     992            lcall   ___fsmul
00F4 AA82       993            mov     r2,dpl
00F6 AB83       994            mov     r3,dph
00F8 ACF0       995            mov     r4,b
00FA FD         996            mov     r5,a
00FB E581       997            mov     a,sp
00FD 24FC       998            add     a,#0xfc
00FF F581       999            mov     sp,a
0101 E4        1000            clr     a
0102 C0E0      1001            push    acc
0104 74FC      1002            mov     a,#0xFC
0106 C0E0      1003            push    acc
0108 747F      1004            mov     a,#0x7F
010A C0E0      1005            push    acc
010C 7446      1006            mov     a,#0x46
010E C0E0      1007            push    acc
0110 8A82      1008            mov     dpl,r2
0112 8B83      1009            mov     dph,r3
0114 8CF0      1010            mov     b,r4
0116 ED        1011            mov     a,r5
0117 120100    1012            lcall   ___fsdiv
011A AA82      1013            mov     r2,dpl
011C AB83      1014            mov     r3,dph
011E ACF0      1015            mov     r4,b
0120 FD        1016            mov     r5,a
0121 E581      1017            mov     a,sp
0123 24FC      1018            add     a,#0xfc
0125 F581      1019            mov     sp,a
0127 8A82      1020            mov     dpl,r2
0129 8B83      1021            mov     dph,r3
012B 8CF0      1022            mov     b,r4
012D ED        1023            mov     a,r5
012E 22        1024            ret
012F           1025   ;------------------------------------------------------------
012F           1026   ;Allocation info for local variables in function 'mot_dir'
012F           1027   ;------------------------------------------------------------
012F           1028   ;MR                        Allocated with name '_mot_dir_PARM_2'
012F           1029   ;ML                        Allocated to registers r2 r3 
012F           1030   ;------------------------------------------------------------
012F           1031   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:86: void mot_dir(int ML, int MR)
012F           1032   ;        -----------------------------------------
012F           1033   ;         function mot_dir
012F           1034   ;        -----------------------------------------
012F           1035   _mot_dir:
012F AA82      1036            mov     r2,dpl
0131 AB83      1037            mov     r3,dph
0133           1038   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:88: ML_dir = ML;
0133 EA        1039            mov     a,r2
0134 4B        1040            orl     a,r3
0135 24FF      1041            add     a,#0xff
0137 9290      1042            mov     _ML_dir,c
0139           1043   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:89: MR_dir = MR;
0139 E540      1044            mov     a,_mot_dir_PARM_2
013B 4541      1045            orl     a,(_mot_dir_PARM_2 + 1)
013D 24FF      1046            add     a,#0xff
013F 92D0      1047            mov     _MR_dir,c
0141 22        1048            ret
0142           1049   ;------------------------------------------------------------
0142           1050   ;Allocation info for local variables in function 'stop'
0142           1051   ;------------------------------------------------------------
0142           1052   ;------------------------------------------------------------
0142           1053   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:92: void stop(void){
0142           1054   ;        -----------------------------------------
0142           1055   ;         function stop
0142           1056   ;        -----------------------------------------
0142           1057   _stop:
0142           1058   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:93: pwmL=0;
0142 9018F0    1059            mov     dptr,#_pwmL
0145 E4        1060            clr     a
0146 F0        1061            movx    @dptr,a
0147 A3        1062            inc     dptr
0148 F0        1063            movx    @dptr,a
0149           1064   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:94: pwmR=0;       
0149 9018B0    1065            mov     dptr,#_pwmR
014C E4        1066            clr     a
014D F0        1067            movx    @dptr,a
014E A3        1068            inc     dptr
014F F0        1069            movx    @dptr,a
0150           1070   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:95: waitms(100);
0150 900064    1071            mov     dptr,#0x0064
0153 020100    1072            ljmp    _waitms
0156           1073   ;------------------------------------------------------------
0156           1074   ;Allocation info for local variables in function 'spin_left'
0156           1075   ;------------------------------------------------------------
0156           1076   ;offset                    Allocated to registers r2 r3 
0156           1077   ;------------------------------------------------------------
0156           1078   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:98: void spin_left(int offset)
0156           1079   ;        -----------------------------------------
0156           1080   ;         function spin_left
0156           1081   ;        -----------------------------------------
0156           1082   _spin_left:
0156 AA82      1083            mov     r2,dpl
0158 AB83      1084            mov     r3,dph
015A           1085   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:100: mot_dir(1,0);
015A E4        1086            clr     a
015B F540      1087            mov     _mot_dir_PARM_2,a
015D F541      1088            mov     (_mot_dir_PARM_2 + 1),a
015F 900001    1089            mov     dptr,#0x0001
0162 C002      1090            push    ar2
0164 C003      1091            push    ar3
0166 120100    1092            lcall   _mot_dir
0169 D003      1093            pop     ar3
016B D002      1094            pop     ar2
016D           1095   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:101: pwmR = BOOSTPWM+offset;
016D 9018B0    1096            mov     dptr,#_pwmR
0170 7428      1097            mov     a,#0x28
0172 2A        1098            add     a,r2
0173 F0        1099            movx    @dptr,a
0174 E4        1100            clr     a
0175 3B        1101            addc    a,r3
0176 A3        1102            inc     dptr
0177 F0        1103            movx    @dptr,a
0178           1104   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:102: pwmL = BASEPWM+offset;
0178 9018F0    1105            mov     dptr,#_pwmL
017B 7419      1106            mov     a,#0x19
017D 2A        1107            add     a,r2
017E F0        1108            movx    @dptr,a
017F E4        1109            clr     a
0180 3B        1110            addc    a,r3
0181 A3        1111            inc     dptr
0182 F0        1112            movx    @dptr,a
0183 22        1113            ret
0184           1114   ;------------------------------------------------------------
0184           1115   ;Allocation info for local variables in function 'spin_right'
0184           1116   ;------------------------------------------------------------
0184           1117   ;offset                    Allocated to registers r2 r3 
0184           1118   ;------------------------------------------------------------
0184           1119   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:106: void spin_right(int offset)
0184           1120   ;        -----------------------------------------
0184           1121   ;         function spin_right
0184           1122   ;        -----------------------------------------
0184           1123   _spin_right:
0184 AA82      1124            mov     r2,dpl
0186 AB83      1125            mov     r3,dph
0188           1126   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:108: mot_dir(0,1);
0188 754001    1127            mov     _mot_dir_PARM_2,#0x01
018B E4        1128            clr     a
018C F541      1129            mov     (_mot_dir_PARM_2 + 1),a
018E 900000    1130            mov     dptr,#0x0000
0191 C002      1131            push    ar2
0193 C003      1132            push    ar3
0195 120100    1133            lcall   _mot_dir
0198 D003      1134            pop     ar3
019A D002      1135            pop     ar2
019C           1136   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:109: pwmL = BOOSTPWM+offset;
019C 9018F0    1137            mov     dptr,#_pwmL
019F 7428      1138            mov     a,#0x28
01A1 2A        1139            add     a,r2
01A2 F0        1140            movx    @dptr,a
01A3 E4        1141            clr     a
01A4 3B        1142            addc    a,r3
01A5 A3        1143            inc     dptr
01A6 F0        1144            movx    @dptr,a
01A7           1145   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:110: pwmR = BASEPWM+offset;       
01A7 9018B0    1146            mov     dptr,#_pwmR
01AA 7419      1147            mov     a,#0x19
01AC 2A        1148            add     a,r2
01AD F0        1149            movx    @dptr,a
01AE E4        1150            clr     a
01AF 3B        1151            addc    a,r3
01B0 A3        1152            inc     dptr
01B1 F0        1153            movx    @dptr,a
01B2 22        1154            ret
01B3           1155   ;------------------------------------------------------------
01B3           1156   ;Allocation info for local variables in function 'debug'
01B3           1157   ;------------------------------------------------------------
01B3           1158   ;------------------------------------------------------------
01B3           1159   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:113: void debug( void )
01B3           1160   ;        -----------------------------------------
01B3           1161   ;         function debug
01B3           1162   ;        -----------------------------------------
01B3           1163   _debug:
01B3           1164   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:116: stop();
01B3 120100    1165            lcall   _stop
01B6           1166   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:117: while(1);
01B6           1167   L012002?:
01B6 8001      1168            sjmp    L012002?
01B8           1169   ;------------------------------------------------------------
01B8           1170   ;Allocation info for local variables in function 'claw_control'
01B8           1171   ;------------------------------------------------------------
01B8           1172   ;------------------------------------------------------------
01B8           1173   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:121: void claw_control(void)
01B8           1174   ;        -----------------------------------------
01B8           1175   ;         function claw_control
01B8           1176   ;        -----------------------------------------
01B8           1177   _claw_control:
01B8           1178   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:123: claw_count++;
01B8 7401      1179            mov     a,#0x01
01BA 2580      1180            add     a,_claw_count
01BC F580      1181            mov     _claw_count,a
01BE E4        1182            clr     a
01BF 3581      1183            addc    a,(_claw_count + 1)
01C1 F581      1184            mov     (_claw_count + 1),a
01C3           1185   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:124: if (claw_count > 199) claw_count=0;
01C3 C3        1186            clr     c
01C4 74C7      1187            mov     a,#0xC7
01C6 9580      1188            subb    a,_claw_count
01C8 E4        1189            clr     a
01C9 9581      1190            subb    a,(_claw_count + 1)
01CB 5001      1191            jnc     L013002?
01CD E4        1192            clr     a
01CE F580      1193            mov     _claw_count,a
01D0 F581      1194            mov     (_claw_count + 1),a
01D2           1195   L013002?:
01D2           1196   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:126: if (claw_count < 5)
01D2 C3        1197            clr     c
01D3 E580      1198            mov     a,_claw_count
01D5 9405      1199            subb    a,#0x05
01D7 E581      1200            mov     a,(_claw_count + 1)
01D9 9400      1201            subb    a,#0x00
01DB 5001      1202            jnc     L013007?
01DD           1203   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:128: P2_1=!P2_1;
01DD B2A1      1204            cpl     _P2_1
01DF           1205   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:129: CLAW_L = 1;
01DF D297      1206            setb    _P1_7
01E1           1207   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:130: CLAW_R = 1;
01E1 D2A0      1208            setb    _P2_0
01E3 22        1209            ret
01E4           1210   L013007?:
01E4           1211   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:131: } else if (claw_count >= 22) {
01E4 C3        1212            clr     c
01E5 E580      1213            mov     a,_claw_count
01E7 9416      1214            subb    a,#0x16
01E9 E581      1215            mov     a,(_claw_count + 1)
01EB 9400      1216            subb    a,#0x00
01ED 4001      1217            jc      L013004?
01EF           1218   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:132: CLAW_L = 0;
01EF C297      1219            clr     _P1_7
01F1           1220   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:133: CLAW_R = 0;
01F1 C2A0      1221            clr     _P2_0
01F3 22        1222            ret
01F4           1223   L013004?:
01F4           1224   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:135: CLAW_L = (claw_count < claw_pos + 5) ? 1 : 0;
01F4 7405      1225            mov     a,#0x05
01F6 25C0      1226            add     a,_claw_pos
01F8 FA        1227            mov     r2,a
01F9 E4        1228            clr     a
01FA 35C1      1229            addc    a,(_claw_pos + 1)
01FC FB        1230            mov     r3,a
01FD C3        1231            clr     c
01FE E580      1232            mov     a,_claw_count
0200 9A        1233            subb    a,r2
0201 E581      1234            mov     a,(_claw_count + 1)
0203 9B        1235            subb    a,r3
0204 9297      1236            mov     _P1_7,c
0206           1237   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:136: CLAW_R = (claw_count < 22 - claw_pos) ? 1 : 0;
0206 7416      1238            mov     a,#0x16
0208 C3        1239            clr     c
0209 95C0      1240            subb    a,_claw_pos
020B FA        1241            mov     r2,a
020C E4        1242            clr     a
020D 95C1      1243            subb    a,(_claw_pos + 1)
020F FB        1244            mov     r3,a
0210 C3        1245            clr     c
0211 E580      1246            mov     a,_claw_count
0213 9A        1247            subb    a,r2
0214 E581      1248            mov     a,(_claw_count + 1)
0216 9B        1249            subb    a,r3
0217 92A0      1250            mov     _P2_0,c
0219 22        1251            ret
021A           1252   ;------------------------------------------------------------
021A           1253   ;Allocation info for local variables in function 'sonar_op'
021A           1254   ;------------------------------------------------------------
021A           1255   ;------------------------------------------------------------
021A           1256   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:141: void sonar_op(void)
021A           1257   ;        -----------------------------------------
021A           1258   ;         function sonar_op
021A           1259   ;        -----------------------------------------
021A           1260   _sonar_op:
021A           1261   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:144: Trig = pwm_count >= 50?0:1;
021A 9017F0    1262            mov     dptr,#_pwm_count
021D E0        1263            movx    a,@dptr
021E FA        1264            mov     r2,a
021F BA32A8    1265            cjne    r2,#0x32,L014014?
0222           1266   L014014?:
0222 9290      1267            mov     _P1_0,c
0224           1268   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:147: if (!sonar_state) {
0224 2030E8    1269            jb      _sonar_state,L014007?
0227           1270   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:148: if (P0_7) {
0227 308728    1271            jnb     _P0_7,L014009?
022A           1272   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:149: sonar_state = 1;
022A D230      1273            setb    _sonar_state
022C           1274   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:150: sonar_count = 0;
022C E4        1275            clr     a
022D F540      1276            mov     _sonar_count,a
022F F541      1277            mov     (_sonar_count + 1),a
0231 22        1278            ret
0232           1279   L014007?:
0232           1280   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:152: } else if (P0_7) {
0232 308768    1281            jnb     _P0_7,L014004?
0235           1282   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:153: sonar_count++;
0235 7401      1283            mov     a,#0x01
0237 2540      1284            add     a,_sonar_count
0239 F540      1285            mov     _sonar_count,a
023B E4        1286            clr     a
023C 3541      1287            addc    a,(_sonar_count + 1)
023E F541      1288            mov     (_sonar_count + 1),a
0240 22        1289            ret
0241           1290   L014004?:
0241           1291   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:156: sonar_count_2 = sonar_count;
0241 854000    1292            mov     _sonar_count_2,_sonar_count
0244 854101    1293            mov     (_sonar_count_2 + 1),(_sonar_count + 1)
0247           1294   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:158: sonar_state = 0;
0247 C230      1295            clr     _sonar_state
0249           1296   L014009?:
0249 22        1297            ret
024A           1298   ;------------------------------------------------------------
024A           1299   ;Allocation info for local variables in function 'Distance'
024A           1300   ;------------------------------------------------------------
024A           1301   ;------------------------------------------------------------
024A           1302   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:162: float Distance ( void )
024A           1303   ;        -----------------------------------------
024A           1304   ;         function Distance
024A           1305   ;        -----------------------------------------
024A           1306   _Distance:
024A           1307   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:164: return sonar_count_2;        
024A 850082    1308            mov     dpl,_sonar_count_2
024D 850183    1309            mov     dph,(_sonar_count_2 + 1)
0250 020100    1310            ljmp    ___sint2fs
0253           1311   ;------------------------------------------------------------
0253           1312   ;Allocation info for local variables in function 'Claw_Pos'
0253           1313   ;------------------------------------------------------------
0253           1314   ;pos                       Allocated to registers 
0253           1315   ;------------------------------------------------------------
0253           1316   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:167: void Claw_Pos( int pos ) 
0253           1317   ;        -----------------------------------------
0253           1318   ;         function Claw_Pos
0253           1319   ;        -----------------------------------------
0253           1320   _Claw_Pos:
0253 8582C0    1321            mov     _claw_pos,dpl
0256 8583C1    1322            mov     (_claw_pos + 1),dph
0259           1323   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:169: claw_pos = pos;
0259 22        1324            ret
025A           1325   ;------------------------------------------------------------
025A           1326   ;Allocation info for local variables in function 'Calibrate_LSensors'
025A           1327   ;------------------------------------------------------------
025A           1328   ;VM                        Allocated with name '_Calibrate_LSensors_PARM_2'
025A           1329   ;VR                        Allocated with name '_Calibrate_LSensors_PARM_3'
025A           1330   ;VL                        Allocated with name '_Calibrate_LSensors_VL_1_107'
025A           1331   ;Vtemp                     Allocated with name '_Calibrate_LSensors_Vtemp_1_108'
025A           1332   ;countL                    Allocated with name '_Calibrate_LSensors_countL_1_108'
025A           1333   ;countM                    Allocated with name '_Calibrate_LSensors_countM_1_108'
025A           1334   ;countR                    Allocated with name '_Calibrate_LSensors_countR_1_108'
025A           1335   ;flags                     Allocated with name '_Calibrate_LSensors_flags_1_108'
025A           1336   ;------------------------------------------------------------
025A           1337   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:173: void Calibrate_LSensors(int *VL, int *VM, int *VR)
025A           1338   ;        -----------------------------------------
025A           1339   ;         function Calibrate_LSensors
025A           1340   ;        -----------------------------------------
025A           1341   _Calibrate_LSensors:
025A 858290    1342            mov     _Calibrate_LSensors_VL_1_107,dpl
025D 858391    1343            mov     (_Calibrate_LSensors_VL_1_107 + 1),dph
0260 85F092    1344            mov     (_Calibrate_LSensors_VL_1_107 + 2),b
0263           1345   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:176: xdata short countL=0;
0263 90C6A0    1346            mov     dptr,#_Calibrate_LSensors_countL_1_108
0266 E4        1347            clr     a
0267 F0        1348            movx    @dptr,a
0268 A3        1349            inc     dptr
0269 F0        1350            movx    @dptr,a
026A           1351   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:177: xdata short countM=0;
026A 90C700    1352            mov     dptr,#_Calibrate_LSensors_countM_1_108
026D E4        1353            clr     a
026E F0        1354            movx    @dptr,a
026F A3        1355            inc     dptr
0270 F0        1356            movx    @dptr,a
0271           1357   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:178: xdata short countR=0;
0271 90C760    1358            mov     dptr,#_Calibrate_LSensors_countR_1_108
0274 E4        1359            clr     a
0275 F0        1360            movx    @dptr,a
0276 A3        1361            inc     dptr
0277 F0        1362            movx    @dptr,a
0278           1363   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:179: xdata short flags =0;
0278 90C7B0    1364            mov     dptr,#_Calibrate_LSensors_flags_1_108
027B E4        1365            clr     a
027C F0        1366            movx    @dptr,a
027D A3        1367            inc     dptr
027E F0        1368            movx    @dptr,a
027F           1369   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:182: while (flags != 7) {
027F           1370   L017022?:
027F 90C7B0    1371            mov     dptr,#_Calibrate_LSensors_flags_1_108
0282 E0        1372            movx    a,@dptr
0283 FD        1373            mov     r5,a
0284 A3        1374            inc     dptr
0285 E0        1375            movx    a,@dptr
0286 FE        1376            mov     r6,a
0287 BD0728    1377            cjne    r5,#0x07,L017038?
028A BE0028    1378            cjne    r6,#0x00,L017038?
028D 020100    1379            ljmp    L017024?
0290           1380   L017038?:
0290           1381   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:184: if ((flags & 2) != 2) {
0290 530502    1382            anl     ar5,#0x02
0293 7E00      1383            mov     r6,#0x00
0295 BD02A8    1384            cjne    r5,#0x02,L017039?
0298 BE00A8    1385            cjne    r6,#0x00,L017039?
029B 020100    1386            ljmp    L017007?
029E           1387   L017039?:
029E           1388   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:185: Vtemp = Volts_at_Pin(QFP32_MUX_P1_6)*1000;
029E 75820C    1389            mov     dpl,#0x0C
02A1 120100    1390            lcall   _Volts_at_Pin
02A4 AD82      1391            mov     r5,dpl
02A6 AE83      1392            mov     r6,dph
02A8 AFF0      1393            mov     r7,b
02AA F8        1394            mov     r0,a
02AB C005      1395            push    ar5
02AD C006      1396            push    ar6
02AF C007      1397            push    ar7
02B1 C000      1398            push    ar0
02B3 900000    1399            mov     dptr,#0x0000
02B6 75F07A    1400            mov     b,#0x7A
02B9 7444      1401            mov     a,#0x44
02BB 120100    1402            lcall   ___fsmul
02BE AD82      1403            mov     r5,dpl
02C0 AE83      1404            mov     r6,dph
02C2 AFF0      1405            mov     r7,b
02C4 F8        1406            mov     r0,a
02C5 E581      1407            mov     a,sp
02C7 24FC      1408            add     a,#0xfc
02C9 F581      1409            mov     sp,a
02CB 8D82      1410            mov     dpl,r5
02CD 8E83      1411            mov     dph,r6
02CF 8FF0      1412            mov     b,r7
02D1 E8        1413            mov     a,r0
02D2 120100    1414            lcall   ___fs2uint
02D5 AD82      1415            mov     r5,dpl
02D7 AE83      1416            mov     r6,dph
02D9           1417   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:187: if (abs(*VL - Vtemp) <= 50) {
02D9 859082    1418            mov     dpl,_Calibrate_LSensors_VL_1_107
02DC 859183    1419            mov     dph,(_Calibrate_LSensors_VL_1_107 + 1)
02DF 8592F0    1420            mov     b,(_Calibrate_LSensors_VL_1_107 + 2)
02E2 120100    1421            lcall   __gptrget
02E5 FF        1422            mov     r7,a
02E6 A3        1423            inc     dptr
02E7 120100    1424            lcall   __gptrget
02EA F8        1425            mov     r0,a
02EB EF        1426            mov     a,r7
02EC C3        1427            clr     c
02ED 9D        1428            subb    a,r5
02EE F582      1429            mov     dpl,a
02F0 E8        1430            mov     a,r0
02F1 9E        1431            subb    a,r6
02F2 F583      1432            mov     dph,a
02F4 C005      1433            push    ar5
02F6 C006      1434            push    ar6
02F8 120100    1435            lcall   _abs
02FB AF82      1436            mov     r7,dpl
02FD A883      1437            mov     r0,dph
02FF D006      1438            pop     ar6
0301 D005      1439            pop     ar5
0303 C3        1440            clr     c
0304 7432      1441            mov     a,#0x32
0306 9F        1442            subb    a,r7
0307 E4        1443            clr     a
0308 6480      1444            xrl     a,#0x80
030A 88F0      1445            mov     b,r0
030C 63F080    1446            xrl     b,#0x80
030F 95F0      1447            subb    a,b
0311 4001      1448            jc      L017002?
0313           1449   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:188: countL++;
0313 90C6A0    1450            mov     dptr,#_Calibrate_LSensors_countL_1_108
0316 E0        1451            movx    a,@dptr
0317 2401      1452            add     a,#0x01
0319 F0        1453            movx    @dptr,a
031A A3        1454            inc     dptr
031B E0        1455            movx    a,@dptr
031C 3400      1456            addc    a,#0x00
031E F0        1457            movx    @dptr,a
031F 8001      1458            sjmp    L017003?
0321           1459   L017002?:
0321           1460   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:190: countL = 0;
0321 90C6A0    1461            mov     dptr,#_Calibrate_LSensors_countL_1_108
0324 E4        1462            clr     a
0325 F0        1463            movx    @dptr,a
0326 A3        1464            inc     dptr
0327 F0        1465            movx    @dptr,a
0328           1466   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:191: *VL = Vtemp;
0328 859082    1467            mov     dpl,_Calibrate_LSensors_VL_1_107
032B 859183    1468            mov     dph,(_Calibrate_LSensors_VL_1_107 + 1)
032E 8592F0    1469            mov     b,(_Calibrate_LSensors_VL_1_107 + 2)
0331 ED        1470            mov     a,r5
0332 120100    1471            lcall   __gptrput
0335 A3        1472            inc     dptr
0336 EE        1473            mov     a,r6
0337 120100    1474            lcall   __gptrput
033A           1475   L017003?:
033A           1476   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:194: if (countL == 10)
033A 90C6A0    1477            mov     dptr,#_Calibrate_LSensors_countL_1_108
033D E0        1478            movx    a,@dptr
033E FD        1479            mov     r5,a
033F A3        1480            inc     dptr
0340 E0        1481            movx    a,@dptr
0341 FE        1482            mov     r6,a
0342 BD0AE8    1483            cjne    r5,#0x0A,L017007?
0345 BE00E8    1484            cjne    r6,#0x00,L017007?
0348           1485   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:195: flags |= 2;
0348 90C7B0    1486            mov     dptr,#_Calibrate_LSensors_flags_1_108
034B E0        1487            movx    a,@dptr
034C FD        1488            mov     r5,a
034D A3        1489            inc     dptr
034E E0        1490            movx    a,@dptr
034F FE        1491            mov     r6,a
0350 90C7B0    1492            mov     dptr,#_Calibrate_LSensors_flags_1_108
0353 7402      1493            mov     a,#0x02
0355 4D        1494            orl     a,r5
0356 F0        1495            movx    @dptr,a
0357 A3        1496            inc     dptr
0358 EE        1497            mov     a,r6
0359 F0        1498            movx    @dptr,a
035A           1499   L017007?:
035A           1500   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:198: if ((flags & 1) != 1) {
035A 90C7B0    1501            mov     dptr,#_Calibrate_LSensors_flags_1_108
035D E0        1502            movx    a,@dptr
035E FD        1503            mov     r5,a
035F A3        1504            inc     dptr
0360 E0        1505            movx    a,@dptr
0361 530501    1506            anl     ar5,#0x01
0364 7E00      1507            mov     r6,#0x00
0366 BD01A8    1508            cjne    r5,#0x01,L017043?
0369 BE00A8    1509            cjne    r6,#0x00,L017043?
036C 020100    1510            ljmp    L017014?
036F           1511   L017043?:
036F           1512   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:199: Vtemp = Volts_at_Pin(QFP32_MUX_P1_4)*1000;
036F 75820A    1513            mov     dpl,#0x0A
0372 120100    1514            lcall   _Volts_at_Pin
0375 AD82      1515            mov     r5,dpl
0377 AE83      1516            mov     r6,dph
0379 AFF0      1517            mov     r7,b
037B F8        1518            mov     r0,a
037C C005      1519            push    ar5
037E C006      1520            push    ar6
0380 C007      1521            push    ar7
0382 C000      1522            push    ar0
0384 900000    1523            mov     dptr,#0x0000
0387 75F07A    1524            mov     b,#0x7A
038A 7444      1525            mov     a,#0x44
038C 120100    1526            lcall   ___fsmul
038F AD82      1527            mov     r5,dpl
0391 AE83      1528            mov     r6,dph
0393 AFF0      1529            mov     r7,b
0395 F8        1530            mov     r0,a
0396 E581      1531            mov     a,sp
0398 24FC      1532            add     a,#0xfc
039A F581      1533            mov     sp,a
039C 8D82      1534            mov     dpl,r5
039E 8E83      1535            mov     dph,r6
03A0 8FF0      1536            mov     b,r7
03A2 E8        1537            mov     a,r0
03A3 120100    1538            lcall   ___fs2uint
03A6 AD82      1539            mov     r5,dpl
03A8 AE83      1540            mov     r6,dph
03AA           1541   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:201: if (abs(*VR-Vtemp) <= 50) {
03AA AFF0      1542            mov     r7,_Calibrate_LSensors_PARM_3
03AC A8F1      1543            mov     r0,(_Calibrate_LSensors_PARM_3 + 1)
03AE A9F2      1544            mov     r1,(_Calibrate_LSensors_PARM_3 + 2)
03B0 8F82      1545            mov     dpl,r7
03B2 8883      1546            mov     dph,r0
03B4 89F0      1547            mov     b,r1
03B6 120100    1548            lcall   __gptrget
03B9 FA        1549            mov     r2,a
03BA A3        1550            inc     dptr
03BB 120100    1551            lcall   __gptrget
03BE FB        1552            mov     r3,a
03BF EA        1553            mov     a,r2
03C0 C3        1554            clr     c
03C1 9D        1555            subb    a,r5
03C2 F582      1556            mov     dpl,a
03C4 EB        1557            mov     a,r3
03C5 9E        1558            subb    a,r6
03C6 F583      1559            mov     dph,a
03C8 C005      1560            push    ar5
03CA C006      1561            push    ar6
03CC C007      1562            push    ar7
03CE C000      1563            push    ar0
03D0 C001      1564            push    ar1
03D2 120100    1565            lcall   _abs
03D5 AA82      1566            mov     r2,dpl
03D7 AB83      1567            mov     r3,dph
03D9 D001      1568            pop     ar1
03DB D000      1569            pop     ar0
03DD D007      1570            pop     ar7
03DF D006      1571            pop     ar6
03E1 D005      1572            pop     ar5
03E3 C3        1573            clr     c
03E4 7432      1574            mov     a,#0x32
03E6 9A        1575            subb    a,r2
03E7 E4        1576            clr     a
03E8 6480      1577            xrl     a,#0x80
03EA 8BF0      1578            mov     b,r3
03EC 63F080    1579            xrl     b,#0x80
03EF 95F0      1580            subb    a,b
03F1 4001      1581            jc      L017009?
03F3           1582   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:202: countR++;
03F3 90C760    1583            mov     dptr,#_Calibrate_LSensors_countR_1_108
03F6 E0        1584            movx    a,@dptr
03F7 2401      1585            add     a,#0x01
03F9 F0        1586            movx    @dptr,a
03FA A3        1587            inc     dptr
03FB E0        1588            movx    a,@dptr
03FC 3400      1589            addc    a,#0x00
03FE F0        1590            movx    @dptr,a
03FF 8001      1591            sjmp    L017010?
0401           1592   L017009?:
0401           1593   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:204: countR =0;
0401 90C760    1594            mov     dptr,#_Calibrate_LSensors_countR_1_108
0404 E4        1595            clr     a
0405 F0        1596            movx    @dptr,a
0406 A3        1597            inc     dptr
0407 F0        1598            movx    @dptr,a
0408           1599   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:205: *VR = Vtemp;
0408 8F82      1600            mov     dpl,r7
040A 8883      1601            mov     dph,r0
040C 89F0      1602            mov     b,r1
040E ED        1603            mov     a,r5
040F 120100    1604            lcall   __gptrput
0412 A3        1605            inc     dptr
0413 EE        1606            mov     a,r6
0414 120100    1607            lcall   __gptrput
0417           1608   L017010?:
0417           1609   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:208: if (countR == 10)
0417 90C760    1610            mov     dptr,#_Calibrate_LSensors_countR_1_108
041A E0        1611            movx    a,@dptr
041B FA        1612            mov     r2,a
041C A3        1613            inc     dptr
041D E0        1614            movx    a,@dptr
041E FB        1615            mov     r3,a
041F BA0AE8    1616            cjne    r2,#0x0A,L017014?
0422 BB00E8    1617            cjne    r3,#0x00,L017014?
0425           1618   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:209: flags |= 1;
0425 90C7B0    1619            mov     dptr,#_Calibrate_LSensors_flags_1_108
0428 E0        1620            movx    a,@dptr
0429 FA        1621            mov     r2,a
042A A3        1622            inc     dptr
042B E0        1623            movx    a,@dptr
042C FB        1624            mov     r3,a
042D 90C7B0    1625            mov     dptr,#_Calibrate_LSensors_flags_1_108
0430 7401      1626            mov     a,#0x01
0432 4A        1627            orl     a,r2
0433 F0        1628            movx    @dptr,a
0434 A3        1629            inc     dptr
0435 EB        1630            mov     a,r3
0436 F0        1631            movx    @dptr,a
0437           1632   L017014?:
0437           1633   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:212: if ((flags & 4) != 4) {
0437 90C7B0    1634            mov     dptr,#_Calibrate_LSensors_flags_1_108
043A E0        1635            movx    a,@dptr
043B FA        1636            mov     r2,a
043C A3        1637            inc     dptr
043D E0        1638            movx    a,@dptr
043E 530204    1639            anl     ar2,#0x04
0441 7B00      1640            mov     r3,#0x00
0443 BA04A8    1641            cjne    r2,#0x04,L017047?
0446 BB00A8    1642            cjne    r3,#0x00,L017047?
0449 020100    1643            ljmp    L017022?
044C           1644   L017047?:
044C           1645   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:213: Vtemp = Volts_at_Pin(QFP32_MUX_P1_5)*1000;
044C 75820B    1646            mov     dpl,#0x0B
044F 120100    1647            lcall   _Volts_at_Pin
0452 AA82      1648            mov     r2,dpl
0454 AB83      1649            mov     r3,dph
0456 ACF0      1650            mov     r4,b
0458 FD        1651            mov     r5,a
0459 C002      1652            push    ar2
045B C003      1653            push    ar3
045D C004      1654            push    ar4
045F C005      1655            push    ar5
0461 900000    1656            mov     dptr,#0x0000
0464 75F07A    1657            mov     b,#0x7A
0467 7444      1658            mov     a,#0x44
0469 120100    1659            lcall   ___fsmul
046C AA82      1660            mov     r2,dpl
046E AB83      1661            mov     r3,dph
0470 ACF0      1662            mov     r4,b
0472 FD        1663            mov     r5,a
0473 E581      1664            mov     a,sp
0475 24FC      1665            add     a,#0xfc
0477 F581      1666            mov     sp,a
0479 8A82      1667            mov     dpl,r2
047B 8B83      1668            mov     dph,r3
047D 8CF0      1669            mov     b,r4
047F ED        1670            mov     a,r5
0480 120100    1671            lcall   ___fs2uint
0483 AA82      1672            mov     r2,dpl
0485 AB83      1673            mov     r3,dph
0487           1674   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:215: if (abs(*VM-Vtemp) <= 50){
0487 AC40      1675            mov     r4,_Calibrate_LSensors_PARM_2
0489 AD41      1676            mov     r5,(_Calibrate_LSensors_PARM_2 + 1)
048B AE42      1677            mov     r6,(_Calibrate_LSensors_PARM_2 + 2)
048D 8C82      1678            mov     dpl,r4
048F 8D83      1679            mov     dph,r5
0491 8EF0      1680            mov     b,r6
0493 120100    1681            lcall   __gptrget
0496 FF        1682            mov     r7,a
0497 A3        1683            inc     dptr
0498 120100    1684            lcall   __gptrget
049B F8        1685            mov     r0,a
049C EF        1686            mov     a,r7
049D C3        1687            clr     c
049E 9A        1688            subb    a,r2
049F F582      1689            mov     dpl,a
04A1 E8        1690            mov     a,r0
04A2 9B        1691            subb    a,r3
04A3 F583      1692            mov     dph,a
04A5 C002      1693            push    ar2
04A7 C003      1694            push    ar3
04A9 C004      1695            push    ar4
04AB C005      1696            push    ar5
04AD C006      1697            push    ar6
04AF 120100    1698            lcall   _abs
04B2 AF82      1699            mov     r7,dpl
04B4 A883      1700            mov     r0,dph
04B6 D006      1701            pop     ar6
04B8 D005      1702            pop     ar5
04BA D004      1703            pop     ar4
04BC D003      1704            pop     ar3
04BE D002      1705            pop     ar2
04C0 C3        1706            clr     c
04C1 7432      1707            mov     a,#0x32
04C3 9F        1708            subb    a,r7
04C4 E4        1709            clr     a
04C5 6480      1710            xrl     a,#0x80
04C7 88F0      1711            mov     b,r0
04C9 63F080    1712            xrl     b,#0x80
04CC 95F0      1713            subb    a,b
04CE 4001      1714            jc      L017016?
04D0           1715   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:216: countM++;
04D0 90C700    1716            mov     dptr,#_Calibrate_LSensors_countM_1_108
04D3 E0        1717            movx    a,@dptr
04D4 2401      1718            add     a,#0x01
04D6 F0        1719            movx    @dptr,a
04D7 A3        1720            inc     dptr
04D8 E0        1721            movx    a,@dptr
04D9 3400      1722            addc    a,#0x00
04DB F0        1723            movx    @dptr,a
04DC 8001      1724            sjmp    L017017?
04DE           1725   L017016?:
04DE           1726   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:218: countM =0;
04DE 90C700    1727            mov     dptr,#_Calibrate_LSensors_countM_1_108
04E1 E4        1728            clr     a
04E2 F0        1729            movx    @dptr,a
04E3 A3        1730            inc     dptr
04E4 F0        1731            movx    @dptr,a
04E5           1732   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:219: *VM = Vtemp;
04E5 8C82      1733            mov     dpl,r4
04E7 8D83      1734            mov     dph,r5
04E9 8EF0      1735            mov     b,r6
04EB EA        1736            mov     a,r2
04EC 120100    1737            lcall   __gptrput
04EF A3        1738            inc     dptr
04F0 EB        1739            mov     a,r3
04F1 120100    1740            lcall   __gptrput
04F4           1741   L017017?:
04F4           1742   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:222: if (countM == 10)
04F4 90C700    1743            mov     dptr,#_Calibrate_LSensors_countM_1_108
04F7 E0        1744            movx    a,@dptr
04F8 FA        1745            mov     r2,a
04F9 A3        1746            inc     dptr
04FA E0        1747            movx    a,@dptr
04FB FB        1748            mov     r3,a
04FC BA0A68    1749            cjne    r2,#0x0A,L017049?
04FF BB0068    1750            cjne    r3,#0x00,L017049?
0502 8001      1751            sjmp    L017050?
0504           1752   L017049?:
0504 020100    1753            ljmp    L017022?
0507           1754   L017050?:
0507           1755   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:223: flags |= 4;
0507 90C7B0    1756            mov     dptr,#_Calibrate_LSensors_flags_1_108
050A E0        1757            movx    a,@dptr
050B FA        1758            mov     r2,a
050C A3        1759            inc     dptr
050D E0        1760            movx    a,@dptr
050E FB        1761            mov     r3,a
050F 90C7B0    1762            mov     dptr,#_Calibrate_LSensors_flags_1_108
0512 7404      1763            mov     a,#0x04
0514 4A        1764            orl     a,r2
0515 F0        1765            movx    @dptr,a
0516 A3        1766            inc     dptr
0517 EB        1767            mov     a,r3
0518 F0        1768            movx    @dptr,a
0519 020100    1769            ljmp    L017022?
051C           1770   L017024?:
051C           1771   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:226: return;      
051C 22        1772            ret
051D           1773   ;------------------------------------------------------------
051D           1774   ;Allocation info for local variables in function 'Follow_Tape'
051D           1775   ;------------------------------------------------------------
051D           1776   ;gnd_VM                    Allocated with name '_Follow_Tape_PARM_2'
051D           1777   ;gnd_VR                    Allocated with name '_Follow_Tape_PARM_3'
051D           1778   ;gnd_VL                    Allocated with name '_Follow_Tape_gnd_VL_1_119'
051D           1779   ;sloc0                     Allocated with name '_Follow_Tape_sloc0_1_0'
051D           1780   ;sloc1                     Allocated with name '_Follow_Tape_sloc1_1_0'
051D           1781   ;sloc2                     Allocated with name '_Follow_Tape_sloc2_1_0'
051D           1782   ;sloc3                     Allocated with name '_Follow_Tape_sloc3_1_0'
051D           1783   ;sloc4                     Allocated with name '_Follow_Tape_sloc4_1_0'
051D           1784   ;tp_VL                     Allocated with name '_Follow_Tape_tp_VL_1_120'
051D           1785   ;tp_VR                     Allocated with name '_Follow_Tape_tp_VR_1_120'
051D           1786   ;tp_VM                     Allocated with name '_Follow_Tape_tp_VM_1_120'
051D           1787   ;------------------------------------------------------------
051D           1788   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:229: void Follow_Tape(unsigned short int *gnd_VL, unsigned short int *gnd_VM, unsigned short int *gnd_VR)
051D           1789   ;        -----------------------------------------
051D           1790   ;         function Follow_Tape
051D           1791   ;        -----------------------------------------
051D           1792   _Follow_Tape:
051D           1793   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:232: xdata unsigned short int tp_VL = *gnd_VL-TAPEOFFSET;
051D 8582E0    1794            mov     _Follow_Tape_gnd_VL_1_119,dpl
0520 8583E1    1795            mov     (_Follow_Tape_gnd_VL_1_119 + 1),dph
0523 85F0E2    1796            mov     (_Follow_Tape_gnd_VL_1_119 + 2),b
0526 120100    1797            lcall   __gptrget
0529 FD        1798            mov     r5,a
052A A3        1799            inc     dptr
052B 120100    1800            lcall   __gptrget
052E FE        1801            mov     r6,a
052F ED        1802            mov     a,r5
0530 2470      1803            add     a,#0x70
0532 FD        1804            mov     r5,a
0533 EE        1805            mov     a,r6
0534 34FE      1806            addc    a,#0xfe
0536 FE        1807            mov     r6,a
0537           1808   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:233: xdata unsigned short int tp_VR = *gnd_VR-TAPEOFFSET;
0537 855080    1809            mov     _Follow_Tape_sloc1_1_0,_Follow_Tape_PARM_3
053A 855181    1810            mov     (_Follow_Tape_sloc1_1_0 + 1),(_Follow_Tape_PARM_3 + 1)
053D 855282    1811            mov     (_Follow_Tape_sloc1_1_0 + 2),(_Follow_Tape_PARM_3 + 2)
0540 858082    1812            mov     dpl,_Follow_Tape_sloc1_1_0
0543 858183    1813            mov     dph,(_Follow_Tape_sloc1_1_0 + 1)
0546 8582F0    1814            mov     b,(_Follow_Tape_sloc1_1_0 + 2)
0549 120100    1815            lcall   __gptrget
054C FA        1816            mov     r2,a
054D A3        1817            inc     dptr
054E 120100    1818            lcall   __gptrget
0551 FB        1819            mov     r3,a
0552 EA        1820            mov     a,r2
0553 2470      1821            add     a,#0x70
0555 FA        1822            mov     r2,a
0556 EB        1823            mov     a,r3
0557 34FE      1824            addc    a,#0xfe
0559 FB        1825            mov     r3,a
055A           1826   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:234: xdata unsigned short int tp_VM = *gnd_VM-TAPEOFFSET;
055A 85A030    1827            mov     _Follow_Tape_sloc0_1_0,_Follow_Tape_PARM_2
055D 85A131    1828            mov     (_Follow_Tape_sloc0_1_0 + 1),(_Follow_Tape_PARM_2 + 1)
0560 85A232    1829            mov     (_Follow_Tape_sloc0_1_0 + 2),(_Follow_Tape_PARM_2 + 2)
0563 853082    1830            mov     dpl,_Follow_Tape_sloc0_1_0
0566 853183    1831            mov     dph,(_Follow_Tape_sloc0_1_0 + 1)
0569 8532F0    1832            mov     b,(_Follow_Tape_sloc0_1_0 + 2)
056C 120100    1833            lcall   __gptrget
056F FC        1834            mov     r4,a
0570 A3        1835            inc     dptr
0571 120100    1836            lcall   __gptrget
0574 FF        1837            mov     r7,a
0575 EC        1838            mov     a,r4
0576 2470      1839            add     a,#0x70
0578 FC        1840            mov     r4,a
0579 EF        1841            mov     a,r7
057A 34FE      1842            addc    a,#0xfe
057C FF        1843            mov     r7,a
057D           1844   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:237: pwmL = BASEPWM;
057D 9018F0    1845            mov     dptr,#_pwmL
0580 7419      1846            mov     a,#0x19
0582 F0        1847            movx    @dptr,a
0583 E4        1848            clr     a
0584 A3        1849            inc     dptr
0585 F0        1850            movx    @dptr,a
0586           1851   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:238: pwmR = BASEPWM;
0586 9018B0    1852            mov     dptr,#_pwmR
0589 7419      1853            mov     a,#0x19
058B F0        1854            movx    @dptr,a
058C E4        1855            clr     a
058D A3        1856            inc     dptr
058E F0        1857            movx    @dptr,a
058F           1858   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:241: mot_dir(0,0);
058F E4        1859            clr     a
0590 F540      1860            mov     _mot_dir_PARM_2,a
0592 F541      1861            mov     (_mot_dir_PARM_2 + 1),a
0594 F582      1862            mov     dpl,a
0596 F583      1863            mov     dph,a
0598 C002      1864            push    ar2
059A C003      1865            push    ar3
059C C004      1866            push    ar4
059E C005      1867            push    ar5
05A0 C006      1868            push    ar6
05A2 C007      1869            push    ar7
05A4 120100    1870            lcall   _mot_dir
05A7 D007      1871            pop     ar7
05A9 D006      1872            pop     ar6
05AB D005      1873            pop     ar5
05AD D004      1874            pop     ar4
05AF D003      1875            pop     ar3
05B1 D002      1876            pop     ar2
05B3           1877   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:242: dir_flag = 1;
05B3 D220      1878            setb    _dir_flag
05B5           1879   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:243: dir_count = 0;
05B5 901830    1880            mov     dptr,#_dir_count
05B8 E4        1881            clr     a
05B9 F0        1882            movx    @dptr,a
05BA A3        1883            inc     dptr
05BB F0        1884            movx    @dptr,a
05BC           1885   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:245: while (1) {
05BC           1886   L018058?:
05BC           1887   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:246: if (Volts_at_Pin(QFP32_MUX_P1_5) * 1000 > tp_VM) {                   //if M not on tape
05BC C005      1888            push    ar5
05BE C006      1889            push    ar6
05C0 75820B    1890            mov     dpl,#0x0B
05C3 C002      1891            push    ar2
05C5 C003      1892            push    ar3
05C7 C004      1893            push    ar4
05C9 C007      1894            push    ar7
05CB 120100    1895            lcall   _Volts_at_Pin
05CE A882      1896            mov     r0,dpl
05D0 A983      1897            mov     r1,dph
05D2 ADF0      1898            mov     r5,b
05D4 FE        1899            mov     r6,a
05D5 C000      1900            push    ar0
05D7 C001      1901            push    ar1
05D9 C005      1902            push    ar5
05DB C006      1903            push    ar6
05DD 900000    1904            mov     dptr,#0x0000
05E0 75F07A    1905            mov     b,#0x7A
05E3 7444      1906            mov     a,#0x44
05E5 120100    1907            lcall   ___fsmul
05E8 AD82      1908            mov     r5,dpl
05EA AE83      1909            mov     r6,dph
05EC A8F0      1910            mov     r0,b
05EE F9        1911            mov     r1,a
05EF E581      1912            mov     a,sp
05F1 24FC      1913            add     a,#0xfc
05F3 F581      1914            mov     sp,a
05F5 D007      1915            pop     ar7
05F7 D004      1916            pop     ar4
05F9 8C82      1917            mov     dpl,r4
05FB 8F83      1918            mov     dph,r7
05FD C004      1919            push    ar4
05FF C005      1920            push    ar5
0601 C006      1921            push    ar6
0603 C007      1922            push    ar7
0605 C000      1923            push    ar0
0607 C001      1924            push    ar1
0609 120100    1925            lcall   ___uint2fs
060C 8582D0    1926            mov     _Follow_Tape_sloc2_1_0,dpl
060F 8583D1    1927            mov     (_Follow_Tape_sloc2_1_0 + 1),dph
0612 85F0D2    1928            mov     (_Follow_Tape_sloc2_1_0 + 2),b
0615 F5D3      1929            mov     (_Follow_Tape_sloc2_1_0 + 3),a
0617 D001      1930            pop     ar1
0619 D000      1931            pop     ar0
061B D007      1932            pop     ar7
061D D006      1933            pop     ar6
061F D005      1934            pop     ar5
0621 C006      1935            push    ar6
0623 C007      1936            push    ar7
0625 C0D0      1937            push    _Follow_Tape_sloc2_1_0
0627 C0D1      1938            push    (_Follow_Tape_sloc2_1_0 + 1)
0629 C0D2      1939            push    (_Follow_Tape_sloc2_1_0 + 2)
062B C0D3      1940            push    (_Follow_Tape_sloc2_1_0 + 3)
062D 8D82      1941            mov     dpl,r5
062F 8E83      1942            mov     dph,r6
0631 88F0      1943            mov     b,r0
0633 E9        1944            mov     a,r1
0634 120100    1945            lcall   ___fsgt
0637 AD82      1946            mov     r5,dpl
0639 E581      1947            mov     a,sp
063B 24FC      1948            add     a,#0xfc
063D F581      1949            mov     sp,a
063F D007      1950            pop     ar7
0641 D006      1951            pop     ar6
0643 D004      1952            pop     ar4
0645 D003      1953            pop     ar3
0647 D002      1954            pop     ar2
0649 ED        1955            mov     a,r5
064A D006      1956            pop     ar6
064C D005      1957            pop     ar5
064E 7001      1958            jnz     L018091?
0650 020100    1959            ljmp    L018030?
0653           1960   L018091?:
0653           1961   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:248: if (Volts_at_Pin(QFP32_MUX_P1_6) * 1000 < tp_VL) {           //if L on tape
0653 C004      1962            push    ar4
0655 C007      1963            push    ar7
0657 75820C    1964            mov     dpl,#0x0C
065A C002      1965            push    ar2
065C C003      1966            push    ar3
065E C005      1967            push    ar5
0660 C006      1968            push    ar6
0662 120100    1969            lcall   _Volts_at_Pin
0665 A882      1970            mov     r0,dpl
0667 A983      1971            mov     r1,dph
0669 ACF0      1972            mov     r4,b
066B FF        1973            mov     r7,a
066C D006      1974            pop     ar6
066E D005      1975            pop     ar5
0670 C004      1976            push    ar4
0672 C005      1977            push    ar5
0674 C006      1978            push    ar6
0676 C007      1979            push    ar7
0678 C000      1980            push    ar0
067A C001      1981            push    ar1
067C C004      1982            push    ar4
067E C007      1983            push    ar7
0680 900000    1984            mov     dptr,#0x0000
0683 75F07A    1985            mov     b,#0x7A
0686 7444      1986            mov     a,#0x44
0688 120100    1987            lcall   ___fsmul
068B 858220    1988            mov     _Follow_Tape_sloc3_1_0,dpl
068E 858321    1989            mov     (_Follow_Tape_sloc3_1_0 + 1),dph
0691 85F022    1990            mov     (_Follow_Tape_sloc3_1_0 + 2),b
0694 F523      1991            mov     (_Follow_Tape_sloc3_1_0 + 3),a
0696 E581      1992            mov     a,sp
0698 24FC      1993            add     a,#0xfc
069A F581      1994            mov     sp,a
069C D007      1995            pop     ar7
069E D006      1996            pop     ar6
06A0 D005      1997            pop     ar5
06A2 D004      1998            pop     ar4
06A4 8D82      1999            mov     dpl,r5
06A6 8E83      2000            mov     dph,r6
06A8 C005      2001            push    ar5
06AA C006      2002            push    ar6
06AC 120100    2003            lcall   ___uint2fs
06AF AC82      2004            mov     r4,dpl
06B1 AF83      2005            mov     r7,dph
06B3 A8F0      2006            mov     r0,b
06B5 F9        2007            mov     r1,a
06B6 C007      2008            push    ar7
06B8 C004      2009            push    ar4
06BA C007      2010            push    ar7
06BC C000      2011            push    ar0
06BE C001      2012            push    ar1
06C0 852082    2013            mov     dpl,_Follow_Tape_sloc3_1_0
06C3 852183    2014            mov     dph,(_Follow_Tape_sloc3_1_0 + 1)
06C6 8522F0    2015            mov     b,(_Follow_Tape_sloc3_1_0 + 2)
06C9 E523      2016            mov     a,(_Follow_Tape_sloc3_1_0 + 3)
06CB 120100    2017            lcall   ___fslt
06CE AC82      2018            mov     r4,dpl
06D0 E581      2019            mov     a,sp
06D2 24FC      2020            add     a,#0xfc
06D4 F581      2021            mov     sp,a
06D6 D007      2022            pop     ar7
06D8 D006      2023            pop     ar6
06DA D005      2024            pop     ar5
06DC D003      2025            pop     ar3
06DE D002      2026            pop     ar2
06E0 EC        2027            mov     a,r4
06E1 D007      2028            pop     ar7
06E3 D004      2029            pop     ar4
06E5 6001      2030            jz      L018015?
06E7           2031   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:249: mot_dir(1,0);
06E7 E4        2032            clr     a
06E8 F540      2033            mov     _mot_dir_PARM_2,a
06EA F541      2034            mov     (_mot_dir_PARM_2 + 1),a
06EC 900001    2035            mov     dptr,#0x0001
06EF C002      2036            push    ar2
06F1 C003      2037            push    ar3
06F3 C004      2038            push    ar4
06F5 C005      2039            push    ar5
06F7 C006      2040            push    ar6
06F9 C007      2041            push    ar7
06FB 120100    2042            lcall   _mot_dir
06FE D007      2043            pop     ar7
0700 D006      2044            pop     ar6
0702 D005      2045            pop     ar5
0704 D004      2046            pop     ar4
0706 D003      2047            pop     ar3
0708 D002      2048            pop     ar2
070A           2049   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:250: pwmR = BOOSTPWM; // this main way
070A 9018B0    2050            mov     dptr,#_pwmR
070D 7428      2051            mov     a,#0x28
070F F0        2052            movx    @dptr,a
0710 E4        2053            clr     a
0711 A3        2054            inc     dptr
0712 F0        2055            movx    @dptr,a
0713           2056   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:251: pwmL = BOOSTPWM;
0713 9018F0    2057            mov     dptr,#_pwmL
0716 7428      2058            mov     a,#0x28
0718 F0        2059            movx    @dptr,a
0719 E4        2060            clr     a
071A A3        2061            inc     dptr
071B F0        2062            movx    @dptr,a
071C           2063   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:254: if (dir_flag == 0) {
071C 302068    2064            jnb     _dir_flag,L018093?
071F 020100    2065            ljmp    L018031?
0722           2066   L018093?:
0722           2067   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:255: if (dir_count < 0) dir_count = 1;
0722 901830    2068            mov     dptr,#_dir_count
0725 E0        2069            movx    a,@dptr
0726 F8        2070            mov     r0,a
0727 A3        2071            inc     dptr
0728 E0        2072            movx    a,@dptr
0729 F9        2073            mov     r1,a
072A 30E7E8    2074            jnb     acc.7,L018002?
072D 901830    2075            mov     dptr,#_dir_count
0730 7401      2076            mov     a,#0x01
0732 F0        2077            movx    @dptr,a
0733 E4        2078            clr     a
0734 A3        2079            inc     dptr
0735 F0        2080            movx    @dptr,a
0736 8001      2081            sjmp    L018003?
0738           2082   L018002?:
0738           2083   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:256: else dir_count++;
0738 901830    2084            mov     dptr,#_dir_count
073B E0        2085            movx    a,@dptr
073C 2401      2086            add     a,#0x01
073E F0        2087            movx    @dptr,a
073F A3        2088            inc     dptr
0740 E0        2089            movx    a,@dptr
0741 3400      2090            addc    a,#0x00
0743 F0        2091            movx    @dptr,a
0744           2092   L018003?:
0744           2093   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:257: dir_flag = 1;
0744 D220      2094            setb    _dir_flag
0746 020100    2095            ljmp    L018031?
0749           2096   L018015?:
0749           2097   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:259: } else if (Volts_at_Pin(QFP32_MUX_P1_4) * 1000 < tp_VR) { //if R on tape
0749 C004      2098            push    ar4
074B C007      2099            push    ar7
074D 75820A    2100            mov     dpl,#0x0A
0750 C002      2101            push    ar2
0752 C003      2102            push    ar3
0754 C005      2103            push    ar5
0756 C006      2104            push    ar6
0758 120100    2105            lcall   _Volts_at_Pin
075B A882      2106            mov     r0,dpl
075D A983      2107            mov     r1,dph
075F ACF0      2108            mov     r4,b
0761 FF        2109            mov     r7,a
0762 D006      2110            pop     ar6
0764 D005      2111            pop     ar5
0766 C004      2112            push    ar4
0768 C005      2113            push    ar5
076A C006      2114            push    ar6
076C C007      2115            push    ar7
076E C000      2116            push    ar0
0770 C001      2117            push    ar1
0772 C004      2118            push    ar4
0774 C007      2119            push    ar7
0776 900000    2120            mov     dptr,#0x0000
0779 75F07A    2121            mov     b,#0x7A
077C 7444      2122            mov     a,#0x44
077E 120100    2123            lcall   ___fsmul
0781 858220    2124            mov     _Follow_Tape_sloc3_1_0,dpl
0784 858321    2125            mov     (_Follow_Tape_sloc3_1_0 + 1),dph
0787 85F022    2126            mov     (_Follow_Tape_sloc3_1_0 + 2),b
078A F523      2127            mov     (_Follow_Tape_sloc3_1_0 + 3),a
078C E581      2128            mov     a,sp
078E 24FC      2129            add     a,#0xfc
0790 F581      2130            mov     sp,a
0792 D007      2131            pop     ar7
0794 D006      2132            pop     ar6
0796 D005      2133            pop     ar5
0798 D004      2134            pop     ar4
079A D003      2135            pop     ar3
079C D002      2136            pop     ar2
079E 8A82      2137            mov     dpl,r2
07A0 8B83      2138            mov     dph,r3
07A2 C002      2139            push    ar2
07A4 C003      2140            push    ar3
07A6 C005      2141            push    ar5
07A8 C006      2142            push    ar6
07AA 120100    2143            lcall   ___uint2fs
07AD AC82      2144            mov     r4,dpl
07AF AF83      2145            mov     r7,dph
07B1 A8F0      2146            mov     r0,b
07B3 F9        2147            mov     r1,a
07B4 C007      2148            push    ar7
07B6 C004      2149            push    ar4
07B8 C007      2150            push    ar7
07BA C000      2151            push    ar0
07BC C001      2152            push    ar1
07BE 852082    2153            mov     dpl,_Follow_Tape_sloc3_1_0
07C1 852183    2154            mov     dph,(_Follow_Tape_sloc3_1_0 + 1)
07C4 8522F0    2155            mov     b,(_Follow_Tape_sloc3_1_0 + 2)
07C7 E523      2156            mov     a,(_Follow_Tape_sloc3_1_0 + 3)
07C9 120100    2157            lcall   ___fslt
07CC AC82      2158            mov     r4,dpl
07CE E581      2159            mov     a,sp
07D0 24FC      2160            add     a,#0xfc
07D2 F581      2161            mov     sp,a
07D4 D007      2162            pop     ar7
07D6 D006      2163            pop     ar6
07D8 D005      2164            pop     ar5
07DA D003      2165            pop     ar3
07DC D002      2166            pop     ar2
07DE EC        2167            mov     a,r4
07DF D007      2168            pop     ar7
07E1 D004      2169            pop     ar4
07E3 6001      2170            jz      L018012?
07E5           2171   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:260: mot_dir(0,1);
07E5 754001    2172            mov     _mot_dir_PARM_2,#0x01
07E8 E4        2173            clr     a
07E9 F541      2174            mov     (_mot_dir_PARM_2 + 1),a
07EB 900000    2175            mov     dptr,#0x0000
07EE C002      2176            push    ar2
07F0 C003      2177            push    ar3
07F2 C004      2178            push    ar4
07F4 C005      2179            push    ar5
07F6 C006      2180            push    ar6
07F8 C007      2181            push    ar7
07FA 120100    2182            lcall   _mot_dir
07FD D007      2183            pop     ar7
07FF D006      2184            pop     ar6
0801 D005      2185            pop     ar5
0803 D004      2186            pop     ar4
0805 D003      2187            pop     ar3
0807 D002      2188            pop     ar2
0809           2189   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:261: pwmL = BOOSTPWM; // this main way
0809 9018F0    2190            mov     dptr,#_pwmL
080C 7428      2191            mov     a,#0x28
080E F0        2192            movx    @dptr,a
080F E4        2193            clr     a
0810 A3        2194            inc     dptr
0811 F0        2195            movx    @dptr,a
0812           2196   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:262: pwmR = BOOSTPWM;     
0812 9018B0    2197            mov     dptr,#_pwmR
0815 7428      2198            mov     a,#0x28
0817 F0        2199            movx    @dptr,a
0818 E4        2200            clr     a
0819 A3        2201            inc     dptr
081A F0        2202            movx    @dptr,a
081B           2203   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:265: if (dir_flag == 0) {
081B 3020A8    2204            jnb     _dir_flag,L018096?
081E 020100    2205            ljmp    L018031?
0821           2206   L018096?:
0821           2207   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:266: if (dir_count > 0) dir_count = -1;
0821 901830    2208            mov     dptr,#_dir_count
0824 E0        2209            movx    a,@dptr
0825 F8        2210            mov     r0,a
0826 A3        2211            inc     dptr
0827 E0        2212            movx    a,@dptr
0828 F9        2213            mov     r1,a
0829 C3        2214            clr     c
082A E4        2215            clr     a
082B 98        2216            subb    a,r0
082C E4        2217            clr     a
082D 6480      2218            xrl     a,#0x80
082F 89F0      2219            mov     b,r1
0831 63F080    2220            xrl     b,#0x80
0834 95F0      2221            subb    a,b
0836 5001      2222            jnc     L018007?
0838 901830    2223            mov     dptr,#_dir_count
083B 74FF      2224            mov     a,#0xFF
083D F0        2225            movx    @dptr,a
083E A3        2226            inc     dptr
083F F0        2227            movx    @dptr,a
0840 8001      2228            sjmp    L018008?
0842           2229   L018007?:
0842           2230   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:267: else dir_count--;
0842 901830    2231            mov     dptr,#_dir_count
0845 E0        2232            movx    a,@dptr
0846 24FF      2233            add     a,#0xff
0848 F8        2234            mov     r0,a
0849 A3        2235            inc     dptr
084A E0        2236            movx    a,@dptr
084B 34FF      2237            addc    a,#0xff
084D F9        2238            mov     r1,a
084E 901830    2239            mov     dptr,#_dir_count
0851 E8        2240            mov     a,r0
0852 F0        2241            movx    @dptr,a
0853 A3        2242            inc     dptr
0854 E9        2243            mov     a,r1
0855 F0        2244            movx    @dptr,a
0856           2245   L018008?:
0856           2246   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:268: dir_flag = 1;
0856 D220      2247            setb    _dir_flag
0858 020100    2248            ljmp    L018031?
085B           2249   L018012?:
085B           2250   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:271: mot_dir(0,0);
085B E4        2251            clr     a
085C F540      2252            mov     _mot_dir_PARM_2,a
085E F541      2253            mov     (_mot_dir_PARM_2 + 1),a
0860 F582      2254            mov     dpl,a
0862 F583      2255            mov     dph,a
0864 C002      2256            push    ar2
0866 C003      2257            push    ar3
0868 C004      2258            push    ar4
086A C005      2259            push    ar5
086C C006      2260            push    ar6
086E C007      2261            push    ar7
0870 120100    2262            lcall   _mot_dir
0873 D007      2263            pop     ar7
0875 D006      2264            pop     ar6
0877 D005      2265            pop     ar5
0879 D004      2266            pop     ar4
087B D003      2267            pop     ar3
087D D002      2268            pop     ar2
087F           2269   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:272: pwmL = BASEPWM;
087F 9018F0    2270            mov     dptr,#_pwmL
0882 7419      2271            mov     a,#0x19
0884 F0        2272            movx    @dptr,a
0885 E4        2273            clr     a
0886 A3        2274            inc     dptr
0887 F0        2275            movx    @dptr,a
0888           2276   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:273: pwmR = BASEPWM;      
0888 9018B0    2277            mov     dptr,#_pwmR
088B 7419      2278            mov     a,#0x19
088D F0        2279            movx    @dptr,a
088E E4        2280            clr     a
088F A3        2281            inc     dptr
0890 F0        2282            movx    @dptr,a
0891 020100    2283            ljmp    L018031?
0894           2284   L018030?:
0894           2285   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:277: } else if ((Volts_at_Pin(QFP32_MUX_P1_6) * 1000 < tp_VL) && (Volts_at_Pin(QFP32_MUX_P1_4) * 1000 < tp_VR) && (Volts_at_Pin(QFP32_MUX_P1_5) * 1000 < tp_VM) && find_circle2_flag) {
0894 C004      2286            push    ar4
0896 C007      2287            push    ar7
0898 75820C    2288            mov     dpl,#0x0C
089B C002      2289            push    ar2
089D C003      2290            push    ar3
089F C005      2291            push    ar5
08A1 C006      2292            push    ar6
08A3 120100    2293            lcall   _Volts_at_Pin
08A6 A882      2294            mov     r0,dpl
08A8 A983      2295            mov     r1,dph
08AA ACF0      2296            mov     r4,b
08AC FF        2297            mov     r7,a
08AD C000      2298            push    ar0
08AF C001      2299            push    ar1
08B1 C004      2300            push    ar4
08B3 C007      2301            push    ar7
08B5 900000    2302            mov     dptr,#0x0000
08B8 75F07A    2303            mov     b,#0x7A
08BB 7444      2304            mov     a,#0x44
08BD 120100    2305            lcall   ___fsmul
08C0 AC82      2306            mov     r4,dpl
08C2 AF83      2307            mov     r7,dph
08C4 A8F0      2308            mov     r0,b
08C6 F9        2309            mov     r1,a
08C7 E581      2310            mov     a,sp
08C9 24FC      2311            add     a,#0xfc
08CB F581      2312            mov     sp,a
08CD D006      2313            pop     ar6
08CF D005      2314            pop     ar5
08D1 8D82      2315            mov     dpl,r5
08D3 8E83      2316            mov     dph,r6
08D5 C004      2317            push    ar4
08D7 C005      2318            push    ar5
08D9 C006      2319            push    ar6
08DB C007      2320            push    ar7
08DD C000      2321            push    ar0
08DF C001      2322            push    ar1
08E1 120100    2323            lcall   ___uint2fs
08E4 858220    2324            mov     _Follow_Tape_sloc3_1_0,dpl
08E7 858321    2325            mov     (_Follow_Tape_sloc3_1_0 + 1),dph
08EA 85F022    2326            mov     (_Follow_Tape_sloc3_1_0 + 2),b
08ED F523      2327            mov     (_Follow_Tape_sloc3_1_0 + 3),a
08EF D001      2328            pop     ar1
08F1 D000      2329            pop     ar0
08F3 D007      2330            pop     ar7
08F5 D006      2331            pop     ar6
08F7 D005      2332            pop     ar5
08F9 D004      2333            pop     ar4
08FB C005      2334            push    ar5
08FD C006      2335            push    ar6
08FF C007      2336            push    ar7
0901 C020      2337            push    _Follow_Tape_sloc3_1_0
0903 C021      2338            push    (_Follow_Tape_sloc3_1_0 + 1)
0905 C022      2339            push    (_Follow_Tape_sloc3_1_0 + 2)
0907 C023      2340            push    (_Follow_Tape_sloc3_1_0 + 3)
0909 8C82      2341            mov     dpl,r4
090B 8F83      2342            mov     dph,r7
090D 88F0      2343            mov     b,r0
090F E9        2344            mov     a,r1
0910 120100    2345            lcall   ___fslt
0913 AC82      2346            mov     r4,dpl
0915 E581      2347            mov     a,sp
0917 24FC      2348            add     a,#0xfc
0919 F581      2349            mov     sp,a
091B D007      2350            pop     ar7
091D D006      2351            pop     ar6
091F D005      2352            pop     ar5
0921 D003      2353            pop     ar3
0923 D002      2354            pop     ar2
0925 EC        2355            mov     a,r4
0926 D007      2356            pop     ar7
0928 D004      2357            pop     ar4
092A 7001      2358            jnz     L018098?
092C 020100    2359            ljmp    L018024?
092F           2360   L018098?:
092F C004      2361            push    ar4
0931 C007      2362            push    ar7
0933 75820A    2363            mov     dpl,#0x0A
0936 C002      2364            push    ar2
0938 C003      2365            push    ar3
093A C005      2366            push    ar5
093C C006      2367            push    ar6
093E 120100    2368            lcall   _Volts_at_Pin
0941 A882      2369            mov     r0,dpl
0943 A983      2370            mov     r1,dph
0945 ACF0      2371            mov     r4,b
0947 FF        2372            mov     r7,a
0948 D006      2373            pop     ar6
094A D005      2374            pop     ar5
094C C004      2375            push    ar4
094E C005      2376            push    ar5
0950 C006      2377            push    ar6
0952 C007      2378            push    ar7
0954 C000      2379            push    ar0
0956 C001      2380            push    ar1
0958 C004      2381            push    ar4
095A C007      2382            push    ar7
095C 900000    2383            mov     dptr,#0x0000
095F 75F07A    2384            mov     b,#0x7A
0962 7444      2385            mov     a,#0x44
0964 120100    2386            lcall   ___fsmul
0967 858270    2387            mov     _Follow_Tape_sloc4_1_0,dpl
096A 858371    2388            mov     (_Follow_Tape_sloc4_1_0 + 1),dph
096D 85F072    2389            mov     (_Follow_Tape_sloc4_1_0 + 2),b
0970 F573      2390            mov     (_Follow_Tape_sloc4_1_0 + 3),a
0972 E581      2391            mov     a,sp
0974 24FC      2392            add     a,#0xfc
0976 F581      2393            mov     sp,a
0978 D007      2394            pop     ar7
097A D006      2395            pop     ar6
097C D005      2396            pop     ar5
097E D004      2397            pop     ar4
0980 D003      2398            pop     ar3
0982 D002      2399            pop     ar2
0984 8A82      2400            mov     dpl,r2
0986 8B83      2401            mov     dph,r3
0988 C002      2402            push    ar2
098A C003      2403            push    ar3
098C C005      2404            push    ar5
098E C006      2405            push    ar6
0990 120100    2406            lcall   ___uint2fs
0993 AC82      2407            mov     r4,dpl
0995 AF83      2408            mov     r7,dph
0997 A8F0      2409            mov     r0,b
0999 F9        2410            mov     r1,a
099A C007      2411            push    ar7
099C C004      2412            push    ar4
099E C007      2413            push    ar7
09A0 C000      2414            push    ar0
09A2 C001      2415            push    ar1
09A4 857082    2416            mov     dpl,_Follow_Tape_sloc4_1_0
09A7 857183    2417            mov     dph,(_Follow_Tape_sloc4_1_0 + 1)
09AA 8572F0    2418            mov     b,(_Follow_Tape_sloc4_1_0 + 2)
09AD E573      2419            mov     a,(_Follow_Tape_sloc4_1_0 + 3)
09AF 120100    2420            lcall   ___fslt
09B2 AC82      2421            mov     r4,dpl
09B4 E581      2422            mov     a,sp
09B6 24FC      2423            add     a,#0xfc
09B8 F581      2424            mov     sp,a
09BA D007      2425            pop     ar7
09BC D006      2426            pop     ar6
09BE D005      2427            pop     ar5
09C0 D003      2428            pop     ar3
09C2 D002      2429            pop     ar2
09C4 EC        2430            mov     a,r4
09C5 D007      2431            pop     ar7
09C7 D004      2432            pop     ar4
09C9 7001      2433            jnz     L018099?
09CB 020100    2434            ljmp    L018024?
09CE           2435   L018099?:
09CE C004      2436            push    ar4
09D0 C007      2437            push    ar7
09D2 75820B    2438            mov     dpl,#0x0B
09D5 C002      2439            push    ar2
09D7 C003      2440            push    ar3
09D9 C005      2441            push    ar5
09DB C006      2442            push    ar6
09DD 120100    2443            lcall   _Volts_at_Pin
09E0 A882      2444            mov     r0,dpl
09E2 A983      2445            mov     r1,dph
09E4 ACF0      2446            mov     r4,b
09E6 FF        2447            mov     r7,a
09E7 C000      2448            push    ar0
09E9 C001      2449            push    ar1
09EB C004      2450            push    ar4
09ED C007      2451            push    ar7
09EF 900000    2452            mov     dptr,#0x0000
09F2 75F07A    2453            mov     b,#0x7A
09F5 7444      2454            mov     a,#0x44
09F7 120100    2455            lcall   ___fsmul
09FA AC82      2456            mov     r4,dpl
09FC AF83      2457            mov     r7,dph
09FE A8F0      2458            mov     r0,b
0A00 F9        2459            mov     r1,a
0A01 E581      2460            mov     a,sp
0A03 24FC      2461            add     a,#0xfc
0A05 F581      2462            mov     sp,a
0A07 C007      2463            push    ar7
0A09 C0D0      2464            push    _Follow_Tape_sloc2_1_0
0A0B C0D1      2465            push    (_Follow_Tape_sloc2_1_0 + 1)
0A0D C0D2      2466            push    (_Follow_Tape_sloc2_1_0 + 2)
0A0F C0D3      2467            push    (_Follow_Tape_sloc2_1_0 + 3)
0A11 8C82      2468            mov     dpl,r4
0A13 8F83      2469            mov     dph,r7
0A15 88F0      2470            mov     b,r0
0A17 E9        2471            mov     a,r1
0A18 120100    2472            lcall   ___fslt
0A1B AC82      2473            mov     r4,dpl
0A1D E581      2474            mov     a,sp
0A1F 24FC      2475            add     a,#0xfc
0A21 F581      2476            mov     sp,a
0A23 D007      2477            pop     ar7
0A25 D006      2478            pop     ar6
0A27 D005      2479            pop     ar5
0A29 D003      2480            pop     ar3
0A2B D002      2481            pop     ar2
0A2D EC        2482            mov     a,r4
0A2E D007      2483            pop     ar7
0A30 D004      2484            pop     ar4
0A32 6001      2485            jz      L018024?
0A34           2486   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:278: find_circle2_flag = 0;
0A34 107028    2487            jbc     _find_circle2_flag,L018101?
0A37 8001      2488            sjmp    L018024?
0A39           2489   L018101?:
0A39           2490   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:279: find_circle1_flag = 0;
0A39 C2C0      2491            clr     _find_circle1_flag
0A3B           2492   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:280: waitms(2000);                //move towards the middle of the circle
0A3B 9007D0    2493            mov     dptr,#0x07D0
0A3E 120100    2494            lcall   _waitms
0A41           2495   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:281: stop();
0A41 120100    2496            lcall   _stop
0A44           2497   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:282: Claw_Pos(10);
0A44 90000A    2498            mov     dptr,#0x000A
0A47 120100    2499            lcall   _Claw_Pos
0A4A           2500   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:283: waitms(500);
0A4A 9001F4    2501            mov     dptr,#0x01F4
0A4D           2502   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:284: break;                               //we break so that the program can find the tape again (travel back to the main circle)
0A4D 020100    2503            ljmp    _waitms
0A50           2504   L018024?:
0A50           2505   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:286: } else if ((Volts_at_Pin(QFP32_MUX_P1_6) * 1000 < tp_VL) && (Volts_at_Pin(QFP32_MUX_P1_4) * 1000 < tp_VR) && (Volts_at_Pin(QFP32_MUX_P1_5) * 1000 < tp_VM) && find_circle1_flag) {
0A50 C004      2506            push    ar4
0A52 C007      2507            push    ar7
0A54 75820C    2508            mov     dpl,#0x0C
0A57 C002      2509            push    ar2
0A59 C003      2510            push    ar3
0A5B C005      2511            push    ar5
0A5D C006      2512            push    ar6
0A5F 120100    2513            lcall   _Volts_at_Pin
0A62 A882      2514            mov     r0,dpl
0A64 A983      2515            mov     r1,dph
0A66 ACF0      2516            mov     r4,b
0A68 FF        2517            mov     r7,a
0A69 C000      2518            push    ar0
0A6B C001      2519            push    ar1
0A6D C004      2520            push    ar4
0A6F C007      2521            push    ar7
0A71 900000    2522            mov     dptr,#0x0000
0A74 75F07A    2523            mov     b,#0x7A
0A77 7444      2524            mov     a,#0x44
0A79 120100    2525            lcall   ___fsmul
0A7C AC82      2526            mov     r4,dpl
0A7E AF83      2527            mov     r7,dph
0A80 A8F0      2528            mov     r0,b
0A82 F9        2529            mov     r1,a
0A83 E581      2530            mov     a,sp
0A85 24FC      2531            add     a,#0xfc
0A87 F581      2532            mov     sp,a
0A89 C007      2533            push    ar7
0A8B C020      2534            push    _Follow_Tape_sloc3_1_0
0A8D C021      2535            push    (_Follow_Tape_sloc3_1_0 + 1)
0A8F C022      2536            push    (_Follow_Tape_sloc3_1_0 + 2)
0A91 C023      2537            push    (_Follow_Tape_sloc3_1_0 + 3)
0A93 8C82      2538            mov     dpl,r4
0A95 8F83      2539            mov     dph,r7
0A97 88F0      2540            mov     b,r0
0A99 E9        2541            mov     a,r1
0A9A 120100    2542            lcall   ___fslt
0A9D AC82      2543            mov     r4,dpl
0A9F E581      2544            mov     a,sp
0AA1 24FC      2545            add     a,#0xfc
0AA3 F581      2546            mov     sp,a
0AA5 D007      2547            pop     ar7
0AA7 D006      2548            pop     ar6
0AA9 D005      2549            pop     ar5
0AAB D003      2550            pop     ar3
0AAD D002      2551            pop     ar2
0AAF EC        2552            mov     a,r4
0AB0 D007      2553            pop     ar7
0AB2 D004      2554            pop     ar4
0AB4 7001      2555            jnz     L018102?
0AB6 020100    2556            ljmp    L018018?
0AB9           2557   L018102?:
0AB9 C004      2558            push    ar4
0ABB C007      2559            push    ar7
0ABD 75820A    2560            mov     dpl,#0x0A
0AC0 C002      2561            push    ar2
0AC2 C003      2562            push    ar3
0AC4 C005      2563            push    ar5
0AC6 C006      2564            push    ar6
0AC8 120100    2565            lcall   _Volts_at_Pin
0ACB A882      2566            mov     r0,dpl
0ACD A983      2567            mov     r1,dph
0ACF ACF0      2568            mov     r4,b
0AD1 FF        2569            mov     r7,a
0AD2 D006      2570            pop     ar6
0AD4 D005      2571            pop     ar5
0AD6 C004      2572            push    ar4
0AD8 C005      2573            push    ar5
0ADA C006      2574            push    ar6
0ADC C007      2575            push    ar7
0ADE C000      2576            push    ar0
0AE0 C001      2577            push    ar1
0AE2 C004      2578            push    ar4
0AE4 C007      2579            push    ar7
0AE6 900000    2580            mov     dptr,#0x0000
0AE9 75F07A    2581            mov     b,#0x7A
0AEC 7444      2582            mov     a,#0x44
0AEE 120100    2583            lcall   ___fsmul
0AF1 858270    2584            mov     _Follow_Tape_sloc4_1_0,dpl
0AF4 858371    2585            mov     (_Follow_Tape_sloc4_1_0 + 1),dph
0AF7 85F072    2586            mov     (_Follow_Tape_sloc4_1_0 + 2),b
0AFA F573      2587            mov     (_Follow_Tape_sloc4_1_0 + 3),a
0AFC E581      2588            mov     a,sp
0AFE 24FC      2589            add     a,#0xfc
0B00 F581      2590            mov     sp,a
0B02 D007      2591            pop     ar7
0B04 D006      2592            pop     ar6
0B06 D005      2593            pop     ar5
0B08 D004      2594            pop     ar4
0B0A D003      2595            pop     ar3
0B0C D002      2596            pop     ar2
0B0E 8A82      2597            mov     dpl,r2
0B10 8B83      2598            mov     dph,r3
0B12 C002      2599            push    ar2
0B14 C003      2600            push    ar3
0B16 C005      2601            push    ar5
0B18 C006      2602            push    ar6
0B1A 120100    2603            lcall   ___uint2fs
0B1D AC82      2604            mov     r4,dpl
0B1F AF83      2605            mov     r7,dph
0B21 A8F0      2606            mov     r0,b
0B23 F9        2607            mov     r1,a
0B24 C007      2608            push    ar7
0B26 C004      2609            push    ar4
0B28 C007      2610            push    ar7
0B2A C000      2611            push    ar0
0B2C C001      2612            push    ar1
0B2E 857082    2613            mov     dpl,_Follow_Tape_sloc4_1_0
0B31 857183    2614            mov     dph,(_Follow_Tape_sloc4_1_0 + 1)
0B34 8572F0    2615            mov     b,(_Follow_Tape_sloc4_1_0 + 2)
0B37 E573      2616            mov     a,(_Follow_Tape_sloc4_1_0 + 3)
0B39 120100    2617            lcall   ___fslt
0B3C AC82      2618            mov     r4,dpl
0B3E E581      2619            mov     a,sp
0B40 24FC      2620            add     a,#0xfc
0B42 F581      2621            mov     sp,a
0B44 D007      2622            pop     ar7
0B46 D006      2623            pop     ar6
0B48 D005      2624            pop     ar5
0B4A D003      2625            pop     ar3
0B4C D002      2626            pop     ar2
0B4E EC        2627            mov     a,r4
0B4F D007      2628            pop     ar7
0B51 D004      2629            pop     ar4
0B53 6001      2630            jz      L018018?
0B55 C004      2631            push    ar4
0B57 C007      2632            push    ar7
0B59 75820B    2633            mov     dpl,#0x0B
0B5C C002      2634            push    ar2
0B5E C003      2635            push    ar3
0B60 C005      2636            push    ar5
0B62 C006      2637            push    ar6
0B64 120100    2638            lcall   _Volts_at_Pin
0B67 A882      2639            mov     r0,dpl
0B69 A983      2640            mov     r1,dph
0B6B ACF0      2641            mov     r4,b
0B6D FF        2642            mov     r7,a
0B6E C000      2643            push    ar0
0B70 C001      2644            push    ar1
0B72 C004      2645            push    ar4
0B74 C007      2646            push    ar7
0B76 900000    2647            mov     dptr,#0x0000
0B79 75F07A    2648            mov     b,#0x7A
0B7C 7444      2649            mov     a,#0x44
0B7E 120100    2650            lcall   ___fsmul
0B81 AC82      2651            mov     r4,dpl
0B83 AF83      2652            mov     r7,dph
0B85 A8F0      2653            mov     r0,b
0B87 F9        2654            mov     r1,a
0B88 E581      2655            mov     a,sp
0B8A 24FC      2656            add     a,#0xfc
0B8C F581      2657            mov     sp,a
0B8E C007      2658            push    ar7
0B90 C0D0      2659            push    _Follow_Tape_sloc2_1_0
0B92 C0D1      2660            push    (_Follow_Tape_sloc2_1_0 + 1)
0B94 C0D2      2661            push    (_Follow_Tape_sloc2_1_0 + 2)
0B96 C0D3      2662            push    (_Follow_Tape_sloc2_1_0 + 3)
0B98 8C82      2663            mov     dpl,r4
0B9A 8F83      2664            mov     dph,r7
0B9C 88F0      2665            mov     b,r0
0B9E E9        2666            mov     a,r1
0B9F 120100    2667            lcall   ___fslt
0BA2 AC82      2668            mov     r4,dpl
0BA4 E581      2669            mov     a,sp
0BA6 24FC      2670            add     a,#0xfc
0BA8 F581      2671            mov     sp,a
0BAA D007      2672            pop     ar7
0BAC D006      2673            pop     ar6
0BAE D005      2674            pop     ar5
0BB0 D003      2675            pop     ar3
0BB2 D002      2676            pop     ar2
0BB4 EC        2677            mov     a,r4
0BB5 D007      2678            pop     ar7
0BB7 D004      2679            pop     ar4
0BB9 6001      2680            jz      L018018?
0BBB           2681   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:287: find_circle1_flag = 0;
0BBB 10C0E8    2682            jbc     _find_circle1_flag,L018105?
0BBE 8001      2683            sjmp    L018018?
0BC0           2684   L018105?:
0BC0           2685   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:288: find_circle2_flag = 0;
0BC0 C270      2686            clr     _find_circle2_flag
0BC2           2687   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:290: break;               
0BC2 22        2688            ret
0BC3           2689   L018018?:
0BC3           2690   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:292: mot_dir(0,0);
0BC3 E4        2691            clr     a
0BC4 F540      2692            mov     _mot_dir_PARM_2,a
0BC6 F541      2693            mov     (_mot_dir_PARM_2 + 1),a
0BC8 F582      2694            mov     dpl,a
0BCA F583      2695            mov     dph,a
0BCC C002      2696            push    ar2
0BCE C003      2697            push    ar3
0BD0 C004      2698            push    ar4
0BD2 C005      2699            push    ar5
0BD4 C006      2700            push    ar6
0BD6 C007      2701            push    ar7
0BD8 120100    2702            lcall   _mot_dir
0BDB D007      2703            pop     ar7
0BDD D006      2704            pop     ar6
0BDF D005      2705            pop     ar5
0BE1 D004      2706            pop     ar4
0BE3 D003      2707            pop     ar3
0BE5 D002      2708            pop     ar2
0BE7           2709   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:293: pwmL = BASEPWM;
0BE7 9018F0    2710            mov     dptr,#_pwmL
0BEA 7419      2711            mov     a,#0x19
0BEC F0        2712            movx    @dptr,a
0BED E4        2713            clr     a
0BEE A3        2714            inc     dptr
0BEF F0        2715            movx    @dptr,a
0BF0           2716   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:294: pwmR = BASEPWM;      
0BF0 9018B0    2717            mov     dptr,#_pwmR
0BF3 7419      2718            mov     a,#0x19
0BF5 F0        2719            movx    @dptr,a
0BF6 E4        2720            clr     a
0BF7 A3        2721            inc     dptr
0BF8 F0        2722            movx    @dptr,a
0BF9           2723   L018031?:
0BF9           2724   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:298: if (dir_count >= 7) dir =1;   //ccw
0BF9 901830    2725            mov     dptr,#_dir_count
0BFC E0        2726            movx    a,@dptr
0BFD F8        2727            mov     r0,a
0BFE A3        2728            inc     dptr
0BFF E0        2729            movx    a,@dptr
0C00 F9        2730            mov     r1,a
0C01 C3        2731            clr     c
0C02 E8        2732            mov     a,r0
0C03 9407      2733            subb    a,#0x07
0C05 E9        2734            mov     a,r1
0C06 6480      2735            xrl     a,#0x80
0C08 9480      2736            subb    a,#0x80
0C0A 4001      2737            jc      L018033?
0C0C D250      2738            setb    _dir
0C0E           2739   L018033?:
0C0E           2740   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:299: if (dir_count <= -7) dir =0; //cw
0C0E 901830    2741            mov     dptr,#_dir_count
0C11 E0        2742            movx    a,@dptr
0C12 F8        2743            mov     r0,a
0C13 A3        2744            inc     dptr
0C14 E0        2745            movx    a,@dptr
0C15 F9        2746            mov     r1,a
0C16 C3        2747            clr     c
0C17 74F9      2748            mov     a,#0xF9
0C19 98        2749            subb    a,r0
0C1A 747F      2750            mov     a,#(0xFF ^ 0x80)
0C1C 89F0      2751            mov     b,r1
0C1E 63F080    2752            xrl     b,#0x80
0C21 95F0      2753            subb    a,b
0C23 4001      2754            jc      L018035?
0C25 C250      2755            clr     _dir
0C27           2756   L018035?:
0C27           2757   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:302: if (find_bridge_flag == 1) {
0C27 2010A8    2758            jb      _find_bridge_flag,L018108?
0C2A 020100    2759            ljmp    L018055?
0C2D           2760   L018108?:
0C2D           2761   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:303: if (dir && (Volts_at_Pin(QFP32_MUX_P1_4) * 1000 < tp_VR) && (Volts_at_Pin(QFP32_MUX_P1_5) * 1000 < tp_VM)) {
0C2D 205028    2762            jb      _dir,L018109?
0C30 020100    2763            ljmp    L018040?
0C33           2764   L018109?:
0C33 C004      2765            push    ar4
0C35 C007      2766            push    ar7
0C37 75820A    2767            mov     dpl,#0x0A
0C3A C002      2768            push    ar2
0C3C C003      2769            push    ar3
0C3E C005      2770            push    ar5
0C40 C006      2771            push    ar6
0C42 120100    2772            lcall   _Volts_at_Pin
0C45 A882      2773            mov     r0,dpl
0C47 A983      2774            mov     r1,dph
0C49 ACF0      2775            mov     r4,b
0C4B FF        2776            mov     r7,a
0C4C D006      2777            pop     ar6
0C4E D005      2778            pop     ar5
0C50 C004      2779            push    ar4
0C52 C005      2780            push    ar5
0C54 C006      2781            push    ar6
0C56 C007      2782            push    ar7
0C58 C000      2783            push    ar0
0C5A C001      2784            push    ar1
0C5C C004      2785            push    ar4
0C5E C007      2786            push    ar7
0C60 900000    2787            mov     dptr,#0x0000
0C63 75F07A    2788            mov     b,#0x7A
0C66 7444      2789            mov     a,#0x44
0C68 120100    2790            lcall   ___fsmul
0C6B 858270    2791            mov     _Follow_Tape_sloc4_1_0,dpl
0C6E 858371    2792            mov     (_Follow_Tape_sloc4_1_0 + 1),dph
0C71 85F072    2793            mov     (_Follow_Tape_sloc4_1_0 + 2),b
0C74 F573      2794            mov     (_Follow_Tape_sloc4_1_0 + 3),a
0C76 E581      2795            mov     a,sp
0C78 24FC      2796            add     a,#0xfc
0C7A F581      2797            mov     sp,a
0C7C D007      2798            pop     ar7
0C7E D006      2799            pop     ar6
0C80 D005      2800            pop     ar5
0C82 D004      2801            pop     ar4
0C84 D003      2802            pop     ar3
0C86 D002      2803            pop     ar2
0C88 8A82      2804            mov     dpl,r2
0C8A 8B83      2805            mov     dph,r3
0C8C C002      2806            push    ar2
0C8E C003      2807            push    ar3
0C90 C005      2808            push    ar5
0C92 C006      2809            push    ar6
0C94 120100    2810            lcall   ___uint2fs
0C97 AC82      2811            mov     r4,dpl
0C99 AF83      2812            mov     r7,dph
0C9B A8F0      2813            mov     r0,b
0C9D F9        2814            mov     r1,a
0C9E C007      2815            push    ar7
0CA0 C004      2816            push    ar4
0CA2 C007      2817            push    ar7
0CA4 C000      2818            push    ar0
0CA6 C001      2819            push    ar1
0CA8 857082    2820            mov     dpl,_Follow_Tape_sloc4_1_0
0CAB 857183    2821            mov     dph,(_Follow_Tape_sloc4_1_0 + 1)
0CAE 8572F0    2822            mov     b,(_Follow_Tape_sloc4_1_0 + 2)
0CB1 E573      2823            mov     a,(_Follow_Tape_sloc4_1_0 + 3)
0CB3 120100    2824            lcall   ___fslt
0CB6 AC82      2825            mov     r4,dpl
0CB8 E581      2826            mov     a,sp
0CBA 24FC      2827            add     a,#0xfc
0CBC F581      2828            mov     sp,a
0CBE D007      2829            pop     ar7
0CC0 D006      2830            pop     ar6
0CC2 D005      2831            pop     ar5
0CC4 D003      2832            pop     ar3
0CC6 D002      2833            pop     ar2
0CC8 EC        2834            mov     a,r4
0CC9 D007      2835            pop     ar7
0CCB D004      2836            pop     ar4
0CCD 7001      2837            jnz     L018110?
0CCF 020100    2838            ljmp    L018040?
0CD2           2839   L018110?:
0CD2 C004      2840            push    ar4
0CD4 C007      2841            push    ar7
0CD6 75820B    2842            mov     dpl,#0x0B
0CD9 C002      2843            push    ar2
0CDB C003      2844            push    ar3
0CDD C005      2845            push    ar5
0CDF C006      2846            push    ar6
0CE1 120100    2847            lcall   _Volts_at_Pin
0CE4 A882      2848            mov     r0,dpl
0CE6 A983      2849            mov     r1,dph
0CE8 ACF0      2850            mov     r4,b
0CEA FF        2851            mov     r7,a
0CEB C000      2852            push    ar0
0CED C001      2853            push    ar1
0CEF C004      2854            push    ar4
0CF1 C007      2855            push    ar7
0CF3 900000    2856            mov     dptr,#0x0000
0CF6 75F07A    2857            mov     b,#0x7A
0CF9 7444      2858            mov     a,#0x44
0CFB 120100    2859            lcall   ___fsmul
0CFE AC82      2860            mov     r4,dpl
0D00 AF83      2861            mov     r7,dph
0D02 A8F0      2862            mov     r0,b
0D04 F9        2863            mov     r1,a
0D05 E581      2864            mov     a,sp
0D07 24FC      2865            add     a,#0xfc
0D09 F581      2866            mov     sp,a
0D0B C007      2867            push    ar7
0D0D C0D0      2868            push    _Follow_Tape_sloc2_1_0
0D0F C0D1      2869            push    (_Follow_Tape_sloc2_1_0 + 1)
0D11 C0D2      2870            push    (_Follow_Tape_sloc2_1_0 + 2)
0D13 C0D3      2871            push    (_Follow_Tape_sloc2_1_0 + 3)
0D15 8C82      2872            mov     dpl,r4
0D17 8F83      2873            mov     dph,r7
0D19 88F0      2874            mov     b,r0
0D1B E9        2875            mov     a,r1
0D1C 120100    2876            lcall   ___fslt
0D1F AC82      2877            mov     r4,dpl
0D21 E581      2878            mov     a,sp
0D23 24FC      2879            add     a,#0xfc
0D25 F581      2880            mov     sp,a
0D27 D007      2881            pop     ar7
0D29 D006      2882            pop     ar6
0D2B D005      2883            pop     ar5
0D2D D003      2884            pop     ar3
0D2F D002      2885            pop     ar2
0D31 EC        2886            mov     a,r4
0D32 D007      2887            pop     ar7
0D34 D004      2888            pop     ar4
0D36 6001      2889            jz      L018040?
0D38           2890   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:304: find_bridge_flag = 0;
0D38 C210      2891            clr     _find_bridge_flag
0D3A           2892   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:305: Bridge_Rotate(gnd_VL,gnd_VM,gnd_VR);         //rotate on to the bridge
0D3A 853070    2893            mov     _Bridge_Rotate_PARM_2,_Follow_Tape_sloc0_1_0
0D3D 853171    2894            mov     (_Bridge_Rotate_PARM_2 + 1),(_Follow_Tape_sloc0_1_0 + 1)
0D40 853272    2895            mov     (_Bridge_Rotate_PARM_2 + 2),(_Follow_Tape_sloc0_1_0 + 2)
0D43 858020    2896            mov     _Bridge_Rotate_PARM_3,_Follow_Tape_sloc1_1_0
0D46 858121    2897            mov     (_Bridge_Rotate_PARM_3 + 1),(_Follow_Tape_sloc1_1_0 + 1)
0D49 858222    2898            mov     (_Bridge_Rotate_PARM_3 + 2),(_Follow_Tape_sloc1_1_0 + 2)
0D4C 85E082    2899            mov     dpl,_Follow_Tape_gnd_VL_1_119
0D4F 85E183    2900            mov     dph,(_Follow_Tape_gnd_VL_1_119 + 1)
0D52 85E2F0    2901            mov     b,(_Follow_Tape_gnd_VL_1_119 + 2)
0D55 C002      2902            push    ar2
0D57 C003      2903            push    ar3
0D59 C004      2904            push    ar4
0D5B C005      2905            push    ar5
0D5D C006      2906            push    ar6
0D5F C007      2907            push    ar7
0D61 120100    2908            lcall   _Bridge_Rotate
0D64 D007      2909            pop     ar7
0D66 D006      2910            pop     ar6
0D68 D005      2911            pop     ar5
0D6A D004      2912            pop     ar4
0D6C D003      2913            pop     ar3
0D6E D002      2914            pop     ar2
0D70           2915   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:308: if (circ2) find_circle2_flag = 1;    
0D70 3090E8    2916            jnb     _circ2,L018037?
0D73 D270      2917            setb    _find_circle2_flag
0D75 8001      2918            sjmp    L018040?
0D77           2919   L018037?:
0D77           2920   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:309: else find_circle1_flag = 1;
0D77 D2C0      2921            setb    _find_circle1_flag
0D79           2922   L018040?:
0D79           2923   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:312: if (!dir && (Volts_at_Pin(QFP32_MUX_P1_6) * 1000 < tp_VL) && (Volts_at_Pin(QFP32_MUX_P1_5) * 1000 < tp_VM)) {
0D79 305028    2924            jnb     _dir,L018113?
0D7C 020100    2925            ljmp    L018058?
0D7F           2926   L018113?:
0D7F C004      2927            push    ar4
0D81 C007      2928            push    ar7
0D83 75820C    2929            mov     dpl,#0x0C
0D86 C002      2930            push    ar2
0D88 C003      2931            push    ar3
0D8A C005      2932            push    ar5
0D8C C006      2933            push    ar6
0D8E 120100    2934            lcall   _Volts_at_Pin
0D91 A882      2935            mov     r0,dpl
0D93 A983      2936            mov     r1,dph
0D95 ACF0      2937            mov     r4,b
0D97 FF        2938            mov     r7,a
0D98 D006      2939            pop     ar6
0D9A D005      2940            pop     ar5
0D9C C004      2941            push    ar4
0D9E C005      2942            push    ar5
0DA0 C006      2943            push    ar6
0DA2 C007      2944            push    ar7
0DA4 C000      2945            push    ar0
0DA6 C001      2946            push    ar1
0DA8 C004      2947            push    ar4
0DAA C007      2948            push    ar7
0DAC 900000    2949            mov     dptr,#0x0000
0DAF 75F07A    2950            mov     b,#0x7A
0DB2 7444      2951            mov     a,#0x44
0DB4 120100    2952            lcall   ___fsmul
0DB7 858270    2953            mov     _Follow_Tape_sloc4_1_0,dpl
0DBA 858371    2954            mov     (_Follow_Tape_sloc4_1_0 + 1),dph
0DBD 85F072    2955            mov     (_Follow_Tape_sloc4_1_0 + 2),b
0DC0 F573      2956            mov     (_Follow_Tape_sloc4_1_0 + 3),a
0DC2 E581      2957            mov     a,sp
0DC4 24FC      2958            add     a,#0xfc
0DC6 F581      2959            mov     sp,a
0DC8 D007      2960            pop     ar7
0DCA D006      2961            pop     ar6
0DCC D005      2962            pop     ar5
0DCE D004      2963            pop     ar4
0DD0 8D82      2964            mov     dpl,r5
0DD2 8E83      2965            mov     dph,r6
0DD4 C005      2966            push    ar5
0DD6 C006      2967            push    ar6
0DD8 120100    2968            lcall   ___uint2fs
0DDB AC82      2969            mov     r4,dpl
0DDD AF83      2970            mov     r7,dph
0DDF A8F0      2971            mov     r0,b
0DE1 F9        2972            mov     r1,a
0DE2 C007      2973            push    ar7
0DE4 C004      2974            push    ar4
0DE6 C007      2975            push    ar7
0DE8 C000      2976            push    ar0
0DEA C001      2977            push    ar1
0DEC 857082    2978            mov     dpl,_Follow_Tape_sloc4_1_0
0DEF 857183    2979            mov     dph,(_Follow_Tape_sloc4_1_0 + 1)
0DF2 8572F0    2980            mov     b,(_Follow_Tape_sloc4_1_0 + 2)
0DF5 E573      2981            mov     a,(_Follow_Tape_sloc4_1_0 + 3)
0DF7 120100    2982            lcall   ___fslt
0DFA AC82      2983            mov     r4,dpl
0DFC E581      2984            mov     a,sp
0DFE 24FC      2985            add     a,#0xfc
0E00 F581      2986            mov     sp,a
0E02 D007      2987            pop     ar7
0E04 D006      2988            pop     ar6
0E06 D005      2989            pop     ar5
0E08 D003      2990            pop     ar3
0E0A D002      2991            pop     ar2
0E0C EC        2992            mov     a,r4
0E0D D007      2993            pop     ar7
0E0F D004      2994            pop     ar4
0E11 7001      2995            jnz     L018114?
0E13 020100    2996            ljmp    L018058?
0E16           2997   L018114?:
0E16 C004      2998            push    ar4
0E18 C007      2999            push    ar7
0E1A 75820B    3000            mov     dpl,#0x0B
0E1D C002      3001            push    ar2
0E1F C003      3002            push    ar3
0E21 C005      3003            push    ar5
0E23 C006      3004            push    ar6
0E25 120100    3005            lcall   _Volts_at_Pin
0E28 A882      3006            mov     r0,dpl
0E2A A983      3007            mov     r1,dph
0E2C ACF0      3008            mov     r4,b
0E2E FF        3009            mov     r7,a
0E2F C000      3010            push    ar0
0E31 C001      3011            push    ar1
0E33 C004      3012            push    ar4
0E35 C007      3013            push    ar7
0E37 900000    3014            mov     dptr,#0x0000
0E3A 75F07A    3015            mov     b,#0x7A
0E3D 7444      3016            mov     a,#0x44
0E3F 120100    3017            lcall   ___fsmul
0E42 AC82      3018            mov     r4,dpl
0E44 AF83      3019            mov     r7,dph
0E46 A8F0      3020            mov     r0,b
0E48 F9        3021            mov     r1,a
0E49 E581      3022            mov     a,sp
0E4B 24FC      3023            add     a,#0xfc
0E4D F581      3024            mov     sp,a
0E4F C007      3025            push    ar7
0E51 C0D0      3026            push    _Follow_Tape_sloc2_1_0
0E53 C0D1      3027            push    (_Follow_Tape_sloc2_1_0 + 1)
0E55 C0D2      3028            push    (_Follow_Tape_sloc2_1_0 + 2)
0E57 C0D3      3029            push    (_Follow_Tape_sloc2_1_0 + 3)
0E59 8C82      3030            mov     dpl,r4
0E5B 8F83      3031            mov     dph,r7
0E5D 88F0      3032            mov     b,r0
0E5F E9        3033            mov     a,r1
0E60 120100    3034            lcall   ___fslt
0E63 AC82      3035            mov     r4,dpl
0E65 E581      3036            mov     a,sp
0E67 24FC      3037            add     a,#0xfc
0E69 F581      3038            mov     sp,a
0E6B D007      3039            pop     ar7
0E6D D006      3040            pop     ar6
0E6F D005      3041            pop     ar5
0E71 D003      3042            pop     ar3
0E73 D002      3043            pop     ar2
0E75 EC        3044            mov     a,r4
0E76 D007      3045            pop     ar7
0E78 D004      3046            pop     ar4
0E7A 7001      3047            jnz     L018115?
0E7C 020100    3048            ljmp    L018058?
0E7F           3049   L018115?:
0E7F           3050   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:313: find_bridge_flag = 0;
0E7F C210      3051            clr     _find_bridge_flag
0E81           3052   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:314: Bridge_Rotate(gnd_VL,gnd_VM,gnd_VR);         //rotate on to the bridge
0E81 853070    3053            mov     _Bridge_Rotate_PARM_2,_Follow_Tape_sloc0_1_0
0E84 853171    3054            mov     (_Bridge_Rotate_PARM_2 + 1),(_Follow_Tape_sloc0_1_0 + 1)
0E87 853272    3055            mov     (_Bridge_Rotate_PARM_2 + 2),(_Follow_Tape_sloc0_1_0 + 2)
0E8A 858020    3056            mov     _Bridge_Rotate_PARM_3,_Follow_Tape_sloc1_1_0
0E8D 858121    3057            mov     (_Bridge_Rotate_PARM_3 + 1),(_Follow_Tape_sloc1_1_0 + 1)
0E90 858222    3058            mov     (_Bridge_Rotate_PARM_3 + 2),(_Follow_Tape_sloc1_1_0 + 2)
0E93 85E082    3059            mov     dpl,_Follow_Tape_gnd_VL_1_119
0E96 85E183    3060            mov     dph,(_Follow_Tape_gnd_VL_1_119 + 1)
0E99 85E2F0    3061            mov     b,(_Follow_Tape_gnd_VL_1_119 + 2)
0E9C C002      3062            push    ar2
0E9E C003      3063            push    ar3
0EA0 C004      3064            push    ar4
0EA2 C005      3065            push    ar5
0EA4 C006      3066            push    ar6
0EA6 C007      3067            push    ar7
0EA8 120100    3068            lcall   _Bridge_Rotate
0EAB D007      3069            pop     ar7
0EAD D006      3070            pop     ar6
0EAF D005      3071            pop     ar5
0EB1 D004      3072            pop     ar4
0EB3 D003      3073            pop     ar3
0EB5 D002      3074            pop     ar2
0EB7           3075   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:317: if (circ2) find_circle2_flag = 1;
0EB7 3090E8    3076            jnb     _circ2,L018044?
0EBA D270      3077            setb    _find_circle2_flag
0EBC 020100    3078            ljmp    L018058?
0EBF           3079   L018044?:
0EBF           3080   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:318: else find_circle1_flag = 1;
0EBF D2C0      3081            setb    _find_circle1_flag
0EC1 020100    3082            ljmp    L018058?
0EC4           3083   L018055?:
0EC4           3084   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:321: } else if ((dir_count >= 15) || (dir_count <= -15) && break_when_dir_found) {
0EC4 901830    3085            mov     dptr,#_dir_count
0EC7 E0        3086            movx    a,@dptr
0EC8 F8        3087            mov     r0,a
0EC9 A3        3088            inc     dptr
0ECA E0        3089            movx    a,@dptr
0ECB F9        3090            mov     r1,a
0ECC C3        3091            clr     c
0ECD E8        3092            mov     a,r0
0ECE 940F      3093            subb    a,#0x0F
0ED0 E9        3094            mov     a,r1
0ED1 6480      3095            xrl     a,#0x80
0ED3 9480      3096            subb    a,#0x80
0ED5 5001      3097            jnc     L018050?
0ED7 901830    3098            mov     dptr,#_dir_count
0EDA E0        3099            movx    a,@dptr
0EDB F8        3100            mov     r0,a
0EDC A3        3101            inc     dptr
0EDD E0        3102            movx    a,@dptr
0EDE F9        3103            mov     r1,a
0EDF C3        3104            clr     c
0EE0 74F1      3105            mov     a,#0xF1
0EE2 98        3106            subb    a,r0
0EE3 747F      3107            mov     a,#(0xFF ^ 0x80)
0EE5 89F0      3108            mov     b,r1
0EE7 63F080    3109            xrl     b,#0x80
0EEA 95F0      3110            subb    a,b
0EEC 5001      3111            jnc     L018118?
0EEE 020100    3112            ljmp    L018058?
0EF1           3113   L018118?:
0EF1 20E0A8    3114            jb      _break_when_dir_found,L018119?
0EF4 020100    3115            ljmp    L018058?
0EF7           3116   L018119?:
0EF7           3117   L018050?:
0EF7           3118   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:322: break_when_dir_found = 0;    //reset the break when dir found flag
0EF7 C2E0      3119            clr     _break_when_dir_found
0EF9           3120   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:323: break;       //if the find_bridge_flag is not set, and the direction has been found, break (to find object in circle)
0EF9 22        3121            ret
0EFA           3122   ;------------------------------------------------------------
0EFA           3123   ;Allocation info for local variables in function 'Track_Object'
0EFA           3124   ;------------------------------------------------------------
0EFA           3125   ;IRVR                      Allocated with name '_Track_Object_IRVR_1_136'
0EFA           3126   ;IRVL                      Allocated with name '_Track_Object_IRVL_1_136'
0EFA           3127   ;------------------------------------------------------------
0EFA           3128   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:328: void Track_Object(void)
0EFA           3129   ;        -----------------------------------------
0EFA           3130   ;         function Track_Object
0EFA           3131   ;        -----------------------------------------
0EFA           3132   _Track_Object:
0EFA           3133   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:332: bit flag = 0;
0EFA C2F0      3134            clr     _Track_Object_flag_1_136
0EFC           3135   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:333: mot_dir(0,0);
0EFC E4        3136            clr     a
0EFD F540      3137            mov     _mot_dir_PARM_2,a
0EFF F541      3138            mov     (_mot_dir_PARM_2 + 1),a
0F01 F582      3139            mov     dpl,a
0F03 F583      3140            mov     dph,a
0F05 120100    3141            lcall   _mot_dir
0F08           3142   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:335: while (!flag) {
0F08           3143   L019021?:
0F08 30F028    3144            jnb     _Track_Object_flag_1_136,L019038?
0F0B 020100    3145            ljmp    L019023?
0F0E           3146   L019038?:
0F0E           3147   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:336: IRVR = Volts_at_Pin(QFP32_MUX_P1_2) * 1000;
0F0E 758208    3148            mov     dpl,#0x08
0F11 120100    3149            lcall   _Volts_at_Pin
0F14 AA82      3150            mov     r2,dpl
0F16 AB83      3151            mov     r3,dph
0F18 ACF0      3152            mov     r4,b
0F1A FD        3153            mov     r5,a
0F1B C002      3154            push    ar2
0F1D C003      3155            push    ar3
0F1F C004      3156            push    ar4
0F21 C005      3157            push    ar5
0F23 900000    3158            mov     dptr,#0x0000
0F26 75F07A    3159            mov     b,#0x7A
0F29 7444      3160            mov     a,#0x44
0F2B 120100    3161            lcall   ___fsmul
0F2E AA82      3162            mov     r2,dpl
0F30 AB83      3163            mov     r3,dph
0F32 ACF0      3164            mov     r4,b
0F34 FD        3165            mov     r5,a
0F35 E581      3166            mov     a,sp
0F37 24FC      3167            add     a,#0xfc
0F39 F581      3168            mov     sp,a
0F3B 8A82      3169            mov     dpl,r2
0F3D 8B83      3170            mov     dph,r3
0F3F 8CF0      3171            mov     b,r4
0F41 ED        3172            mov     a,r5
0F42 120100    3173            lcall   ___fs2uint
0F45 AA82      3174            mov     r2,dpl
0F47 AB83      3175            mov     r3,dph
0F49           3176   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:337: IRVL = Volts_at_Pin(QFP32_MUX_P1_3) * 1000;
0F49 758209    3177            mov     dpl,#0x09
0F4C C002      3178            push    ar2
0F4E C003      3179            push    ar3
0F50 120100    3180            lcall   _Volts_at_Pin
0F53 AC82      3181            mov     r4,dpl
0F55 AD83      3182            mov     r5,dph
0F57 AEF0      3183            mov     r6,b
0F59 FF        3184            mov     r7,a
0F5A C004      3185            push    ar4
0F5C C005      3186            push    ar5
0F5E C006      3187            push    ar6
0F60 C007      3188            push    ar7
0F62 900000    3189            mov     dptr,#0x0000
0F65 75F07A    3190            mov     b,#0x7A
0F68 7444      3191            mov     a,#0x44
0F6A 120100    3192            lcall   ___fsmul
0F6D AC82      3193            mov     r4,dpl
0F6F AD83      3194            mov     r5,dph
0F71 AEF0      3195            mov     r6,b
0F73 FF        3196            mov     r7,a
0F74 E581      3197            mov     a,sp
0F76 24FC      3198            add     a,#0xfc
0F78 F581      3199            mov     sp,a
0F7A 8C82      3200            mov     dpl,r4
0F7C 8D83      3201            mov     dph,r5
0F7E 8EF0      3202            mov     b,r6
0F80 EF        3203            mov     a,r7
0F81 120100    3204            lcall   ___fs2uint
0F84 AC82      3205            mov     r4,dpl
0F86 AD83      3206            mov     r5,dph
0F88 D003      3207            pop     ar3
0F8A D002      3208            pop     ar2
0F8C           3209   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:339: if ((IRVR > 1000) && (IRVL < 1000)) {
0F8C C3        3210            clr     c
0F8D 74E8      3211            mov     a,#0xE8
0F8F 9A        3212            subb    a,r2
0F90 7403      3213            mov     a,#0x03
0F92 9B        3214            subb    a,r3
0F93 E4        3215            clr     a
0F94 33        3216            rlc     a
0F95 FE        3217            mov     r6,a
0F96 6001      3218            jz      L019016?
0F98 C3        3219            clr     c
0F99 EC        3220            mov     a,r4
0F9A 94E8      3221            subb    a,#0xE8
0F9C ED        3222            mov     a,r5
0F9D 9403      3223            subb    a,#0x03
0F9F 5001      3224            jnc     L019016?
0FA1           3225   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:340: pwmL = SLOWPWM;
0FA1 9018F0    3226            mov     dptr,#_pwmL
0FA4 7405      3227            mov     a,#0x05
0FA6 F0        3228            movx    @dptr,a
0FA7 E4        3229            clr     a
0FA8 A3        3230            inc     dptr
0FA9 F0        3231            movx    @dptr,a
0FAA           3232   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:341: pwmR = BOOSTPWM;     
0FAA 9018B0    3233            mov     dptr,#_pwmR
0FAD 7428      3234            mov     a,#0x28
0FAF F0        3235            movx    @dptr,a
0FB0 E4        3236            clr     a
0FB1 A3        3237            inc     dptr
0FB2 F0        3238            movx    @dptr,a
0FB3 020100    3239            ljmp    L019017?
0FB6           3240   L019016?:
0FB6           3241   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:342: } else if ((IRVL > 1000) && (IRVR < 1000)) {
0FB6 C3        3242            clr     c
0FB7 74E8      3243            mov     a,#0xE8
0FB9 9C        3244            subb    a,r4
0FBA 7403      3245            mov     a,#0x03
0FBC 9D        3246            subb    a,r5
0FBD E4        3247            clr     a
0FBE 33        3248            rlc     a
0FBF FF        3249            mov     r7,a
0FC0 6001      3250            jz      L019012?
0FC2 C3        3251            clr     c
0FC3 EA        3252            mov     a,r2
0FC4 94E8      3253            subb    a,#0xE8
0FC6 EB        3254            mov     a,r3
0FC7 9403      3255            subb    a,#0x03
0FC9 5001      3256            jnc     L019012?
0FCB           3257   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:343: pwmL = BOOSTPWM;
0FCB 9018F0    3258            mov     dptr,#_pwmL
0FCE 7428      3259            mov     a,#0x28
0FD0 F0        3260            movx    @dptr,a
0FD1 E4        3261            clr     a
0FD2 A3        3262            inc     dptr
0FD3 F0        3263            movx    @dptr,a
0FD4           3264   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:344: pwmR = SLOWPWM;      
0FD4 9018B0    3265            mov     dptr,#_pwmR
0FD7 7405      3266            mov     a,#0x05
0FD9 F0        3267            movx    @dptr,a
0FDA E4        3268            clr     a
0FDB A3        3269            inc     dptr
0FDC F0        3270            movx    @dptr,a
0FDD 8001      3271            sjmp    L019017?
0FDF           3272   L019012?:
0FDF           3273   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:345: } else if ((IRVL > 1000) && (IRVR > 1000)) {
0FDF EF        3274            mov     a,r7
0FE0 6001      3275            jz      L019008?
0FE2 EE        3276            mov     a,r6
0FE3 6001      3277            jz      L019008?
0FE5           3278   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:346: if (Distance() < 40) {
0FE5 120100    3279            lcall   _Distance
0FE8 AE82      3280            mov     r6,dpl
0FEA AF83      3281            mov     r7,dph
0FEC A8F0      3282            mov     r0,b
0FEE F9        3283            mov     r1,a
0FEF E4        3284            clr     a
0FF0 C0E0      3285            push    acc
0FF2 C0E0      3286            push    acc
0FF4 7420      3287            mov     a,#0x20
0FF6 C0E0      3288            push    acc
0FF8 7442      3289            mov     a,#0x42
0FFA C0E0      3290            push    acc
0FFC 8E82      3291            mov     dpl,r6
0FFE 8F83      3292            mov     dph,r7
1000 88F0      3293            mov     b,r0
1002 E9        3294            mov     a,r1
1003 120100    3295            lcall   ___fslt
1006 AE82      3296            mov     r6,dpl
1008 E581      3297            mov     a,sp
100A 24FC      3298            add     a,#0xfc
100C F581      3299            mov     sp,a
100E EE        3300            mov     a,r6
100F 6001      3301            jz      L019002?
1011           3302   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:347: pwmL = BOOSTPWM; //approach the object quickly
1011 9018F0    3303            mov     dptr,#_pwmL
1014 7428      3304            mov     a,#0x28
1016 F0        3305            movx    @dptr,a
1017 E4        3306            clr     a
1018 A3        3307            inc     dptr
1019 F0        3308            movx    @dptr,a
101A           3309   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:348: pwmR = BOOSTPWM;
101A 9018B0    3310            mov     dptr,#_pwmR
101D 7428      3311            mov     a,#0x28
101F F0        3312            movx    @dptr,a
1020 E4        3313            clr     a
1021 A3        3314            inc     dptr
1022 F0        3315            movx    @dptr,a
1023 8001      3316            sjmp    L019017?
1025           3317   L019002?:
1025           3318   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:350: pwmL = 0; // temporary just stops
1025 9018F0    3319            mov     dptr,#_pwmL
1028 E4        3320            clr     a
1029 F0        3321            movx    @dptr,a
102A A3        3322            inc     dptr
102B F0        3323            movx    @dptr,a
102C           3324   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:351: pwmR = 0;
102C 9018B0    3325            mov     dptr,#_pwmR
102F E4        3326            clr     a
1030 F0        3327            movx    @dptr,a
1031 A3        3328            inc     dptr
1032 F0        3329            movx    @dptr,a
1033 8001      3330            sjmp    L019017?
1035           3331   L019008?:
1035           3332   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:353: } else if ((IRVL < 1000) && (IRVR < 1000)) {
1035 C3        3333            clr     c
1036 EC        3334            mov     a,r4
1037 94E8      3335            subb    a,#0xE8
1039 ED        3336            mov     a,r5
103A 9403      3337            subb    a,#0x03
103C 5001      3338            jnc     L019017?
103E C3        3339            clr     c
103F EA        3340            mov     a,r2
1040 94E8      3341            subb    a,#0xE8
1042 EB        3342            mov     a,r3
1043 9403      3343            subb    a,#0x03
1045 5001      3344            jnc     L019017?
1047           3345   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:354: pwmL = BASEPWM; 
1047 9018F0    3346            mov     dptr,#_pwmL
104A 7419      3347            mov     a,#0x19
104C F0        3348            movx    @dptr,a
104D E4        3349            clr     a
104E A3        3350            inc     dptr
104F F0        3351            movx    @dptr,a
1050           3352   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:355: pwmR = BASEPWM;      
1050 9018B0    3353            mov     dptr,#_pwmR
1053 7419      3354            mov     a,#0x19
1055 F0        3355            movx    @dptr,a
1056 E4        3356            clr     a
1057 A3        3357            inc     dptr
1058 F0        3358            movx    @dptr,a
1059           3359   L019017?:
1059           3360   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:358: if (Distance() < 4) 
1059 120100    3361            lcall   _Distance
105C AA82      3362            mov     r2,dpl
105E AB83      3363            mov     r3,dph
1060 ACF0      3364            mov     r4,b
1062 FD        3365            mov     r5,a
1063 E4        3366            clr     a
1064 C0E0      3367            push    acc
1066 C0E0      3368            push    acc
1068 7480      3369            mov     a,#0x80
106A C0E0      3370            push    acc
106C 7440      3371            mov     a,#0x40
106E C0E0      3372            push    acc
1070 8A82      3373            mov     dpl,r2
1072 8B83      3374            mov     dph,r3
1074 8CF0      3375            mov     b,r4
1076 ED        3376            mov     a,r5
1077 120100    3377            lcall   ___fslt
107A AA82      3378            mov     r2,dpl
107C E581      3379            mov     a,sp
107E 24FC      3380            add     a,#0xfc
1080 F581      3381            mov     sp,a
1082 EA        3382            mov     a,r2
1083 7001      3383            jnz     L019048?
1085 020100    3384            ljmp    L019021?
1088           3385   L019048?:
1088           3386   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:359: flag = 1;
1088 D2F0      3387            setb    _Track_Object_flag_1_136
108A 020100    3388            ljmp    L019021?
108D           3389   L019023?:
108D           3390   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:362: pwmL = BASEPWM; 
108D 9018F0    3391            mov     dptr,#_pwmL
1090 7419      3392            mov     a,#0x19
1092 F0        3393            movx    @dptr,a
1093 E4        3394            clr     a
1094 A3        3395            inc     dptr
1095 F0        3396            movx    @dptr,a
1096           3397   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:363: pwmR = BASEPWM;      
1096 9018B0    3398            mov     dptr,#_pwmR
1099 7419      3399            mov     a,#0x19
109B F0        3400            movx    @dptr,a
109C E4        3401            clr     a
109D A3        3402            inc     dptr
109E F0        3403            movx    @dptr,a
109F           3404   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:364: waitms(500);
109F 9001F4    3405            mov     dptr,#0x01F4
10A2 120100    3406            lcall   _waitms
10A5           3407   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:365: stop();
10A5 120100    3408            lcall   _stop
10A8           3409   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:366: Claw_Pos(2);
10A8 900002    3410            mov     dptr,#0x0002
10AB 120100    3411            lcall   _Claw_Pos
10AE           3412   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:367: waitms(500);
10AE 9001F4    3413            mov     dptr,#0x01F4
10B1 020100    3414            ljmp    _waitms
10B4           3415   ;------------------------------------------------------------
10B4           3416   ;Allocation info for local variables in function 'Find_Tape'
10B4           3417   ;------------------------------------------------------------
10B4           3418   ;motordir                  Allocated with name '_Find_Tape_PARM_2'
10B4           3419   ;gnd_VM                    Allocated with name '_Find_Tape_gnd_VM_1_144'
10B4           3420   ;temp                      Allocated to registers 
10B4           3421   ;------------------------------------------------------------
10B4           3422   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:371: void Find_Tape(unsigned short int *gnd_VM, int motordir)
10B4           3423   ;        -----------------------------------------
10B4           3424   ;         function Find_Tape
10B4           3425   ;        -----------------------------------------
10B4           3426   _Find_Tape:
10B4 8582C0    3427            mov     _Find_Tape_gnd_VM_1_144,dpl
10B7 8583C1    3428            mov     (_Find_Tape_gnd_VM_1_144 + 1),dph
10BA 85F0C2    3429            mov     (_Find_Tape_gnd_VM_1_144 + 2),b
10BD           3430   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:373: bit flag=0;
10BD C240      3431            clr     _Find_Tape_flag_1_145
10BF           3432   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:376: while (!flag) {
10BF           3433   L020004?:
10BF 304068    3434            jnb     _Find_Tape_flag_1_145,L020012?
10C2 020100    3435            ljmp    L020006?
10C5           3436   L020012?:
10C5           3437   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:377: if (Volts_at_Pin(QFP32_MUX_P1_5)*1000 < *gnd_VM-TAPEOFFSET) { // found tape, proceed with function
10C5 75820B    3438            mov     dpl,#0x0B
10C8 120100    3439            lcall   _Volts_at_Pin
10CB AD82      3440            mov     r5,dpl
10CD AE83      3441            mov     r6,dph
10CF AFF0      3442            mov     r7,b
10D1 F8        3443            mov     r0,a
10D2 C005      3444            push    ar5
10D4 C006      3445            push    ar6
10D6 C007      3446            push    ar7
10D8 C000      3447            push    ar0
10DA 900000    3448            mov     dptr,#0x0000
10DD 75F07A    3449            mov     b,#0x7A
10E0 7444      3450            mov     a,#0x44
10E2 120100    3451            lcall   ___fsmul
10E5 AD82      3452            mov     r5,dpl
10E7 AE83      3453            mov     r6,dph
10E9 AFF0      3454            mov     r7,b
10EB F8        3455            mov     r0,a
10EC E581      3456            mov     a,sp
10EE 24FC      3457            add     a,#0xfc
10F0 F581      3458            mov     sp,a
10F2 85C082    3459            mov     dpl,_Find_Tape_gnd_VM_1_144
10F5 85C183    3460            mov     dph,(_Find_Tape_gnd_VM_1_144 + 1)
10F8 85C2F0    3461            mov     b,(_Find_Tape_gnd_VM_1_144 + 2)
10FB 120100    3462            lcall   __gptrget
10FE F9        3463            mov     r1,a
10FF A3        3464            inc     dptr
1100 120100    3465            lcall   __gptrget
1103 FA        3466            mov     r2,a
1104 E9        3467            mov     a,r1
1105 2470      3468            add     a,#0x70
1107 F582      3469            mov     dpl,a
1109 EA        3470            mov     a,r2
110A 34FE      3471            addc    a,#0xfe
110C F583      3472            mov     dph,a
110E C005      3473            push    ar5
1110 C006      3474            push    ar6
1112 C007      3475            push    ar7
1114 C000      3476            push    ar0
1116 120100    3477            lcall   ___uint2fs
1119 AA82      3478            mov     r2,dpl
111B AB83      3479            mov     r3,dph
111D ACF0      3480            mov     r4,b
111F F9        3481            mov     r1,a
1120 D000      3482            pop     ar0
1122 D007      3483            pop     ar7
1124 D006      3484            pop     ar6
1126 D005      3485            pop     ar5
1128 C002      3486            push    ar2
112A C003      3487            push    ar3
112C C004      3488            push    ar4
112E C001      3489            push    ar1
1130 8D82      3490            mov     dpl,r5
1132 8E83      3491            mov     dph,r6
1134 8FF0      3492            mov     b,r7
1136 E8        3493            mov     a,r0
1137 120100    3494            lcall   ___fslt
113A AA82      3495            mov     r2,dpl
113C E581      3496            mov     a,sp
113E 24FC      3497            add     a,#0xfc
1140 F581      3498            mov     sp,a
1142 EA        3499            mov     a,r2
1143 6001      3500            jz      L020002?
1145           3501   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:378: stop();
1145 120100    3502            lcall   _stop
1148           3503   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:379: flag = 1;
1148 D240      3504            setb    _Find_Tape_flag_1_145
114A 020100    3505            ljmp    L020004?
114D           3506   L020002?:
114D           3507   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:381: mot_dir(motordir,motordir);
114D 850040    3508            mov     _mot_dir_PARM_2,_Find_Tape_PARM_2
1150 850141    3509            mov     (_mot_dir_PARM_2 + 1),(_Find_Tape_PARM_2 + 1)
1153 850082    3510            mov     dpl,_Find_Tape_PARM_2
1156 850183    3511            mov     dph,(_Find_Tape_PARM_2 + 1)
1159 120100    3512            lcall   _mot_dir
115C           3513   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:382: pwmL = BASEPWM;
115C 9018F0    3514            mov     dptr,#_pwmL
115F 7419      3515            mov     a,#0x19
1161 F0        3516            movx    @dptr,a
1162 E4        3517            clr     a
1163 A3        3518            inc     dptr
1164 F0        3519            movx    @dptr,a
1165           3520   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:383: pwmR = BASEPWM;      
1165 9018B0    3521            mov     dptr,#_pwmR
1168 7419      3522            mov     a,#0x19
116A F0        3523            movx    @dptr,a
116B E4        3524            clr     a
116C A3        3525            inc     dptr
116D F0        3526            movx    @dptr,a
116E 020100    3527            ljmp    L020004?
1171           3528   L020006?:
1171           3529   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:386: return;
1171 22        3530            ret
1172           3531   ;------------------------------------------------------------
1172           3532   ;Allocation info for local variables in function 'Rotate'
1172           3533   ;------------------------------------------------------------
1172           3534   ;gnd_VR                    Allocated with name '_Rotate_PARM_2'
1172           3535   ;gnd_VL                    Allocated with name '_Rotate_gnd_VL_1_149'
1172           3536   ;sloc0                     Allocated with name '_Rotate_sloc0_1_0'
1172           3537   ;------------------------------------------------------------
1172           3538   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:389: void Rotate(unsigned short int *gnd_VL, unsigned short int *gnd_VR)
1172           3539   ;        -----------------------------------------
1172           3540   ;         function Rotate
1172           3541   ;        -----------------------------------------
1172           3542   _Rotate:
1172 858210    3543            mov     _Rotate_gnd_VL_1_149,dpl
1175 858311    3544            mov     (_Rotate_gnd_VL_1_149 + 1),dph
1178 85F012    3545            mov     (_Rotate_gnd_VL_1_149 + 2),b
117B           3546   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:391: if (Volts_at_Pin(QFP32_MUX_P1_6)*1000 < *gnd_VL-TAPEOFFSET) {
117B 75820C    3547            mov     dpl,#0x0C
117E 120100    3548            lcall   _Volts_at_Pin
1181 AD82      3549            mov     r5,dpl
1183 AE83      3550            mov     r6,dph
1185 AFF0      3551            mov     r7,b
1187 F8        3552            mov     r0,a
1188 C005      3553            push    ar5
118A C006      3554            push    ar6
118C C007      3555            push    ar7
118E C000      3556            push    ar0
1190 900000    3557            mov     dptr,#0x0000
1193 75F07A    3558            mov     b,#0x7A
1196 7444      3559            mov     a,#0x44
1198 120100    3560            lcall   ___fsmul
119B AD82      3561            mov     r5,dpl
119D AE83      3562            mov     r6,dph
119F AFF0      3563            mov     r7,b
11A1 F8        3564            mov     r0,a
11A2 E581      3565            mov     a,sp
11A4 24FC      3566            add     a,#0xfc
11A6 F581      3567            mov     sp,a
11A8 851082    3568            mov     dpl,_Rotate_gnd_VL_1_149
11AB 851183    3569            mov     dph,(_Rotate_gnd_VL_1_149 + 1)
11AE 8512F0    3570            mov     b,(_Rotate_gnd_VL_1_149 + 2)
11B1 120100    3571            lcall   __gptrget
11B4 F9        3572            mov     r1,a
11B5 A3        3573            inc     dptr
11B6 120100    3574            lcall   __gptrget
11B9 FA        3575            mov     r2,a
11BA E9        3576            mov     a,r1
11BB 2470      3577            add     a,#0x70
11BD F582      3578            mov     dpl,a
11BF EA        3579            mov     a,r2
11C0 34FE      3580            addc    a,#0xfe
11C2 F583      3581            mov     dph,a
11C4 C005      3582            push    ar5
11C6 C006      3583            push    ar6
11C8 C007      3584            push    ar7
11CA C000      3585            push    ar0
11CC 120100    3586            lcall   ___uint2fs
11CF AA82      3587            mov     r2,dpl
11D1 AB83      3588            mov     r3,dph
11D3 ACF0      3589            mov     r4,b
11D5 F9        3590            mov     r1,a
11D6 D000      3591            pop     ar0
11D8 D007      3592            pop     ar7
11DA D006      3593            pop     ar6
11DC D005      3594            pop     ar5
11DE C002      3595            push    ar2
11E0 C003      3596            push    ar3
11E2 C004      3597            push    ar4
11E4 C001      3598            push    ar1
11E6 8D82      3599            mov     dpl,r5
11E8 8E83      3600            mov     dph,r6
11EA 8FF0      3601            mov     b,r7
11EC E8        3602            mov     a,r0
11ED 120100    3603            lcall   ___fslt
11F0 AA82      3604            mov     r2,dpl
11F2 E581      3605            mov     a,sp
11F4 24FC      3606            add     a,#0xfc
11F6 F581      3607            mov     sp,a
11F8 EA        3608            mov     a,r2
11F9 6001      3609            jz      L021004?
11FB           3610   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:392: spin_left(10);
11FB 90000A    3611            mov     dptr,#0x000A
11FE 120100    3612            lcall   _spin_left
1201 020100    3613            ljmp    L021015?
1204           3614   L021004?:
1204           3615   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:393: } else if (Volts_at_Pin(QFP32_MUX_P1_4)*1000 < *gnd_VR-TAPEOFFSET) {
1204 75820A    3616            mov     dpl,#0x0A
1207 120100    3617            lcall   _Volts_at_Pin
120A AA82      3618            mov     r2,dpl
120C AB83      3619            mov     r3,dph
120E ACF0      3620            mov     r4,b
1210 FD        3621            mov     r5,a
1211 C002      3622            push    ar2
1213 C003      3623            push    ar3
1215 C004      3624            push    ar4
1217 C005      3625            push    ar5
1219 900000    3626            mov     dptr,#0x0000
121C 75F07A    3627            mov     b,#0x7A
121F 7444      3628            mov     a,#0x44
1221 120100    3629            lcall   ___fsmul
1224 AA82      3630            mov     r2,dpl
1226 AB83      3631            mov     r3,dph
1228 ACF0      3632            mov     r4,b
122A FD        3633            mov     r5,a
122B E581      3634            mov     a,sp
122D 24FC      3635            add     a,#0xfc
122F F581      3636            mov     sp,a
1231 AEB0      3637            mov     r6,_Rotate_PARM_2
1233 AFB1      3638            mov     r7,(_Rotate_PARM_2 + 1)
1235 A8B2      3639            mov     r0,(_Rotate_PARM_2 + 2)
1237 8E82      3640            mov     dpl,r6
1239 8F83      3641            mov     dph,r7
123B 88F0      3642            mov     b,r0
123D 120100    3643            lcall   __gptrget
1240 FE        3644            mov     r6,a
1241 A3        3645            inc     dptr
1242 120100    3646            lcall   __gptrget
1245 FF        3647            mov     r7,a
1246 EE        3648            mov     a,r6
1247 2470      3649            add     a,#0x70
1249 F582      3650            mov     dpl,a
124B EF        3651            mov     a,r7
124C 34FE      3652            addc    a,#0xfe
124E F583      3653            mov     dph,a
1250 C002      3654            push    ar2
1252 C003      3655            push    ar3
1254 C004      3656            push    ar4
1256 C005      3657            push    ar5
1258 120100    3658            lcall   ___uint2fs
125B AE82      3659            mov     r6,dpl
125D AF83      3660            mov     r7,dph
125F A8F0      3661            mov     r0,b
1261 F9        3662            mov     r1,a
1262 D005      3663            pop     ar5
1264 D004      3664            pop     ar4
1266 D003      3665            pop     ar3
1268 D002      3666            pop     ar2
126A C006      3667            push    ar6
126C C007      3668            push    ar7
126E C000      3669            push    ar0
1270 C001      3670            push    ar1
1272 8A82      3671            mov     dpl,r2
1274 8B83      3672            mov     dph,r3
1276 8CF0      3673            mov     b,r4
1278 ED        3674            mov     a,r5
1279 120100    3675            lcall   ___fslt
127C AA82      3676            mov     r2,dpl
127E E581      3677            mov     a,sp
1280 24FC      3678            add     a,#0xfc
1282 F581      3679            mov     sp,a
1284 EA        3680            mov     a,r2
1285 6001      3681            jz      L021015?
1287           3682   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:394: spin_right(10);
1287 90000A    3683            mov     dptr,#0x000A
128A 120100    3684            lcall   _spin_right
128D           3685   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:397: while((Volts_at_Pin(QFP32_MUX_P1_6)*1000 < *gnd_VL-TAPEOFFSET) &&
128D           3686   L021015?:
128D 85B060    3687            mov     _Rotate_sloc0_1_0,_Rotate_PARM_2
1290 85B161    3688            mov     (_Rotate_sloc0_1_0 + 1),(_Rotate_PARM_2 + 1)
1293 85B262    3689            mov     (_Rotate_sloc0_1_0 + 2),(_Rotate_PARM_2 + 2)
1296           3690   L021007?:
1296 75820C    3691            mov     dpl,#0x0C
1299 120100    3692            lcall   _Volts_at_Pin
129C AD82      3693            mov     r5,dpl
129E AE83      3694            mov     r6,dph
12A0 AFF0      3695            mov     r7,b
12A2 F8        3696            mov     r0,a
12A3 C005      3697            push    ar5
12A5 C006      3698            push    ar6
12A7 C007      3699            push    ar7
12A9 C000      3700            push    ar0
12AB 900000    3701            mov     dptr,#0x0000
12AE 75F07A    3702            mov     b,#0x7A
12B1 7444      3703            mov     a,#0x44
12B3 120100    3704            lcall   ___fsmul
12B6 AD82      3705            mov     r5,dpl
12B8 AE83      3706            mov     r6,dph
12BA AFF0      3707            mov     r7,b
12BC F8        3708            mov     r0,a
12BD E581      3709            mov     a,sp
12BF 24FC      3710            add     a,#0xfc
12C1 F581      3711            mov     sp,a
12C3 851082    3712            mov     dpl,_Rotate_gnd_VL_1_149
12C6 851183    3713            mov     dph,(_Rotate_gnd_VL_1_149 + 1)
12C9 8512F0    3714            mov     b,(_Rotate_gnd_VL_1_149 + 2)
12CC 120100    3715            lcall   __gptrget
12CF F9        3716            mov     r1,a
12D0 A3        3717            inc     dptr
12D1 120100    3718            lcall   __gptrget
12D4 FA        3719            mov     r2,a
12D5 E9        3720            mov     a,r1
12D6 2470      3721            add     a,#0x70
12D8 F582      3722            mov     dpl,a
12DA EA        3723            mov     a,r2
12DB 34FE      3724            addc    a,#0xfe
12DD F583      3725            mov     dph,a
12DF C005      3726            push    ar5
12E1 C006      3727            push    ar6
12E3 C007      3728            push    ar7
12E5 C000      3729            push    ar0
12E7 120100    3730            lcall   ___uint2fs
12EA AA82      3731            mov     r2,dpl
12EC AB83      3732            mov     r3,dph
12EE ACF0      3733            mov     r4,b
12F0 F9        3734            mov     r1,a
12F1 D000      3735            pop     ar0
12F3 D007      3736            pop     ar7
12F5 D006      3737            pop     ar6
12F7 D005      3738            pop     ar5
12F9 C002      3739            push    ar2
12FB C003      3740            push    ar3
12FD C004      3741            push    ar4
12FF C001      3742            push    ar1
1301 8D82      3743            mov     dpl,r5
1303 8E83      3744            mov     dph,r6
1305 8FF0      3745            mov     b,r7
1307 E8        3746            mov     a,r0
1308 120100    3747            lcall   ___fslt
130B AA82      3748            mov     r2,dpl
130D E581      3749            mov     a,sp
130F 24FC      3750            add     a,#0xfc
1311 F581      3751            mov     sp,a
1313 EA        3752            mov     a,r2
1314 7001      3753            jnz     L021018?
1316 020100    3754            ljmp    L021009?
1319           3755   L021018?:
1319           3756   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:398: (Volts_at_Pin(QFP32_MUX_P1_4)*1000 < *gnd_VR-TAPEOFFSET)); 
1319 75820A    3757            mov     dpl,#0x0A
131C 120100    3758            lcall   _Volts_at_Pin
131F AD82      3759            mov     r5,dpl
1321 AE83      3760            mov     r6,dph
1323 AFF0      3761            mov     r7,b
1325 F8        3762            mov     r0,a
1326 C005      3763            push    ar5
1328 C006      3764            push    ar6
132A C007      3765            push    ar7
132C C000      3766            push    ar0
132E 900000    3767            mov     dptr,#0x0000
1331 75F07A    3768            mov     b,#0x7A
1334 7444      3769            mov     a,#0x44
1336 120100    3770            lcall   ___fsmul
1339 AD82      3771            mov     r5,dpl
133B AE83      3772            mov     r6,dph
133D AFF0      3773            mov     r7,b
133F F8        3774            mov     r0,a
1340 E581      3775            mov     a,sp
1342 24FC      3776            add     a,#0xfc
1344 F581      3777            mov     sp,a
1346 856082    3778            mov     dpl,_Rotate_sloc0_1_0
1349 856183    3779            mov     dph,(_Rotate_sloc0_1_0 + 1)
134C 8562F0    3780            mov     b,(_Rotate_sloc0_1_0 + 2)
134F 120100    3781            lcall   __gptrget
1352 F9        3782            mov     r1,a
1353 A3        3783            inc     dptr
1354 120100    3784            lcall   __gptrget
1357 FA        3785            mov     r2,a
1358 E9        3786            mov     a,r1
1359 2470      3787            add     a,#0x70
135B F582      3788            mov     dpl,a
135D EA        3789            mov     a,r2
135E 34FE      3790            addc    a,#0xfe
1360 F583      3791            mov     dph,a
1362 C005      3792            push    ar5
1364 C006      3793            push    ar6
1366 C007      3794            push    ar7
1368 C000      3795            push    ar0
136A 120100    3796            lcall   ___uint2fs
136D AA82      3797            mov     r2,dpl
136F AB83      3798            mov     r3,dph
1371 ACF0      3799            mov     r4,b
1373 F9        3800            mov     r1,a
1374 D000      3801            pop     ar0
1376 D007      3802            pop     ar7
1378 D006      3803            pop     ar6
137A D005      3804            pop     ar5
137C C002      3805            push    ar2
137E C003      3806            push    ar3
1380 C004      3807            push    ar4
1382 C001      3808            push    ar1
1384 8D82      3809            mov     dpl,r5
1386 8E83      3810            mov     dph,r6
1388 8FF0      3811            mov     b,r7
138A E8        3812            mov     a,r0
138B 120100    3813            lcall   ___fslt
138E AA82      3814            mov     r2,dpl
1390 E581      3815            mov     a,sp
1392 24FC      3816            add     a,#0xfc
1394 F581      3817            mov     sp,a
1396 EA        3818            mov     a,r2
1397 6001      3819            jz      L021019?
1399 020100    3820            ljmp    L021007?
139C           3821   L021019?:
139C           3822   L021009?:
139C           3823   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:399: return;
139C 22        3824            ret
139D           3825   ;------------------------------------------------------------
139D           3826   ;Allocation info for local variables in function 'Detect_Object'
139D           3827   ;------------------------------------------------------------
139D           3828   ;------------------------------------------------------------
139D           3829   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:402: int Detect_Object (void)
139D           3830   ;        -----------------------------------------
139D           3831   ;         function Detect_Object
139D           3832   ;        -----------------------------------------
139D           3833   _Detect_Object:
139D           3834   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:404: if (((Volts_at_Pin(QFP32_MUX_P1_2) * 1000) < 1000) || ((Volts_at_Pin(QFP32_MUX_P1_3) * 1000) < 1000))
139D 758208    3835            mov     dpl,#0x08
13A0 120100    3836            lcall   _Volts_at_Pin
13A3 AA82      3837            mov     r2,dpl
13A5 AB83      3838            mov     r3,dph
13A7 ACF0      3839            mov     r4,b
13A9 FD        3840            mov     r5,a
13AA C002      3841            push    ar2
13AC C003      3842            push    ar3
13AE C004      3843            push    ar4
13B0 C005      3844            push    ar5
13B2 900000    3845            mov     dptr,#0x0000
13B5 75F07A    3846            mov     b,#0x7A
13B8 7444      3847            mov     a,#0x44
13BA 120100    3848            lcall   ___fsmul
13BD AA82      3849            mov     r2,dpl
13BF AB83      3850            mov     r3,dph
13C1 ACF0      3851            mov     r4,b
13C3 FD        3852            mov     r5,a
13C4 E581      3853            mov     a,sp
13C6 24FC      3854            add     a,#0xfc
13C8 F581      3855            mov     sp,a
13CA E4        3856            clr     a
13CB C0E0      3857            push    acc
13CD C0E0      3858            push    acc
13CF 747A      3859            mov     a,#0x7A
13D1 C0E0      3860            push    acc
13D3 7444      3861            mov     a,#0x44
13D5 C0E0      3862            push    acc
13D7 8A82      3863            mov     dpl,r2
13D9 8B83      3864            mov     dph,r3
13DB 8CF0      3865            mov     b,r4
13DD ED        3866            mov     a,r5
13DE 120100    3867            lcall   ___fslt
13E1 AA82      3868            mov     r2,dpl
13E3 E581      3869            mov     a,sp
13E5 24FC      3870            add     a,#0xfc
13E7 F581      3871            mov     sp,a
13E9 EA        3872            mov     a,r2
13EA 7001      3873            jnz     L022001?
13EC 758209    3874            mov     dpl,#0x09
13EF 120100    3875            lcall   _Volts_at_Pin
13F2 AA82      3876            mov     r2,dpl
13F4 AB83      3877            mov     r3,dph
13F6 ACF0      3878            mov     r4,b
13F8 FD        3879            mov     r5,a
13F9 C002      3880            push    ar2
13FB C003      3881            push    ar3
13FD C004      3882            push    ar4
13FF C005      3883            push    ar5
1401 900000    3884            mov     dptr,#0x0000
1404 75F07A    3885            mov     b,#0x7A
1407 7444      3886            mov     a,#0x44
1409 120100    3887            lcall   ___fsmul
140C AA82      3888            mov     r2,dpl
140E AB83      3889            mov     r3,dph
1410 ACF0      3890            mov     r4,b
1412 FD        3891            mov     r5,a
1413 E581      3892            mov     a,sp
1415 24FC      3893            add     a,#0xfc
1417 F581      3894            mov     sp,a
1419 E4        3895            clr     a
141A C0E0      3896            push    acc
141C C0E0      3897            push    acc
141E 747A      3898            mov     a,#0x7A
1420 C0E0      3899            push    acc
1422 7444      3900            mov     a,#0x44
1424 C0E0      3901            push    acc
1426 8A82      3902            mov     dpl,r2
1428 8B83      3903            mov     dph,r3
142A 8CF0      3904            mov     b,r4
142C ED        3905            mov     a,r5
142D 120100    3906            lcall   ___fslt
1430 AA82      3907            mov     r2,dpl
1432 E581      3908            mov     a,sp
1434 24FC      3909            add     a,#0xfc
1436 F581      3910            mov     sp,a
1438 EA        3911            mov     a,r2
1439 6001      3912            jz      L022002?
143B           3913   L022001?:
143B           3914   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:405: return 1;
143B 900001    3915            mov     dptr,#0x0001
143E 22        3916            ret
143F           3917   L022002?:
143F           3918   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:406: if ((Distance() <= 40))
143F 120100    3919            lcall   _Distance
1442 AA82      3920            mov     r2,dpl
1444 AB83      3921            mov     r3,dph
1446 ACF0      3922            mov     r4,b
1448 FD        3923            mov     r5,a
1449 E4        3924            clr     a
144A C0E0      3925            push    acc
144C C0E0      3926            push    acc
144E 7420      3927            mov     a,#0x20
1450 C0E0      3928            push    acc
1452 7442      3929            mov     a,#0x42
1454 C0E0      3930            push    acc
1456 8A82      3931            mov     dpl,r2
1458 8B83      3932            mov     dph,r3
145A 8CF0      3933            mov     b,r4
145C ED        3934            mov     a,r5
145D 120100    3935            lcall   ___fsgt
1460 AA82      3936            mov     r2,dpl
1462 E581      3937            mov     a,sp
1464 24FC      3938            add     a,#0xfc
1466 F581      3939            mov     sp,a
1468 EA        3940            mov     a,r2
1469 7001      3941            jnz     L022005?
146B           3942   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:407: return 1;
146B 900001    3943            mov     dptr,#0x0001
146E           3944   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:409: return 0;
146E 22        3945            ret
146F           3946   L022005?:
146F 900000    3947            mov     dptr,#0x0000
1472 22        3948            ret
1473           3949   ;------------------------------------------------------------
1473           3950   ;Allocation info for local variables in function 'Find_Object'
1473           3951   ;------------------------------------------------------------
1473           3952   ;------------------------------------------------------------
1473           3953   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:412: void Find_Object( void )
1473           3954   ;        -----------------------------------------
1473           3955   ;         function Find_Object
1473           3956   ;        -----------------------------------------
1473           3957   _Find_Object:
1473           3958   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:414: Claw_Pos (10);
1473 90000A    3959            mov     dptr,#0x000A
1476 120100    3960            lcall   _Claw_Pos
1479           3961   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:415: stop();
1479 120100    3962            lcall   _stop
147C           3963   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:416: waitms(500);
147C 9001F4    3964            mov     dptr,#0x01F4
147F 120100    3965            lcall   _waitms
1482           3966   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:419: if (dir) {
1482 305068    3967            jnb     _dir,L023002?
1485           3968   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:421: mot_dir(1,0);
1485 E4        3969            clr     a
1486 F540      3970            mov     _mot_dir_PARM_2,a
1488 F541      3971            mov     (_mot_dir_PARM_2 + 1),a
148A 900001    3972            mov     dptr,#0x0001
148D 120100    3973            lcall   _mot_dir
1490           3974   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:422: pwmR = 0;
1490 9018B0    3975            mov     dptr,#_pwmR
1493 E4        3976            clr     a
1494 F0        3977            movx    @dptr,a
1495 A3        3978            inc     dptr
1496 F0        3979            movx    @dptr,a
1497           3980   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:423: pwmL = BASEPWM;
1497 9018F0    3981            mov     dptr,#_pwmL
149A 7419      3982            mov     a,#0x19
149C F0        3983            movx    @dptr,a
149D E4        3984            clr     a
149E A3        3985            inc     dptr
149F F0        3986            movx    @dptr,a
14A0 8001      3987            sjmp    L023004?
14A2           3988   L023002?:
14A2           3989   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:426: mot_dir(0,1);
14A2 754001    3990            mov     _mot_dir_PARM_2,#0x01
14A5 E4        3991            clr     a
14A6 F541      3992            mov     (_mot_dir_PARM_2 + 1),a
14A8 900000    3993            mov     dptr,#0x0000
14AB 120100    3994            lcall   _mot_dir
14AE           3995   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:427: pwmR = BASEPWM;
14AE 9018B0    3996            mov     dptr,#_pwmR
14B1 7419      3997            mov     a,#0x19
14B3 F0        3998            movx    @dptr,a
14B4 E4        3999            clr     a
14B5 A3        4000            inc     dptr
14B6 F0        4001            movx    @dptr,a
14B7           4002   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:428: pwmL =0;
14B7 9018F0    4003            mov     dptr,#_pwmL
14BA E4        4004            clr     a
14BB F0        4005            movx    @dptr,a
14BC A3        4006            inc     dptr
14BD F0        4007            movx    @dptr,a
14BE           4008   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:432: while (Detect_Object() != 1);                //locate an object with the IR sensors
14BE           4009   L023004?:
14BE 120100    4010            lcall   _Detect_Object
14C1 AA82      4011            mov     r2,dpl
14C3 AB83      4012            mov     r3,dph
14C5 BA01A8    4013            cjne    r2,#0x01,L023004?
14C8 BB00A8    4014            cjne    r3,#0x00,L023004?
14CB 22        4015            ret
14CC           4016   ;------------------------------------------------------------
14CC           4017   ;Allocation info for local variables in function 'Bridge_Rotate'
14CC           4018   ;------------------------------------------------------------
14CC           4019   ;gnd_VM                    Allocated with name '_Bridge_Rotate_PARM_2'
14CC           4020   ;gnd_VR                    Allocated with name '_Bridge_Rotate_PARM_3'
14CC           4021   ;gnd_VL                    Allocated with name '_Bridge_Rotate_gnd_VL_1_159'
14CC           4022   ;sloc0                     Allocated with name '_Bridge_Rotate_sloc0_1_0'
14CC           4023   ;sloc1                     Allocated with name '_Bridge_Rotate_sloc1_1_0'
14CC           4024   ;sloc2                     Allocated with name '_Bridge_Rotate_sloc2_1_0'
14CC           4025   ;------------------------------------------------------------
14CC           4026   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:435: void Bridge_Rotate(unsigned short int* gnd_VL, unsigned short int* gnd_VM, unsigned short int* gnd_VR)
14CC           4027   ;        -----------------------------------------
14CC           4028   ;         function Bridge_Rotate
14CC           4029   ;        -----------------------------------------
14CC           4030   _Bridge_Rotate:
14CC 8582B0    4031            mov     _Bridge_Rotate_gnd_VL_1_159,dpl
14CF 8583B1    4032            mov     (_Bridge_Rotate_gnd_VL_1_159 + 1),dph
14D2 85F0B2    4033            mov     (_Bridge_Rotate_gnd_VL_1_159 + 2),b
14D5           4034   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:437: if (dir) {
14D5 2050E8    4035            jb      _dir,L024021?
14D8 020100    4036            ljmp    L024010?
14DB           4037   L024021?:
14DB           4038   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:438: mot_dir(0,1);
14DB 754001    4039            mov     _mot_dir_PARM_2,#0x01
14DE E4        4040            clr     a
14DF F541      4041            mov     (_mot_dir_PARM_2 + 1),a
14E1 900000    4042            mov     dptr,#0x0000
14E4 120100    4043            lcall   _mot_dir
14E7           4044   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:439: pwmL = BASEPWM+10;
14E7 9018F0    4045            mov     dptr,#_pwmL
14EA 7423      4046            mov     a,#0x23
14EC F0        4047            movx    @dptr,a
14ED E4        4048            clr     a
14EE A3        4049            inc     dptr
14EF F0        4050            movx    @dptr,a
14F0           4051   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:440: pwmR = BASEPWM+10;   
14F0 9018B0    4052            mov     dptr,#_pwmR
14F3 7423      4053            mov     a,#0x23
14F5 F0        4054            movx    @dptr,a
14F6 E4        4055            clr     a
14F7 A3        4056            inc     dptr
14F8 F0        4057            movx    @dptr,a
14F9           4058   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:441: waitms(700);
14F9 9002BC    4059            mov     dptr,#0x02BC
14FC 120100    4060            lcall   _waitms
14FF           4061   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:442: while ((Volts_at_Pin(QFP32_MUX_P1_4)*1000 < *gnd_VR-TAPEOFFSET) || (Volts_at_Pin(QFP32_MUX_P1_5)*1000 < *gnd_VM-TAPEOFFSET));
14FF 852050    4062            mov     _Bridge_Rotate_sloc1_1_0,_Bridge_Rotate_PARM_3
1502 852151    4063            mov     (_Bridge_Rotate_sloc1_1_0 + 1),(_Bridge_Rotate_PARM_3 + 1)
1505 852252    4064            mov     (_Bridge_Rotate_sloc1_1_0 + 2),(_Bridge_Rotate_PARM_3 + 2)
1508 857000    4065            mov     _Bridge_Rotate_sloc0_1_0,_Bridge_Rotate_PARM_2
150B 857101    4066            mov     (_Bridge_Rotate_sloc0_1_0 + 1),(_Bridge_Rotate_PARM_2 + 1)
150E 857202    4067            mov     (_Bridge_Rotate_sloc0_1_0 + 2),(_Bridge_Rotate_PARM_2 + 2)
1511           4068   L024002?:
1511 75820A    4069            mov     dpl,#0x0A
1514 120100    4070            lcall   _Volts_at_Pin
1517 A882      4071            mov     r0,dpl
1519 A983      4072            mov     r1,dph
151B ADF0      4073            mov     r5,b
151D FE        4074            mov     r6,a
151E C000      4075            push    ar0
1520 C001      4076            push    ar1
1522 C005      4077            push    ar5
1524 C006      4078            push    ar6
1526 900000    4079            mov     dptr,#0x0000
1529 75F07A    4080            mov     b,#0x7A
152C 7444      4081            mov     a,#0x44
152E 120100    4082            lcall   ___fsmul
1531 8582A0    4083            mov     _Bridge_Rotate_sloc2_1_0,dpl
1534 8583A1    4084            mov     (_Bridge_Rotate_sloc2_1_0 + 1),dph
1537 85F0A2    4085            mov     (_Bridge_Rotate_sloc2_1_0 + 2),b
153A F5A3      4086            mov     (_Bridge_Rotate_sloc2_1_0 + 3),a
153C E581      4087            mov     a,sp
153E 24FC      4088            add     a,#0xfc
1540 F581      4089            mov     sp,a
1542 855082    4090            mov     dpl,_Bridge_Rotate_sloc1_1_0
1545 855183    4091            mov     dph,(_Bridge_Rotate_sloc1_1_0 + 1)
1548 8552F0    4092            mov     b,(_Bridge_Rotate_sloc1_1_0 + 2)
154B 120100    4093            lcall   __gptrget
154E F9        4094            mov     r1,a
154F A3        4095            inc     dptr
1550 120100    4096            lcall   __gptrget
1553 FD        4097            mov     r5,a
1554 E9        4098            mov     a,r1
1555 2470      4099            add     a,#0x70
1557 F582      4100            mov     dpl,a
1559 ED        4101            mov     a,r5
155A 34FE      4102            addc    a,#0xfe
155C F583      4103            mov     dph,a
155E 120100    4104            lcall   ___uint2fs
1561 AD82      4105            mov     r5,dpl
1563 AE83      4106            mov     r6,dph
1565 AFF0      4107            mov     r7,b
1567 F8        4108            mov     r0,a
1568 C005      4109            push    ar5
156A C006      4110            push    ar6
156C C007      4111            push    ar7
156E C000      4112            push    ar0
1570 85A082    4113            mov     dpl,_Bridge_Rotate_sloc2_1_0
1573 85A183    4114            mov     dph,(_Bridge_Rotate_sloc2_1_0 + 1)
1576 85A2F0    4115            mov     b,(_Bridge_Rotate_sloc2_1_0 + 2)
1579 E5A3      4116            mov     a,(_Bridge_Rotate_sloc2_1_0 + 3)
157B 120100    4117            lcall   ___fslt
157E AD82      4118            mov     r5,dpl
1580 E581      4119            mov     a,sp
1582 24FC      4120            add     a,#0xfc
1584 F581      4121            mov     sp,a
1586 ED        4122            mov     a,r5
1587 7001      4123            jnz     L024002?
1589 75820B    4124            mov     dpl,#0x0B
158C 120100    4125            lcall   _Volts_at_Pin
158F AD82      4126            mov     r5,dpl
1591 AE83      4127            mov     r6,dph
1593 AFF0      4128            mov     r7,b
1595 F8        4129            mov     r0,a
1596 C005      4130            push    ar5
1598 C006      4131            push    ar6
159A C007      4132            push    ar7
159C C000      4133            push    ar0
159E 900000    4134            mov     dptr,#0x0000
15A1 75F07A    4135            mov     b,#0x7A
15A4 7444      4136            mov     a,#0x44
15A6 120100    4137            lcall   ___fsmul
15A9 8582A0    4138            mov     _Bridge_Rotate_sloc2_1_0,dpl
15AC 8583A1    4139            mov     (_Bridge_Rotate_sloc2_1_0 + 1),dph
15AF 85F0A2    4140            mov     (_Bridge_Rotate_sloc2_1_0 + 2),b
15B2 F5A3      4141            mov     (_Bridge_Rotate_sloc2_1_0 + 3),a
15B4 E581      4142            mov     a,sp
15B6 24FC      4143            add     a,#0xfc
15B8 F581      4144            mov     sp,a
15BA 850082    4145            mov     dpl,_Bridge_Rotate_sloc0_1_0
15BD 850183    4146            mov     dph,(_Bridge_Rotate_sloc0_1_0 + 1)
15C0 8502F0    4147            mov     b,(_Bridge_Rotate_sloc0_1_0 + 2)
15C3 120100    4148            lcall   __gptrget
15C6 F9        4149            mov     r1,a
15C7 A3        4150            inc     dptr
15C8 120100    4151            lcall   __gptrget
15CB FD        4152            mov     r5,a
15CC E9        4153            mov     a,r1
15CD 2470      4154            add     a,#0x70
15CF F582      4155            mov     dpl,a
15D1 ED        4156            mov     a,r5
15D2 34FE      4157            addc    a,#0xfe
15D4 F583      4158            mov     dph,a
15D6 120100    4159            lcall   ___uint2fs
15D9 AD82      4160            mov     r5,dpl
15DB AE83      4161            mov     r6,dph
15DD AFF0      4162            mov     r7,b
15DF F8        4163            mov     r0,a
15E0 C005      4164            push    ar5
15E2 C006      4165            push    ar6
15E4 C007      4166            push    ar7
15E6 C000      4167            push    ar0
15E8 85A082    4168            mov     dpl,_Bridge_Rotate_sloc2_1_0
15EB 85A183    4169            mov     dph,(_Bridge_Rotate_sloc2_1_0 + 1)
15EE 85A2F0    4170            mov     b,(_Bridge_Rotate_sloc2_1_0 + 2)
15F1 E5A3      4171            mov     a,(_Bridge_Rotate_sloc2_1_0 + 3)
15F3 120100    4172            lcall   ___fslt
15F6 AD82      4173            mov     r5,dpl
15F8 E581      4174            mov     a,sp
15FA 24FC      4175            add     a,#0xfc
15FC F581      4176            mov     sp,a
15FE ED        4177            mov     a,r5
15FF 6001      4178            jz      L024023?
1601 020100    4179            ljmp    L024002?
1604           4180   L024023?:
1604           4181   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:443: Find_Tape(gnd_VM,0);
1604 E4        4182            clr     a
1605 F500      4183            mov     _Find_Tape_PARM_2,a
1607 F501      4184            mov     (_Find_Tape_PARM_2 + 1),a
1609 850082    4185            mov     dpl,_Bridge_Rotate_sloc0_1_0
160C 850183    4186            mov     dph,(_Bridge_Rotate_sloc0_1_0 + 1)
160F 8502F0    4187            mov     b,(_Bridge_Rotate_sloc0_1_0 + 2)
1612 020100    4188            ljmp    _Find_Tape
1615           4189   L024010?:
1615           4190   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:445: mot_dir(1,0);
1615 E4        4191            clr     a
1616 F540      4192            mov     _mot_dir_PARM_2,a
1618 F541      4193            mov     (_mot_dir_PARM_2 + 1),a
161A 900001    4194            mov     dptr,#0x0001
161D 120100    4195            lcall   _mot_dir
1620           4196   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:446: pwmL = BASEPWM+10;
1620 9018F0    4197            mov     dptr,#_pwmL
1623 7423      4198            mov     a,#0x23
1625 F0        4199            movx    @dptr,a
1626 E4        4200            clr     a
1627 A3        4201            inc     dptr
1628 F0        4202            movx    @dptr,a
1629           4203   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:447: pwmR = BASEPWM+10;   
1629 9018B0    4204            mov     dptr,#_pwmR
162C 7423      4205            mov     a,#0x23
162E F0        4206            movx    @dptr,a
162F E4        4207            clr     a
1630 A3        4208            inc     dptr
1631 F0        4209            movx    @dptr,a
1632           4210   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:448: waitms(700);
1632 9002BC    4211            mov     dptr,#0x02BC
1635 120100    4212            lcall   _waitms
1638           4213   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:449: while ((Volts_at_Pin(QFP32_MUX_P1_6)*1000 < *gnd_VL-TAPEOFFSET) || (Volts_at_Pin(QFP32_MUX_P1_5)*1000 < *gnd_VM-TAPEOFFSET));
1638 AD70      4214            mov     r5,_Bridge_Rotate_PARM_2
163A AE71      4215            mov     r6,(_Bridge_Rotate_PARM_2 + 1)
163C AF72      4216            mov     r7,(_Bridge_Rotate_PARM_2 + 2)
163E           4217   L024006?:
163E C005      4218            push    ar5
1640 C006      4219            push    ar6
1642 C007      4220            push    ar7
1644 75820C    4221            mov     dpl,#0x0C
1647 C005      4222            push    ar5
1649 C006      4223            push    ar6
164B C007      4224            push    ar7
164D 120100    4225            lcall   _Volts_at_Pin
1650 A882      4226            mov     r0,dpl
1652 A983      4227            mov     r1,dph
1654 AAF0      4228            mov     r2,b
1656 FB        4229            mov     r3,a
1657 C000      4230            push    ar0
1659 C001      4231            push    ar1
165B C002      4232            push    ar2
165D C003      4233            push    ar3
165F 900000    4234            mov     dptr,#0x0000
1662 75F07A    4235            mov     b,#0x7A
1665 7444      4236            mov     a,#0x44
1667 120100    4237            lcall   ___fsmul
166A AA82      4238            mov     r2,dpl
166C AB83      4239            mov     r3,dph
166E ACF0      4240            mov     r4,b
1670 F8        4241            mov     r0,a
1671 E581      4242            mov     a,sp
1673 24FC      4243            add     a,#0xfc
1675 F581      4244            mov     sp,a
1677 D007      4245            pop     ar7
1679 D006      4246            pop     ar6
167B D005      4247            pop     ar5
167D 85B082    4248            mov     dpl,_Bridge_Rotate_gnd_VL_1_159
1680 85B183    4249            mov     dph,(_Bridge_Rotate_gnd_VL_1_159 + 1)
1683 85B2F0    4250            mov     b,(_Bridge_Rotate_gnd_VL_1_159 + 2)
1686 120100    4251            lcall   __gptrget
1689 F9        4252            mov     r1,a
168A A3        4253            inc     dptr
168B 120100    4254            lcall   __gptrget
168E FD        4255            mov     r5,a
168F E9        4256            mov     a,r1
1690 2470      4257            add     a,#0x70
1692 F582      4258            mov     dpl,a
1694 ED        4259            mov     a,r5
1695 34FE      4260            addc    a,#0xfe
1697 F583      4261            mov     dph,a
1699 C002      4262            push    ar2
169B C003      4263            push    ar3
169D C004      4264            push    ar4
169F C000      4265            push    ar0
16A1 120100    4266            lcall   ___uint2fs
16A4 AD82      4267            mov     r5,dpl
16A6 AE83      4268            mov     r6,dph
16A8 AFF0      4269            mov     r7,b
16AA F9        4270            mov     r1,a
16AB D000      4271            pop     ar0
16AD D004      4272            pop     ar4
16AF D003      4273            pop     ar3
16B1 D002      4274            pop     ar2
16B3 C005      4275            push    ar5
16B5 C006      4276            push    ar6
16B7 C007      4277            push    ar7
16B9 C005      4278            push    ar5
16BB C006      4279            push    ar6
16BD C007      4280            push    ar7
16BF C001      4281            push    ar1
16C1 8A82      4282            mov     dpl,r2
16C3 8B83      4283            mov     dph,r3
16C5 8CF0      4284            mov     b,r4
16C7 E8        4285            mov     a,r0
16C8 120100    4286            lcall   ___fslt
16CB AA82      4287            mov     r2,dpl
16CD E581      4288            mov     a,sp
16CF 24FC      4289            add     a,#0xfc
16D1 F581      4290            mov     sp,a
16D3 D007      4291            pop     ar7
16D5 D006      4292            pop     ar6
16D7 D005      4293            pop     ar5
16D9 D007      4294            pop     ar7
16DB D006      4295            pop     ar6
16DD D005      4296            pop     ar5
16DF EA        4297            mov     a,r2
16E0 6001      4298            jz      L024024?
16E2 020100    4299            ljmp    L024006?
16E5           4300   L024024?:
16E5 75820B    4301            mov     dpl,#0x0B
16E8 C005      4302            push    ar5
16EA C006      4303            push    ar6
16EC C007      4304            push    ar7
16EE 120100    4305            lcall   _Volts_at_Pin
16F1 AA82      4306            mov     r2,dpl
16F3 AB83      4307            mov     r3,dph
16F5 ACF0      4308            mov     r4,b
16F7 F8        4309            mov     r0,a
16F8 C002      4310            push    ar2
16FA C003      4311            push    ar3
16FC C004      4312            push    ar4
16FE C000      4313            push    ar0
1700 900000    4314            mov     dptr,#0x0000
1703 75F07A    4315            mov     b,#0x7A
1706 7444      4316            mov     a,#0x44
1708 120100    4317            lcall   ___fsmul
170B 8582A0    4318            mov     _Bridge_Rotate_sloc2_1_0,dpl
170E 8583A1    4319            mov     (_Bridge_Rotate_sloc2_1_0 + 1),dph
1711 85F0A2    4320            mov     (_Bridge_Rotate_sloc2_1_0 + 2),b
1714 F5A3      4321            mov     (_Bridge_Rotate_sloc2_1_0 + 3),a
1716 E581      4322            mov     a,sp
1718 24FC      4323            add     a,#0xfc
171A F581      4324            mov     sp,a
171C D007      4325            pop     ar7
171E D006      4326            pop     ar6
1720 D005      4327            pop     ar5
1722 8D82      4328            mov     dpl,r5
1724 8E83      4329            mov     dph,r6
1726 8FF0      4330            mov     b,r7
1728 120100    4331            lcall   __gptrget
172B F9        4332            mov     r1,a
172C A3        4333            inc     dptr
172D 120100    4334            lcall   __gptrget
1730 FA        4335            mov     r2,a
1731 E9        4336            mov     a,r1
1732 2470      4337            add     a,#0x70
1734 F582      4338            mov     dpl,a
1736 EA        4339            mov     a,r2
1737 34FE      4340            addc    a,#0xfe
1739 F583      4341            mov     dph,a
173B C005      4342            push    ar5
173D C006      4343            push    ar6
173F C007      4344            push    ar7
1741 120100    4345            lcall   ___uint2fs
1744 AA82      4346            mov     r2,dpl
1746 AB83      4347            mov     r3,dph
1748 ACF0      4348            mov     r4,b
174A F8        4349            mov     r0,a
174B C002      4350            push    ar2
174D C003      4351            push    ar3
174F C004      4352            push    ar4
1751 C000      4353            push    ar0
1753 85A082    4354            mov     dpl,_Bridge_Rotate_sloc2_1_0
1756 85A183    4355            mov     dph,(_Bridge_Rotate_sloc2_1_0 + 1)
1759 85A2F0    4356            mov     b,(_Bridge_Rotate_sloc2_1_0 + 2)
175C E5A3      4357            mov     a,(_Bridge_Rotate_sloc2_1_0 + 3)
175E 120100    4358            lcall   ___fslt
1761 AA82      4359            mov     r2,dpl
1763 E581      4360            mov     a,sp
1765 24FC      4361            add     a,#0xfc
1767 F581      4362            mov     sp,a
1769 D007      4363            pop     ar7
176B D006      4364            pop     ar6
176D D005      4365            pop     ar5
176F EA        4366            mov     a,r2
1770 6001      4367            jz      L024025?
1772 020100    4368            ljmp    L024006?
1775           4369   L024025?:
1775           4370   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:450: Find_Tape(gnd_VM,0);
1775 E4        4371            clr     a
1776 F500      4372            mov     _Find_Tape_PARM_2,a
1778 F501      4373            mov     (_Find_Tape_PARM_2 + 1),a
177A 8D82      4374            mov     dpl,r5
177C 8E83      4375            mov     dph,r6
177E 8FF0      4376            mov     b,r7
1780           4377   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:452: return;
1780 020100    4378            ljmp    _Find_Tape
1783           4379   ;------------------------------------------------------------
1783           4380   ;Allocation info for local variables in function 'Run_Autonomous'
1783           4381   ;------------------------------------------------------------
1783           4382   ;gnd_VL                    Allocated with name '_Run_Autonomous_gnd_VL_1_164'
1783           4383   ;gnd_VR                    Allocated with name '_Run_Autonomous_gnd_VR_1_164'
1783           4384   ;gnd_VM                    Allocated with name '_Run_Autonomous_gnd_VM_1_164'
1783           4385   ;------------------------------------------------------------
1783           4386   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:455: void Run_Autonomous (void)
1783           4387   ;        -----------------------------------------
1783           4388   ;         function Run_Autonomous
1783           4389   ;        -----------------------------------------
1783           4390   _Run_Autonomous:
1783           4391   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:463: find_bridge_flag = 0;
1783 C210      4392            clr     _find_bridge_flag
1785           4393   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:464: Calibrate_LSensors(&gnd_VL,&gnd_VM,&gnd_VR);         
1785 7540A0    4394            mov     _Calibrate_LSensors_PARM_2,#_Run_Autonomous_gnd_VM_1_164
1788 7541C8    4395            mov     (_Calibrate_LSensors_PARM_2 + 1),#(_Run_Autonomous_gnd_VM_1_164 >> 8)
178B 754200    4396            mov     (_Calibrate_LSensors_PARM_2 + 2),#0x00
178E 75F050    4397            mov     _Calibrate_LSensors_PARM_3,#_Run_Autonomous_gnd_VR_1_164
1791 75F1C8    4398            mov     (_Calibrate_LSensors_PARM_3 + 1),#(_Run_Autonomous_gnd_VR_1_164 >> 8)
1794 75F200    4399            mov     (_Calibrate_LSensors_PARM_3 + 2),#0x00
1797 90C800    4400            mov     dptr,#_Run_Autonomous_gnd_VL_1_164
179A 75F000    4401            mov     b,#0x00
179D 120100    4402            lcall   _Calibrate_LSensors
17A0           4403   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:465: Find_Tape(&gnd_VM,0);                //exits when middle sensor hits tape
17A0 E4        4404            clr     a
17A1 F500      4405            mov     _Find_Tape_PARM_2,a
17A3 F501      4406            mov     (_Find_Tape_PARM_2 + 1),a
17A5 90C8A0    4407            mov     dptr,#_Run_Autonomous_gnd_VM_1_164
17A8 75F000    4408            mov     b,#0x00
17AB 120100    4409            lcall   _Find_Tape
17AE           4410   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:466: Rotate(&gnd_VL,&gnd_VR);                     //exits when middle sensor on tape, right and left not
17AE 75B050    4411            mov     _Rotate_PARM_2,#_Run_Autonomous_gnd_VR_1_164
17B1 75B1C8    4412            mov     (_Rotate_PARM_2 + 1),#(_Run_Autonomous_gnd_VR_1_164 >> 8)
17B4 75B200    4413            mov     (_Rotate_PARM_2 + 2),#0x00
17B7 90C800    4414            mov     dptr,#_Run_Autonomous_gnd_VL_1_164
17BA 75F000    4415            mov     b,#0x00
17BD 120100    4416            lcall   _Rotate
17C0           4417   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:467: break_when_dir_found = 1;
17C0 D2E0      4418            setb    _break_when_dir_found
17C2           4419   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:468: Follow_Tape(&gnd_VL,&gnd_VM,&gnd_VR);                //exits when direction is found
17C2 75A0A0    4420            mov     _Follow_Tape_PARM_2,#_Run_Autonomous_gnd_VM_1_164
17C5 75A1C8    4421            mov     (_Follow_Tape_PARM_2 + 1),#(_Run_Autonomous_gnd_VM_1_164 >> 8)
17C8 75A200    4422            mov     (_Follow_Tape_PARM_2 + 2),#0x00
17CB 755050    4423            mov     _Follow_Tape_PARM_3,#_Run_Autonomous_gnd_VR_1_164
17CE 7551C8    4424            mov     (_Follow_Tape_PARM_3 + 1),#(_Run_Autonomous_gnd_VR_1_164 >> 8)
17D1 755200    4425            mov     (_Follow_Tape_PARM_3 + 2),#0x00
17D4 90C800    4426            mov     dptr,#_Run_Autonomous_gnd_VL_1_164
17D7 75F000    4427            mov     b,#0x00
17DA 120100    4428            lcall   _Follow_Tape
17DD           4429   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:469: stop();
17DD 120100    4430            lcall   _stop
17E0           4431   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:470: Claw_Pos(10);
17E0 90000A    4432            mov     dptr,#0x000A
17E3 120100    4433            lcall   _Claw_Pos
17E6           4434   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:471: waitms(1000);                                                                //allow the claw to open before IR sensors scan
17E6 9003E8    4435            mov     dptr,#0x03E8
17E9 120100    4436            lcall   _waitms
17EC           4437   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:472: Find_Object();                                                               //exits when an object is detected in front of IR or ultrasonic sensor
17EC 120100    4438            lcall   _Find_Object
17EF           4439   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:473: Track_Object();                                                              //exits when claw has been closed on the object
17EF 120100    4440            lcall   _Track_Object
17F2           4441   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:474: Calibrate_LSensors(&gnd_VL,&gnd_VM,&gnd_VR);                                                                                                                                                         //needed?
17F2 7540A0    4442            mov     _Calibrate_LSensors_PARM_2,#_Run_Autonomous_gnd_VM_1_164
17F5 7541C8    4443            mov     (_Calibrate_LSensors_PARM_2 + 1),#(_Run_Autonomous_gnd_VM_1_164 >> 8)
17F8 754200    4444            mov     (_Calibrate_LSensors_PARM_2 + 2),#0x00
17FB 75F050    4445            mov     _Calibrate_LSensors_PARM_3,#_Run_Autonomous_gnd_VR_1_164
17FE 75F1C8    4446            mov     (_Calibrate_LSensors_PARM_3 + 1),#(_Run_Autonomous_gnd_VR_1_164 >> 8)
1801 75F200    4447            mov     (_Calibrate_LSensors_PARM_3 + 2),#0x00
1804 90C800    4448            mov     dptr,#_Run_Autonomous_gnd_VL_1_164
1807 75F000    4449            mov     b,#0x00
180A 120100    4450            lcall   _Calibrate_LSensors
180D           4451   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:475: Find_Tape(&gnd_VM,1);                //exits when middle sensor hits tape (backwards)
180D 750001    4452            mov     _Find_Tape_PARM_2,#0x01
1810 E4        4453            clr     a
1811 F501      4454            mov     (_Find_Tape_PARM_2 + 1),a
1813 90C8A0    4455            mov     dptr,#_Run_Autonomous_gnd_VM_1_164
1816 75F000    4456            mov     b,#0x00
1819 120100    4457            lcall   _Find_Tape
181C           4458   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:476: dir_count = 0;                                                               //reset direction counter to find new direction
181C 901830    4459            mov     dptr,#_dir_count
181F E4        4460            clr     a
1820 F0        4461            movx    @dptr,a
1821 A3        4462            inc     dptr
1822 F0        4463            movx    @dptr,a
1823           4464   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:477: Follow_Tape(&gnd_VL,&gnd_VM,&gnd_VR);                //exits when direction is found
1823 75A0A0    4465            mov     _Follow_Tape_PARM_2,#_Run_Autonomous_gnd_VM_1_164
1826 75A1C8    4466            mov     (_Follow_Tape_PARM_2 + 1),#(_Run_Autonomous_gnd_VM_1_164 >> 8)
1829 75A200    4467            mov     (_Follow_Tape_PARM_2 + 2),#0x00
182C 755050    4468            mov     _Follow_Tape_PARM_3,#_Run_Autonomous_gnd_VR_1_164
182F 7551C8    4469            mov     (_Follow_Tape_PARM_3 + 1),#(_Run_Autonomous_gnd_VR_1_164 >> 8)
1832 755200    4470            mov     (_Follow_Tape_PARM_3 + 2),#0x00
1835 90C800    4471            mov     dptr,#_Run_Autonomous_gnd_VL_1_164
1838 75F000    4472            mov     b,#0x00
183B 120100    4473            lcall   _Follow_Tape
183E           4474   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:478: find_bridge_flag = 1;                                                //tell follow_tape to find the bridge
183E D210      4475            setb    _find_bridge_flag
1840           4476   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:479: circ2 = 1;                                                                   //looking for second circle
1840 D290      4477            setb    _circ2
1842           4478   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:480: Follow_Tape(&gnd_VL,&gnd_VM,&gnd_VR);                //exits when it has dropped the object in the other circle
1842 75A0A0    4479            mov     _Follow_Tape_PARM_2,#_Run_Autonomous_gnd_VM_1_164
1845 75A1C8    4480            mov     (_Follow_Tape_PARM_2 + 1),#(_Run_Autonomous_gnd_VM_1_164 >> 8)
1848 75A200    4481            mov     (_Follow_Tape_PARM_2 + 2),#0x00
184B 755050    4482            mov     _Follow_Tape_PARM_3,#_Run_Autonomous_gnd_VR_1_164
184E 7551C8    4483            mov     (_Follow_Tape_PARM_3 + 1),#(_Run_Autonomous_gnd_VR_1_164 >> 8)
1851 755200    4484            mov     (_Follow_Tape_PARM_3 + 2),#0x00
1854 90C800    4485            mov     dptr,#_Run_Autonomous_gnd_VL_1_164
1857 75F000    4486            mov     b,#0x00
185A 120100    4487            lcall   _Follow_Tape
185D           4488   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:483: stop();
185D 120100    4489            lcall   _stop
1860           4490   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:484: waitms(500);
1860 9001F4    4491            mov     dptr,#0x01F4
1863 120100    4492            lcall   _waitms
1866           4493   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:485: Calibrate_LSensors(&gnd_VL,&gnd_VM,&gnd_VR);                                                                                                                                                         //needed?
1866 7540A0    4494            mov     _Calibrate_LSensors_PARM_2,#_Run_Autonomous_gnd_VM_1_164
1869 7541C8    4495            mov     (_Calibrate_LSensors_PARM_2 + 1),#(_Run_Autonomous_gnd_VM_1_164 >> 8)
186C 754200    4496            mov     (_Calibrate_LSensors_PARM_2 + 2),#0x00
186F 75F050    4497            mov     _Calibrate_LSensors_PARM_3,#_Run_Autonomous_gnd_VR_1_164
1872 75F1C8    4498            mov     (_Calibrate_LSensors_PARM_3 + 1),#(_Run_Autonomous_gnd_VR_1_164 >> 8)
1875 75F200    4499            mov     (_Calibrate_LSensors_PARM_3 + 2),#0x00
1878 90C800    4500            mov     dptr,#_Run_Autonomous_gnd_VL_1_164
187B 75F000    4501            mov     b,#0x00
187E 120100    4502            lcall   _Calibrate_LSensors
1881           4503   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:486: Find_Tape(&gnd_VM,1);
1881 750001    4504            mov     _Find_Tape_PARM_2,#0x01
1884 E4        4505            clr     a
1885 F501      4506            mov     (_Find_Tape_PARM_2 + 1),a
1887 90C8A0    4507            mov     dptr,#_Run_Autonomous_gnd_VM_1_164
188A 75F000    4508            mov     b,#0x00
188D 120100    4509            lcall   _Find_Tape
1890           4510   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:487: Rotate(&gnd_VL,&gnd_VR);                     //exits when middle sensor on tape, right and left not
1890 75B050    4511            mov     _Rotate_PARM_2,#_Run_Autonomous_gnd_VR_1_164
1893 75B1C8    4512            mov     (_Rotate_PARM_2 + 1),#(_Run_Autonomous_gnd_VR_1_164 >> 8)
1896 75B200    4513            mov     (_Rotate_PARM_2 + 2),#0x00
1899 90C800    4514            mov     dptr,#_Run_Autonomous_gnd_VL_1_164
189C 75F000    4515            mov     b,#0x00
189F 120100    4516            lcall   _Rotate
18A2           4517   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:488: Claw_Pos(2);                                                                 //close the claw
18A2 900002    4518            mov     dptr,#0x0002
18A5 120100    4519            lcall   _Claw_Pos
18A8           4520   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:489: dir_count = 0;
18A8 901830    4521            mov     dptr,#_dir_count
18AB E4        4522            clr     a
18AC F0        4523            movx    @dptr,a
18AD A3        4524            inc     dptr
18AE F0        4525            movx    @dptr,a
18AF           4526   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:490: break_when_dir_found = 1;
18AF D2E0      4527            setb    _break_when_dir_found
18B1           4528   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:491: Follow_Tape(&gnd_VL,&gnd_VM,&gnd_VR);                //exits when direction is found
18B1 75A0A0    4529            mov     _Follow_Tape_PARM_2,#_Run_Autonomous_gnd_VM_1_164
18B4 75A1C8    4530            mov     (_Follow_Tape_PARM_2 + 1),#(_Run_Autonomous_gnd_VM_1_164 >> 8)
18B7 75A200    4531            mov     (_Follow_Tape_PARM_2 + 2),#0x00
18BA 755050    4532            mov     _Follow_Tape_PARM_3,#_Run_Autonomous_gnd_VR_1_164
18BD 7551C8    4533            mov     (_Follow_Tape_PARM_3 + 1),#(_Run_Autonomous_gnd_VR_1_164 >> 8)
18C0 755200    4534            mov     (_Follow_Tape_PARM_3 + 2),#0x00
18C3 90C800    4535            mov     dptr,#_Run_Autonomous_gnd_VL_1_164
18C6 75F000    4536            mov     b,#0x00
18C9 120100    4537            lcall   _Follow_Tape
18CC           4538   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:492: find_bridge_flag = 1;                                                //tell follow_tape to find the bridge
18CC D210      4539            setb    _find_bridge_flag
18CE           4540   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:493: circ2 = 0;                                                                   //looking for first circle
18CE C290      4541            clr     _circ2
18D0           4542   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:494: Follow_Tape(&gnd_VL,&gnd_VM,&gnd_VR);                //exits when it has found the first circle (does not have an object)
18D0 75A0A0    4543            mov     _Follow_Tape_PARM_2,#_Run_Autonomous_gnd_VM_1_164
18D3 75A1C8    4544            mov     (_Follow_Tape_PARM_2 + 1),#(_Run_Autonomous_gnd_VM_1_164 >> 8)
18D6 75A200    4545            mov     (_Follow_Tape_PARM_2 + 2),#0x00
18D9 755050    4546            mov     _Follow_Tape_PARM_3,#_Run_Autonomous_gnd_VR_1_164
18DC 7551C8    4547            mov     (_Follow_Tape_PARM_3 + 1),#(_Run_Autonomous_gnd_VR_1_164 >> 8)
18DF 755200    4548            mov     (_Follow_Tape_PARM_3 + 2),#0x00
18E2 90C800    4549            mov     dptr,#_Run_Autonomous_gnd_VL_1_164
18E5 75F000    4550            mov     b,#0x00
18E8 120100    4551            lcall   _Follow_Tape
18EB           4552   ;        D:\School\Elec 291\Project 2\mcar\/lewislib.h:496: debug();
18EB 020100    4553            ljmp    _debug
18EE           4554   ;------------------------------------------------------------
18EE           4555   ;Allocation info for local variables in function '_c51_external_startup'
18EE           4556   ;------------------------------------------------------------
18EE           4557   ;------------------------------------------------------------
18EE           4558   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:65: char _c51_external_startup (void)
18EE           4559   ;        -----------------------------------------
18EE           4560   ;         function _c51_external_startup
18EE           4561   ;        -----------------------------------------
18EE           4562   __c51_external_startup:
18EE           4563   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:68: SFRPAGE = 0x00;
18EE 75A700    4564            mov     _SFRPAGE,#0x00
18F1           4565   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:69: WDTCN = 0xDE; //First key
18F1 7597DE    4566            mov     _WDTCN,#0xDE
18F4           4567   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:70: WDTCN = 0xAD; //Second key
18F4 7597AD    4568            mov     _WDTCN,#0xAD
18F7           4569   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:72: VDM0CN=0x80;       // enable VDD monitor
18F7 75FF80    4570            mov     _VDM0CN,#0x80
18FA           4571   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:73: RSTSRC=0x02|0x04;  // Enable reset on missing clock detector and VDD
18FA 75EF06    4572            mov     _RSTSRC,#0x06
18FD           4573   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:80: SFRPAGE = 0x10;
18FD 75A710    4574            mov     _SFRPAGE,#0x10
1900           4575   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:81: PFE0CN  = 0x20; // SYSCLK < 75 MHz.
1900 75C120    4576            mov     _PFE0CN,#0x20
1903           4577   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:82: SFRPAGE = 0x00;
1903 75A700    4578            mov     _SFRPAGE,#0x00
1906           4579   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:103: CLKSEL = 0x00;
1906 75A900    4580            mov     _CLKSEL,#0x00
1909           4581   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:104: CLKSEL = 0x00;
1909 75A900    4582            mov     _CLKSEL,#0x00
190C           4583   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:105: while ((CLKSEL & 0x80) == 0);
190C           4584   L026001?:
190C E5A9      4585            mov     a,_CLKSEL
190E 30E7A8    4586            jnb     acc.7,L026001?
1911           4587   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:106: CLKSEL = 0x03;
1911 75A903    4588            mov     _CLKSEL,#0x03
1914           4589   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:107: CLKSEL = 0x03;
1914 75A903    4590            mov     _CLKSEL,#0x03
1917           4591   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:108: while ((CLKSEL & 0x80) == 0);
1917           4592   L026004?:
1917 E5A9      4593            mov     a,_CLKSEL
1919 30E7E8    4594            jnb     acc.7,L026004?
191C           4595   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:113: P0MDOUT |= 0x10; // Enable UART0 TX as push-pull output
191C 43A410    4596            orl     _P0MDOUT,#0x10
191F           4597   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:114: XBR0     = 0x01; // Enable UART0 on P0.4(TX) and P0.5(RX)                     
191F 75E101    4598            mov     _XBR0,#0x01
1922           4599   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:115: XBR1     = 0X00;
1922 75E200    4600            mov     _XBR1,#0x00
1925           4601   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:116: XBR2     = 0x40; // Enable crossbar and weak pull-ups
1925 75E340    4602            mov     _XBR2,#0x40
1928           4603   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:122: SCON0 = 0x10;
1928 759810    4604            mov     _SCON0,#0x10
192B           4605   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:123: TH1 = 0x100-((SYSCLK/BAUDRATE)/(2L*12L));
192B 758DE6    4606            mov     _TH1,#0xE6
192E           4607   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:124: TL1 = TH1;      // Init Timer1
192E 858D8B    4608            mov     _TL1,_TH1
1931           4609   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:125: TMOD &= ~0xf0;  // TMOD: timer 1 in 8-bit auto-reload
1931 53890F    4610            anl     _TMOD,#0x0F
1934           4611   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:126: TMOD |=  0x20;                       
1934 438920    4612            orl     _TMOD,#0x20
1937           4613   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:127: TR1 = 1; // START Timer1
1937 D28E      4614            setb    _TR1
1939           4615   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:128: TI = 1;  // Indicate TX0 ready
1939 D299      4616            setb    _TI
193B           4617   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:131: TMR2CN0=0x00;   // Stop Timer2; Clear TF2;
193B 75C800    4618            mov     _TMR2CN0,#0x00
193E           4619   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:132: CKCON0|=0b_0001_0000; // Timer 2 uses the system clock
193E 438E10    4620            orl     _CKCON0,#0x10
1941           4621   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:133: TMR2RL=(0x10000L-(SYSCLK/10000L)); // Initialize reload value
1941 75CAE0    4622            mov     _TMR2RL,#0xE0
1944 75CBE3    4623            mov     (_TMR2RL >> 8),#0xE3
1947           4624   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:134: TMR2=0xffff;   // Set to reload immediately
1947 75CEFF    4625            mov     _TMR2,#0xFF
194A 75CFFF    4626            mov     (_TMR2 >> 8),#0xFF
194D           4627   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:135: ET2=1;         // Enable Timer2 interrupts
194D D2AD      4628            setb    _ET2
194F           4629   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:136: TR2=1;         // Start Timer2 (TMR2CN is bit addressable)
194F D2CA      4630            setb    _TR2
1951           4631   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:138: EA=1; // Enable interrupts
1951 D2AF      4632            setb    _EA
1953           4633   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:140: return 0;
1953 758200    4634            mov     dpl,#0x00
1956 22        4635            ret
1957           4636   ;------------------------------------------------------------
1957           4637   ;Allocation info for local variables in function 'Timer2_ISR'
1957           4638   ;------------------------------------------------------------
1957           4639   ;------------------------------------------------------------
1957           4640   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:143: void Timer2_ISR (void) interrupt 5 using 2
1957           4641   ;        -----------------------------------------
1957           4642   ;         function Timer2_ISR
1957           4643   ;        -----------------------------------------
1957           4644   _Timer2_ISR:
1957           4645            using   2
1957 C080      4646            push    bits
1959 C0E0      4647            push    acc
195B C0F0      4648            push    b
195D C082      4649            push    dpl
195F C083      4650            push    dph
1961 C002      4651            push    (0+2)
1963 C003      4652            push    (0+3)
1965 C004      4653            push    (0+4)
1967 C005      4654            push    (0+5)
1969 C006      4655            push    (0+6)
196B C007      4656            push    (0+7)
196D C000      4657            push    (0+0)
196F C001      4658            push    (0+1)
1971 C0D0      4659            push    psw
1973 75D010    4660            mov     psw,#0x10
1976           4661   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:145: TF2H = 0; // Clear Timer2 interrupt flag
1976 C2CF      4662            clr     _TF2H
1978           4663   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:147: pwm_count++;
1978 9017F0    4664            mov     dptr,#_pwm_count
197B E0        4665            movx    a,@dptr
197C 2401      4666            add     a,#0x01
197E F0        4667            movx    @dptr,a
197F           4668   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:148: if (pwm_count >= 100) {
197F 9017F0    4669            mov     dptr,#_pwm_count
1982 E0        4670            movx    a,@dptr
1983 FA        4671            mov     r2,a
1984 BA6468    4672            cjne    r2,#0x64,L027017?
1987           4673   L027017?:
1987 4001      4674            jc      L027004?
1989           4675   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:149: pwm_count=0;
1989 9017F0    4676            mov     dptr,#_pwm_count
198C E4        4677            clr     a
198D F0        4678            movx    @dptr,a
198E           4679   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:150: timer_count++;
198E 9017B0    4680            mov     dptr,#_timer_count
1991 E0        4681            movx    a,@dptr
1992 2401      4682            add     a,#0x01
1994 F0        4683            movx    @dptr,a
1995 A3        4684            inc     dptr
1996 E0        4685            movx    a,@dptr
1997 3400      4686            addc    a,#0x00
1999 F0        4687            movx    @dptr,a
199A           4688   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:151: if (timer_count >= 50) {          //every 0.5 seconds enter
199A 9017B0    4689            mov     dptr,#_timer_count
199D E0        4690            movx    a,@dptr
199E FA        4691            mov     r2,a
199F A3        4692            inc     dptr
19A0 E0        4693            movx    a,@dptr
19A1 FB        4694            mov     r3,a
19A2 C3        4695            clr     c
19A3 EA        4696            mov     a,r2
19A4 9432      4697            subb    a,#0x32
19A6 EB        4698            mov     a,r3
19A7 9400      4699            subb    a,#0x00
19A9 4001      4700            jc      L027004?
19AB           4701   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:152: timer_count =  0;
19AB 9017B0    4702            mov     dptr,#_timer_count
19AE E4        4703            clr     a
19AF F0        4704            movx    @dptr,a
19B0 A3        4705            inc     dptr
19B1 F0        4706            movx    @dptr,a
19B2           4707   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:153: dir_flag = 0;     
19B2 C220      4708            clr     _dir_flag
19B4           4709   L027004?:
19B4           4710   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:158: if (!ML_dir) {
19B4 2090E8    4711            jb      _ML_dir,L027006?
19B7           4712   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:159: OUTLF = 0;
19B7 C2A1      4713            clr     _P2_1
19B9           4714   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:160: OUTLB =pwm_count>=pwmL?0:1;
19B9 9017F0    4715            mov     dptr,#_pwm_count
19BC E0        4716            movx    a,@dptr
19BD FA        4717            mov     r2,a
19BE 9018F0    4718            mov     dptr,#_pwmL
19C1 E0        4719            movx    a,@dptr
19C2 FB        4720            mov     r3,a
19C3 A3        4721            inc     dptr
19C4 E0        4722            movx    a,@dptr
19C5 FC        4723            mov     r4,a
19C6 7D00      4724            mov     r5,#0x00
19C8 C3        4725            clr     c
19C9 EA        4726            mov     a,r2
19CA 9B        4727            subb    a,r3
19CB ED        4728            mov     a,r5
19CC 9C        4729            subb    a,r4
19CD 92A2      4730            mov     _P2_2,c
19CF 8001      4731            sjmp    L027007?
19D1           4732   L027006?:
19D1           4733   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:162: OUTLB = 0;
19D1 C2A2      4734            clr     _P2_2
19D3           4735   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:163: OUTLF =pwm_count>=pwmL?0:1;
19D3 9017F0    4736            mov     dptr,#_pwm_count
19D6 E0        4737            movx    a,@dptr
19D7 FA        4738            mov     r2,a
19D8 9018F0    4739            mov     dptr,#_pwmL
19DB E0        4740            movx    a,@dptr
19DC FB        4741            mov     r3,a
19DD A3        4742            inc     dptr
19DE E0        4743            movx    a,@dptr
19DF FC        4744            mov     r4,a
19E0 7D00      4745            mov     r5,#0x00
19E2 C3        4746            clr     c
19E3 EA        4747            mov     a,r2
19E4 9B        4748            subb    a,r3
19E5 ED        4749            mov     a,r5
19E6 9C        4750            subb    a,r4
19E7 92A1      4751            mov     _P2_1,c
19E9           4752   L027007?:
19E9           4753   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:166: if (MR_dir) {
19E9 30D068    4754            jnb     _MR_dir,L027009?
19EC           4755   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:167: OUTRF = 0;
19EC C2A3      4756            clr     _P2_3
19EE           4757   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:168: OUTRB =pwm_count>=pwmR?0:1;
19EE 9017F0    4758            mov     dptr,#_pwm_count
19F1 E0        4759            movx    a,@dptr
19F2 FA        4760            mov     r2,a
19F3 9018B0    4761            mov     dptr,#_pwmR
19F6 E0        4762            movx    a,@dptr
19F7 FB        4763            mov     r3,a
19F8 A3        4764            inc     dptr
19F9 E0        4765            movx    a,@dptr
19FA FC        4766            mov     r4,a
19FB 7D00      4767            mov     r5,#0x00
19FD C3        4768            clr     c
19FE EA        4769            mov     a,r2
19FF 9B        4770            subb    a,r3
1A00 ED        4771            mov     a,r5
1A01 9C        4772            subb    a,r4
1A02 92A4      4773            mov     _P2_4,c
1A04 8001      4774            sjmp    L027010?
1A06           4775   L027009?:
1A06           4776   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:170: OUTRB = 0;
1A06 C2A4      4777            clr     _P2_4
1A08           4778   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:171: OUTRF =pwm_count>=pwmR?0:1;
1A08 9017F0    4779            mov     dptr,#_pwm_count
1A0B E0        4780            movx    a,@dptr
1A0C FA        4781            mov     r2,a
1A0D 9018B0    4782            mov     dptr,#_pwmR
1A10 E0        4783            movx    a,@dptr
1A11 FB        4784            mov     r3,a
1A12 A3        4785            inc     dptr
1A13 E0        4786            movx    a,@dptr
1A14 FC        4787            mov     r4,a
1A15 7D00      4788            mov     r5,#0x00
1A17 C3        4789            clr     c
1A18 EA        4790            mov     a,r2
1A19 9B        4791            subb    a,r3
1A1A ED        4792            mov     a,r5
1A1B 9C        4793            subb    a,r4
1A1C 92A3      4794            mov     _P2_3,c
1A1E           4795   L027010?:
1A1E           4796   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:174: sonar_op();       
1A1E 75D000    4797            mov     psw,#0x00
1A21 120100    4798            lcall   _sonar_op
1A24           4799   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:175: claw_control();   
1A24 75D000    4800            mov     psw,#0x00
1A27 120100    4801            lcall   _claw_control
1A2A 75D010    4802            mov     psw,#0x10
1A2D D0D0      4803            pop     psw
1A2F D001      4804            pop     (0+1)
1A31 D000      4805            pop     (0+0)
1A33 D007      4806            pop     (0+7)
1A35 D006      4807            pop     (0+6)
1A37 D005      4808            pop     (0+5)
1A39 D004      4809            pop     (0+4)
1A3B D003      4810            pop     (0+3)
1A3D D002      4811            pop     (0+2)
1A3F D083      4812            pop     dph
1A41 D082      4813            pop     dpl
1A43 D0F0      4814            pop     b
1A45 D0E0      4815            pop     acc
1A47 D080      4816            pop     bits
1A49 32        4817            reti
1A4A           4818   ;------------------------------------------------------------
1A4A           4819   ;Allocation info for local variables in function 'main'
1A4A           4820   ;------------------------------------------------------------
1A4A           4821   ;gnd_VL                    Allocated with name '_main_gnd_VL_1_176'
1A4A           4822   ;gnd_VR                    Allocated with name '_main_gnd_VR_1_176'
1A4A           4823   ;gnd_VM                    Allocated with name '_main_gnd_VM_1_176'
1A4A           4824   ;------------------------------------------------------------
1A4A           4825   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:178: void main (void)
1A4A           4826   ;        -----------------------------------------
1A4A           4827   ;         function main
1A4A           4828   ;        -----------------------------------------
1A4A           4829   _main:
1A4A           4830            using   0
1A4A           4831   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:183: stop();
1A4A 120100    4832            lcall   _stop
1A4D           4833   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:185: InitPinADC(1, 6); // Configure as analog input    //PR L
1A4D 759006    4834            mov     _InitPinADC_PARM_2,#0x06
1A50 758201    4835            mov     dpl,#0x01
1A53 120100    4836            lcall   _InitPinADC
1A56           4837   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:186: InitPinADC(1, 5); // Configure as analog input    //PR M
1A56 759005    4838            mov     _InitPinADC_PARM_2,#0x05
1A59 758201    4839            mov     dpl,#0x01
1A5C 120100    4840            lcall   _InitPinADC
1A5F           4841   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:187: InitPinADC(1, 4); // Configure as analog input    //PR R
1A5F 759004    4842            mov     _InitPinADC_PARM_2,#0x04
1A62 758201    4843            mov     dpl,#0x01
1A65 120100    4844            lcall   _InitPinADC
1A68           4845   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:188: InitPinADC(1, 3); // Configure as analog input    //IR L
1A68 759003    4846            mov     _InitPinADC_PARM_2,#0x03
1A6B 758201    4847            mov     dpl,#0x01
1A6E 120100    4848            lcall   _InitPinADC
1A71           4849   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:189: InitPinADC(1, 2); // Configure as analog input    //IR R
1A71 759002    4850            mov     _InitPinADC_PARM_2,#0x02
1A74 758201    4851            mov     dpl,#0x01
1A77 120100    4852            lcall   _InitPinADC
1A7A           4853   ;        D:\School\Elec 291\Project 2\mcar\mcar_control.c:190: InitADC();
1A7A 020100    4854            ljmp    _InitADC
1A7D           4855            rseg R_CSEG
1A7D           4856   
0000           4857            rseg R_XINIT
0000           4858   __xinit__pwmL:
0000 FFFF      4859            db 0xFF,0xFF    ; 65535
0002           4860   __xinit__pwmR:
0002 FFFF      4861            db 0xFF,0xFF    ; 65535
0004           4862   __xinit__pwm:
0004 FFFF      4863            db 0xFF,0xFF    ; 65535
0006           4864   __xinit__dir_count:
0006 0000      4865            db 0x00,0x00    ;  0
0008           4866   __xinit__pwm_count:
0008 00        4867            db 0x00         ; 0
0009           4868   __xinit__timer_count:
0009 0000      4869            db 0x00,0x00    ; 0
000B           4870   
0000           4871            rseg R_CONST
0000           4872   
002E           4873            CSEG
002E           4874   
002E           4875   end
