0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1069 (Apr 23 2015) (MSVC)
0000              4   ; This file was generated Mon Apr 02 21:05:20 2018
0000              5   ;--------------------------------------------------------
                  5   $name test
                  6   $optc51 --model-small
0000              8            R_DSEG    segment data
0000              9            R_CSEG    segment code
0000             10            R_BSEG    segment bit
0000             11            R_XSEG    segment xdata
0000             12            R_PSEG    segment xdata
0000             13            R_ISEG    segment idata
0000             14            R_OSEG    segment data overlay
0000             15            BIT_BANK  segment data overlay
0000             16            R_HOME    segment code
0000             17            R_GSINIT  segment code
0000             18            R_IXSEG   segment xdata
0000             19            R_CONST   segment code
0000             20            R_XINIT   segment code
0000             21            R_DINIT   segment code
0000             22   
0000             23   ;--------------------------------------------------------
0000             24   ; Public variables in this module
0000             25   ;--------------------------------------------------------
0000             26            public _mot_dir_PARM_2
0000             27            public _InitPinADC_PARM_2
0000             28            public _main
0000             29            public _getchar1
0000             30            public _UART1_Init
0000             31            public __c51_external_startup
0000             32            public _autonomous_prime
0000             33            public _Find_Object
0000             34            public _Detect_Object
0000             35            public _Track_Object
0000             36            public _Follow_Tape
0000             37            public _manual_mode
0000             38            public _Calibrate_LSensors
0000             39            public _Timer2_ISR
0000             40            public _sonar_op
0000             41            public _debug
0000             42            public _spin_right
0000             43            public _spin_left
0000             44            public _stop
0000             45            public _mot_dir
0000             46            public _Volts_at_Pin
0000             47            public _ADC_at_Pin
0000             48            public _UART1_RI
0000             49            public _InitPinADC
0000             50            public _waitms
0000             51            public _Timer3us
0000             52            public _InitADC
0000             53            public _pwm_count
0000             54            public _claw_pos
0000             55            public _sonar_count_2
0000             56            public _sonar_count
0000             57            public _timer_count
0000             58            public _dir_count
0000             59            public _no_signal_1
0000             60            public _no_signal_0
0000             61            public _y_absolute
0000             62            public _x_absolute
0000             63            public _main_int4
0000             64            public _main_int3
0000             65            public _main_int2
0000             66            public _main_int1
0000             67            public _main_short1
0000             68            public _pwmR
0000             69            public _pwmL
0000             70            public _MR_dir
0000             71            public _ML_dir
0000             72            public _counter_above_100
0000             73            public _sonar_state
0000             74            public _circ2
0000             75            public _break_when_dir_found
0000             76            public _dir_flag
0000             77            public _find_circle2_flag
0000             78            public _find_circle1_flag
0000             79            public _find_bridge_flag
0000             80            public _dir
0000             81            public _y_dir
0000             82            public _x_dir
0000             83            public _close
0000             84            public _open
0000             85            public _boost
0000             86            public _autocar
0000             87            public _Bridge_Rotate_PARM_3
0000             88            public _Bridge_Rotate_PARM_2
0000             89            public _Rotate_PARM_2
0000             90            public _Find_Tape_PARM_2
0000             91            public _Follow_Tape_PARM_3
0000             92            public _Follow_Tape_PARM_2
0000             93            public _Calibrate_LSensors_PARM_3
0000             94            public _Calibrate_LSensors_PARM_2
0000             95            public _claw_control
0000             96            public _Claw_Pos
0000             97            public _Find_Tape
0000             98            public _Rotate
0000             99            public _Bridge_Rotate
0000            100   ;--------------------------------------------------------
0000            101   ; Special Function Registers
0000            102   ;--------------------------------------------------------
0000            103   _ACC            DATA 0xe0
0000            104   _ADC0ASAH       DATA 0xb6
0000            105   _ADC0ASAL       DATA 0xb5
0000            106   _ADC0ASCF       DATA 0xa1
0000            107   _ADC0ASCT       DATA 0xc7
0000            108   _ADC0CF0        DATA 0xbc
0000            109   _ADC0CF1        DATA 0xb9
0000            110   _ADC0CF2        DATA 0xdf
0000            111   _ADC0CN0        DATA 0xe8
0000            112   _ADC0CN1        DATA 0xb2
0000            113   _ADC0CN2        DATA 0xb3
0000            114   _ADC0GTH        DATA 0xc4
0000            115   _ADC0GTL        DATA 0xc3
0000            116   _ADC0H          DATA 0xbe
0000            117   _ADC0L          DATA 0xbd
0000            118   _ADC0LTH        DATA 0xc6
0000            119   _ADC0LTL        DATA 0xc5
0000            120   _ADC0MX         DATA 0xbb
0000            121   _B              DATA 0xf0
0000            122   _CKCON0         DATA 0x8e
0000            123   _CKCON1         DATA 0xa6
0000            124   _CLEN0          DATA 0xc6
0000            125   _CLIE0          DATA 0xc7
0000            126   _CLIF0          DATA 0xe8
0000            127   _CLKSEL         DATA 0xa9
0000            128   _CLOUT0         DATA 0xd1
0000            129   _CLU0CF         DATA 0xb1
0000            130   _CLU0FN         DATA 0xaf
0000            131   _CLU0MX         DATA 0x84
0000            132   _CLU1CF         DATA 0xb3
0000            133   _CLU1FN         DATA 0xb2
0000            134   _CLU1MX         DATA 0x85
0000            135   _CLU2CF         DATA 0xb6
0000            136   _CLU2FN         DATA 0xb5
0000            137   _CLU2MX         DATA 0x91
0000            138   _CLU3CF         DATA 0xbf
0000            139   _CLU3FN         DATA 0xbe
0000            140   _CLU3MX         DATA 0xae
0000            141   _CMP0CN0        DATA 0x9b
0000            142   _CMP0CN1        DATA 0x99
0000            143   _CMP0MD         DATA 0x9d
0000            144   _CMP0MX         DATA 0x9f
0000            145   _CMP1CN0        DATA 0xbf
0000            146   _CMP1CN1        DATA 0xac
0000            147   _CMP1MD         DATA 0xab
0000            148   _CMP1MX         DATA 0xaa
0000            149   _CRC0CN0        DATA 0xce
0000            150   _CRC0CN1        DATA 0x86
0000            151   _CRC0CNT        DATA 0xd3
0000            152   _CRC0DAT        DATA 0xcb
0000            153   _CRC0FLIP       DATA 0xcf
0000            154   _CRC0IN         DATA 0xca
0000            155   _CRC0ST         DATA 0xd2
0000            156   _DAC0CF0        DATA 0x91
0000            157   _DAC0CF1        DATA 0x92
0000            158   _DAC0H          DATA 0x85
0000            159   _DAC0L          DATA 0x84
0000            160   _DAC1CF0        DATA 0x93
0000            161   _DAC1CF1        DATA 0x94
0000            162   _DAC1H          DATA 0x8a
0000            163   _DAC1L          DATA 0x89
0000            164   _DAC2CF0        DATA 0x95
0000            165   _DAC2CF1        DATA 0x96
0000            166   _DAC2H          DATA 0x8c
0000            167   _DAC2L          DATA 0x8b
0000            168   _DAC3CF0        DATA 0x9a
0000            169   _DAC3CF1        DATA 0x9c
0000            170   _DAC3H          DATA 0x8e
0000            171   _DAC3L          DATA 0x8d
0000            172   _DACGCF0        DATA 0x88
0000            173   _DACGCF1        DATA 0x98
0000            174   _DACGCF2        DATA 0xa2
0000            175   _DERIVID        DATA 0xad
0000            176   _DEVICEID       DATA 0xb5
0000            177   _DPH            DATA 0x83
0000            178   _DPL            DATA 0x82
0000            179   _EIE1           DATA 0xe6
0000            180   _EIE2           DATA 0xf3
0000            181   _EIP1           DATA 0xbb
0000            182   _EIP1H          DATA 0xee
0000            183   _EIP2           DATA 0xed
0000            184   _EIP2H          DATA 0xf6
0000            185   _EMI0CN         DATA 0xe7
0000            186   _FLKEY          DATA 0xb7
0000            187   _HFO0CAL        DATA 0xc7
0000            188   _HFO1CAL        DATA 0xd6
0000            189   _HFOCN          DATA 0xef
0000            190   _I2C0ADM        DATA 0xff
0000            191   _I2C0CN0        DATA 0xba
0000            192   _I2C0DIN        DATA 0xbc
0000            193   _I2C0DOUT       DATA 0xbb
0000            194   _I2C0FCN0       DATA 0xad
0000            195   _I2C0FCN1       DATA 0xab
0000            196   _I2C0FCT        DATA 0xf5
0000            197   _I2C0SLAD       DATA 0xbd
0000            198   _I2C0STAT       DATA 0xb9
0000            199   _IE             DATA 0xa8
0000            200   _IP             DATA 0xb8
0000            201   _IPH            DATA 0xf2
0000            202   _IT01CF         DATA 0xe4
0000            203   _LFO0CN         DATA 0xb1
0000            204   _P0             DATA 0x80
0000            205   _P0MASK         DATA 0xfe
0000            206   _P0MAT          DATA 0xfd
0000            207   _P0MDIN         DATA 0xf1
0000            208   _P0MDOUT        DATA 0xa4
0000            209   _P0SKIP         DATA 0xd4
0000            210   _P1             DATA 0x90
0000            211   _P1MASK         DATA 0xee
0000            212   _P1MAT          DATA 0xed
0000            213   _P1MDIN         DATA 0xf2
0000            214   _P1MDOUT        DATA 0xa5
0000            215   _P1SKIP         DATA 0xd5
0000            216   _P2             DATA 0xa0
0000            217   _P2MASK         DATA 0xfc
0000            218   _P2MAT          DATA 0xfb
0000            219   _P2MDIN         DATA 0xf3
0000            220   _P2MDOUT        DATA 0xa6
0000            221   _P2SKIP         DATA 0xcc
0000            222   _P3             DATA 0xb0
0000            223   _P3MDIN         DATA 0xf4
0000            224   _P3MDOUT        DATA 0x9c
0000            225   _PCA0CENT       DATA 0x9e
0000            226   _PCA0CLR        DATA 0x9c
0000            227   _PCA0CN0        DATA 0xd8
0000            228   _PCA0CPH0       DATA 0xfc
0000            229   _PCA0CPH1       DATA 0xea
0000            230   _PCA0CPH2       DATA 0xec
0000            231   _PCA0CPH3       DATA 0xf5
0000            232   _PCA0CPH4       DATA 0x85
0000            233   _PCA0CPH5       DATA 0xde
0000            234   _PCA0CPL0       DATA 0xfb
0000            235   _PCA0CPL1       DATA 0xe9
0000            236   _PCA0CPL2       DATA 0xeb
0000            237   _PCA0CPL3       DATA 0xf4
0000            238   _PCA0CPL4       DATA 0x84
0000            239   _PCA0CPL5       DATA 0xdd
0000            240   _PCA0CPM0       DATA 0xda
0000            241   _PCA0CPM1       DATA 0xdb
0000            242   _PCA0CPM2       DATA 0xdc
0000            243   _PCA0CPM3       DATA 0xae
0000            244   _PCA0CPM4       DATA 0xaf
0000            245   _PCA0CPM5       DATA 0xcc
0000            246   _PCA0H          DATA 0xfa
0000            247   _PCA0L          DATA 0xf9
0000            248   _PCA0MD         DATA 0xd9
0000            249   _PCA0POL        DATA 0x96
0000            250   _PCA0PWM        DATA 0xf7
0000            251   _PCON0          DATA 0x87
0000            252   _PCON1          DATA 0xcd
0000            253   _PFE0CN         DATA 0xc1
0000            254   _PRTDRV         DATA 0xf6
0000            255   _PSCTL          DATA 0x8f
0000            256   _PSTAT0         DATA 0xaa
0000            257   _PSW            DATA 0xd0
0000            258   _REF0CN         DATA 0xd1
0000            259   _REG0CN         DATA 0xc9
0000            260   _REVID          DATA 0xb6
0000            261   _RSTSRC         DATA 0xef
0000            262   _SBCON1         DATA 0x94
0000            263   _SBRLH1         DATA 0x96
0000            264   _SBRLL1         DATA 0x95
0000            265   _SBUF           DATA 0x99
0000            266   _SBUF0          DATA 0x99
0000            267   _SBUF1          DATA 0x92
0000            268   _SCON           DATA 0x98
0000            269   _SCON0          DATA 0x98
0000            270   _SCON1          DATA 0xc8
0000            271   _SFRPAGE        DATA 0xa7
0000            272   _SFRPGCN        DATA 0xbc
0000            273   _SFRSTACK       DATA 0xd7
0000            274   _SMB0ADM        DATA 0xd6
0000            275   _SMB0ADR        DATA 0xd7
0000            276   _SMB0CF         DATA 0xc1
0000            277   _SMB0CN0        DATA 0xc0
0000            278   _SMB0DAT        DATA 0xc2
0000            279   _SMB0FCN0       DATA 0xc3
0000            280   _SMB0FCN1       DATA 0xc4
0000            281   _SMB0FCT        DATA 0xef
0000            282   _SMB0RXLN       DATA 0xc5
0000            283   _SMB0TC         DATA 0xac
0000            284   _SMOD1          DATA 0x93
0000            285   _SP             DATA 0x81
0000            286   _SPI0CFG        DATA 0xa1
0000            287   _SPI0CKR        DATA 0xa2
0000            288   _SPI0CN0        DATA 0xf8
0000            289   _SPI0DAT        DATA 0xa3
0000            290   _SPI0FCN0       DATA 0x9a
0000            291   _SPI0FCN1       DATA 0x9b
0000            292   _SPI0FCT        DATA 0xf7
0000            293   _SPI0PCF        DATA 0xdf
0000            294   _TCON           DATA 0x88
0000            295   _TH0            DATA 0x8c
0000            296   _TH1            DATA 0x8d
0000            297   _TL0            DATA 0x8a
0000            298   _TL1            DATA 0x8b
0000            299   _TMOD           DATA 0x89
0000            300   _TMR2CN0        DATA 0xc8
0000            301   _TMR2CN1        DATA 0xfd
0000            302   _TMR2H          DATA 0xcf
0000            303   _TMR2L          DATA 0xce
0000            304   _TMR2RLH        DATA 0xcb
0000            305   _TMR2RLL        DATA 0xca
0000            306   _TMR3CN0        DATA 0x91
0000            307   _TMR3CN1        DATA 0xfe
0000            308   _TMR3H          DATA 0x95
0000            309   _TMR3L          DATA 0x94
0000            310   _TMR3RLH        DATA 0x93
0000            311   _TMR3RLL        DATA 0x92
0000            312   _TMR4CN0        DATA 0x98
0000            313   _TMR4CN1        DATA 0xff
0000            314   _TMR4H          DATA 0xa5
0000            315   _TMR4L          DATA 0xa4
0000            316   _TMR4RLH        DATA 0xa3
0000            317   _TMR4RLL        DATA 0xa2
0000            318   _TMR5CN0        DATA 0xc0
0000            319   _TMR5CN1        DATA 0xf1
0000            320   _TMR5H          DATA 0xd5
0000            321   _TMR5L          DATA 0xd4
0000            322   _TMR5RLH        DATA 0xd3
0000            323   _TMR5RLL        DATA 0xd2
0000            324   _UART0PCF       DATA 0xd9
0000            325   _UART1FCN0      DATA 0x9d
0000            326   _UART1FCN1      DATA 0xd8
0000            327   _UART1FCT       DATA 0xfa
0000            328   _UART1LIN       DATA 0x9e
0000            329   _UART1PCF       DATA 0xda
0000            330   _VDM0CN         DATA 0xff
0000            331   _WDTCN          DATA 0x97
0000            332   _XBR0           DATA 0xe1
0000            333   _XBR1           DATA 0xe2
0000            334   _XBR2           DATA 0xe3
0000            335   _XOSC0CN        DATA 0x86
0000            336   _DPTR           DATA 0x8382
0000            337   _TMR2RL         DATA 0xcbca
0000            338   _TMR3RL         DATA 0x9392
0000            339   _TMR4RL         DATA 0xa3a2
0000            340   _TMR5RL         DATA 0xd3d2
0000            341   _TMR0           DATA 0x8c8a
0000            342   _TMR1           DATA 0x8d8b
0000            343   _TMR2           DATA 0xcfce
0000            344   _TMR3           DATA 0x9594
0000            345   _TMR4           DATA 0xa5a4
0000            346   _TMR5           DATA 0xd5d4
0000            347   _SBRL1          DATA 0x9695
0000            348   _PCA0           DATA 0xfaf9
0000            349   _PCA0CP0        DATA 0xfcfb
0000            350   _PCA0CP1        DATA 0xeae9
0000            351   _PCA0CP2        DATA 0xeceb
0000            352   _PCA0CP3        DATA 0xf5f4
0000            353   _PCA0CP4        DATA 0x8584
0000            354   _PCA0CP5        DATA 0xdedd
0000            355   _ADC0ASA        DATA 0xb6b5
0000            356   _ADC0GT         DATA 0xc4c3
0000            357   _ADC0           DATA 0xbebd
0000            358   _ADC0LT         DATA 0xc6c5
0000            359   _DAC0           DATA 0x8584
0000            360   _DAC1           DATA 0x8a89
0000            361   _DAC2           DATA 0x8c8b
0000            362   _DAC3           DATA 0x8e8d
0000            363   ;--------------------------------------------------------
0000            364   ; special function bits
0000            365   ;--------------------------------------------------------
0000            366   _ACC_0          BIT 0xe0
0000            367   _ACC_1          BIT 0xe1
0000            368   _ACC_2          BIT 0xe2
0000            369   _ACC_3          BIT 0xe3
0000            370   _ACC_4          BIT 0xe4
0000            371   _ACC_5          BIT 0xe5
0000            372   _ACC_6          BIT 0xe6
0000            373   _ACC_7          BIT 0xe7
0000            374   _TEMPE          BIT 0xe8
0000            375   _ADGN0          BIT 0xe9
0000            376   _ADGN1          BIT 0xea
0000            377   _ADWINT         BIT 0xeb
0000            378   _ADBUSY         BIT 0xec
0000            379   _ADINT          BIT 0xed
0000            380   _IPOEN          BIT 0xee
0000            381   _ADEN           BIT 0xef
0000            382   _B_0            BIT 0xf0
0000            383   _B_1            BIT 0xf1
0000            384   _B_2            BIT 0xf2
0000            385   _B_3            BIT 0xf3
0000            386   _B_4            BIT 0xf4
0000            387   _B_5            BIT 0xf5
0000            388   _B_6            BIT 0xf6
0000            389   _B_7            BIT 0xf7
0000            390   _C0FIF          BIT 0xe8
0000            391   _C0RIF          BIT 0xe9
0000            392   _C1FIF          BIT 0xea
0000            393   _C1RIF          BIT 0xeb
0000            394   _C2FIF          BIT 0xec
0000            395   _C2RIF          BIT 0xed
0000            396   _C3FIF          BIT 0xee
0000            397   _C3RIF          BIT 0xef
0000            398   _D1SRC0         BIT 0x88
0000            399   _D1SRC1         BIT 0x89
0000            400   _D1AMEN         BIT 0x8a
0000            401   _D01REFSL       BIT 0x8b
0000            402   _D3SRC0         BIT 0x8c
0000            403   _D3SRC1         BIT 0x8d
0000            404   _D3AMEN         BIT 0x8e
0000            405   _D23REFSL       BIT 0x8f
0000            406   _D0UDIS         BIT 0x98
0000            407   _D1UDIS         BIT 0x99
0000            408   _D2UDIS         BIT 0x9a
0000            409   _D3UDIS         BIT 0x9b
0000            410   _EX0            BIT 0xa8
0000            411   _ET0            BIT 0xa9
0000            412   _EX1            BIT 0xaa
0000            413   _ET1            BIT 0xab
0000            414   _ES0            BIT 0xac
0000            415   _ET2            BIT 0xad
0000            416   _ESPI0          BIT 0xae
0000            417   _EA             BIT 0xaf
0000            418   _PX0            BIT 0xb8
0000            419   _PT0            BIT 0xb9
0000            420   _PX1            BIT 0xba
0000            421   _PT1            BIT 0xbb
0000            422   _PS0            BIT 0xbc
0000            423   _PT2            BIT 0xbd
0000            424   _PSPI0          BIT 0xbe
0000            425   _P0_0           BIT 0x80
0000            426   _P0_1           BIT 0x81
0000            427   _P0_2           BIT 0x82
0000            428   _P0_3           BIT 0x83
0000            429   _P0_4           BIT 0x84
0000            430   _P0_5           BIT 0x85
0000            431   _P0_6           BIT 0x86
0000            432   _P0_7           BIT 0x87
0000            433   _P1_0           BIT 0x90
0000            434   _P1_1           BIT 0x91
0000            435   _P1_2           BIT 0x92
0000            436   _P1_3           BIT 0x93
0000            437   _P1_4           BIT 0x94
0000            438   _P1_5           BIT 0x95
0000            439   _P1_6           BIT 0x96
0000            440   _P1_7           BIT 0x97
0000            441   _P2_0           BIT 0xa0
0000            442   _P2_1           BIT 0xa1
0000            443   _P2_2           BIT 0xa2
0000            444   _P2_3           BIT 0xa3
0000            445   _P2_4           BIT 0xa4
0000            446   _P2_5           BIT 0xa5
0000            447   _P2_6           BIT 0xa6
0000            448   _P3_0           BIT 0xb0
0000            449   _P3_1           BIT 0xb1
0000            450   _P3_2           BIT 0xb2
0000            451   _P3_3           BIT 0xb3
0000            452   _P3_4           BIT 0xb4
0000            453   _P3_7           BIT 0xb7
0000            454   _CCF0           BIT 0xd8
0000            455   _CCF1           BIT 0xd9
0000            456   _CCF2           BIT 0xda
0000            457   _CCF3           BIT 0xdb
0000            458   _CCF4           BIT 0xdc
0000            459   _CCF5           BIT 0xdd
0000            460   _CR             BIT 0xde
0000            461   _CF             BIT 0xdf
0000            462   _PARITY         BIT 0xd0
0000            463   _F1             BIT 0xd1
0000            464   _OV             BIT 0xd2
0000            465   _RS0            BIT 0xd3
0000            466   _RS1            BIT 0xd4
0000            467   _F0             BIT 0xd5
0000            468   _AC             BIT 0xd6
0000            469   _CY             BIT 0xd7
0000            470   _RI             BIT 0x98
0000            471   _TI             BIT 0x99
0000            472   _RB8            BIT 0x9a
0000            473   _TB8            BIT 0x9b
0000            474   _REN            BIT 0x9c
0000            475   _CE             BIT 0x9d
0000            476   _SMODE          BIT 0x9e
0000            477   _RI1            BIT 0xc8
0000            478   _TI1            BIT 0xc9
0000            479   _RBX1           BIT 0xca
0000            480   _TBX1           BIT 0xcb
0000            481   _REN1           BIT 0xcc
0000            482   _PERR1          BIT 0xcd
0000            483   _OVR1           BIT 0xce
0000            484   _SI             BIT 0xc0
0000            485   _ACK            BIT 0xc1
0000            486   _ARBLOST        BIT 0xc2
0000            487   _ACKRQ          BIT 0xc3
0000            488   _STO            BIT 0xc4
0000            489   _STA            BIT 0xc5
0000            490   _TXMODE         BIT 0xc6
0000            491   _MASTER         BIT 0xc7
0000            492   _SPIEN          BIT 0xf8
0000            493   _TXNF           BIT 0xf9
0000            494   _NSSMD0         BIT 0xfa
0000            495   _NSSMD1         BIT 0xfb
0000            496   _RXOVRN         BIT 0xfc
0000            497   _MODF           BIT 0xfd
0000            498   _WCOL           BIT 0xfe
0000            499   _SPIF           BIT 0xff
0000            500   _IT0            BIT 0x88
0000            501   _IE0            BIT 0x89
0000            502   _IT1            BIT 0x8a
0000            503   _IE1            BIT 0x8b
0000            504   _TR0            BIT 0x8c
0000            505   _TF0            BIT 0x8d
0000            506   _TR1            BIT 0x8e
0000            507   _TF1            BIT 0x8f
0000            508   _T2XCLK0        BIT 0xc8
0000            509   _T2XCLK1        BIT 0xc9
0000            510   _TR2            BIT 0xca
0000            511   _T2SPLIT        BIT 0xcb
0000            512   _TF2CEN         BIT 0xcc
0000            513   _TF2LEN         BIT 0xcd
0000            514   _TF2L           BIT 0xce
0000            515   _TF2H           BIT 0xcf
0000            516   _T4XCLK0        BIT 0x98
0000            517   _T4XCLK1        BIT 0x99
0000            518   _TR4            BIT 0x9a
0000            519   _T4SPLIT        BIT 0x9b
0000            520   _TF4CEN         BIT 0x9c
0000            521   _TF4LEN         BIT 0x9d
0000            522   _TF4L           BIT 0x9e
0000            523   _TF4H           BIT 0x9f
0000            524   _T5XCLK0        BIT 0xc0
0000            525   _T5XCLK1        BIT 0xc1
0000            526   _TR5            BIT 0xc2
0000            527   _T5SPLIT        BIT 0xc3
0000            528   _TF5CEN         BIT 0xc4
0000            529   _TF5LEN         BIT 0xc5
0000            530   _TF5L           BIT 0xc6
0000            531   _TF5H           BIT 0xc7
0000            532   _RIE            BIT 0xd8
0000            533   _RXTO0          BIT 0xd9
0000            534   _RXTO1          BIT 0xda
0000            535   _RFRQ           BIT 0xdb
0000            536   _TIE            BIT 0xdc
0000            537   _TXHOLD         BIT 0xdd
0000            538   _TXNF1          BIT 0xde
0000            539   _TFRQ           BIT 0xdf
0000            540   ;--------------------------------------------------------
0000            541   ; overlayable register banks
0000            542   ;--------------------------------------------------------
0000            543            rbank0 segment data overlay
0000            544            rbank2 segment data overlay
0000            545            rbank3 segment data overlay
0000            546   ;--------------------------------------------------------
0000            547   ; overlayable bit register bank
0000            548   ;--------------------------------------------------------
0000            549            rseg BIT_BANK
0000            550   bits:
0000            551            ds 1
0001            552            b0 equ  bits.0 
0001            553            b1 equ  bits.1 
0001            554            b2 equ  bits.2 
0001            555            b3 equ  bits.3 
0001            556            b4 equ  bits.4 
0001            557            b5 equ  bits.5 
0001            558            b6 equ  bits.6 
0001            559            b7 equ  bits.7 
0001            560   ;--------------------------------------------------------
0001            561   ; internal ram data
0001            562   ;--------------------------------------------------------
0000            563            rseg R_DSEG
0000            564   _Calibrate_LSensors_PARM_2:
0000            565            ds 3
0003            566   _Calibrate_LSensors_PARM_3:
0003            567            ds 3
0006            568   _Calibrate_LSensors_VL_1_93:
0006            569            ds 3
0009            570   _Follow_Tape_PARM_2:
0009            571            ds 3
000C            572   _Follow_Tape_PARM_3:
000C            573            ds 3
000F            574   _Follow_Tape_gnd_VL_1_117:
000F            575            ds 3
0012            576   _Follow_Tape_sloc0_1_0:
0012            577            ds 3
0015            578   _Follow_Tape_sloc1_1_0:
0015            579            ds 3
0018            580   _Follow_Tape_sloc2_1_0:
0018            581            ds 4
001C            582   _Follow_Tape_sloc3_1_0:
001C            583            ds 4
0020            584   _Follow_Tape_sloc4_1_0:
0020            585            ds 4
0024            586   _Find_Tape_PARM_2:
0024            587            ds 2
0026            588   _Find_Tape_gnd_VM_1_142:
0026            589            ds 3
0029            590   _Rotate_PARM_2:
0029            591            ds 3
002C            592   _Rotate_gnd_VL_1_147:
002C            593            ds 3
002F            594   _Rotate_sloc0_1_0:
002F            595            ds 3
0032            596   _Bridge_Rotate_PARM_2:
0032            597            ds 3
0035            598   _Bridge_Rotate_PARM_3:
0035            599            ds 3
0038            600   _Bridge_Rotate_gnd_VL_1_157:
0038            601            ds 3
003B            602   _Bridge_Rotate_sloc0_1_0:
003B            603            ds 3
003E            604   _Bridge_Rotate_sloc1_1_0:
003E            605            ds 3
0041            606   _Bridge_Rotate_sloc2_1_0:
0041            607            ds 4
0045            608   ;--------------------------------------------------------
0045            609   ; overlayable items in internal ram 
0045            610   ;--------------------------------------------------------
0000            611            rseg    R_OSEG
0000            612            rseg    R_OSEG
0000            613   _InitPinADC_PARM_2:
0000            614            ds 1
0001            615            rseg    R_OSEG
0001            616            rseg    R_OSEG
0001            617            rseg    R_OSEG
0001            618   _mot_dir_PARM_2:
0001            619            ds 2
0003            620            rseg    R_OSEG
0003            621            rseg    R_OSEG
0003            622   ;--------------------------------------------------------
0003            623   ; indirectly addressable internal ram data
0003            624   ;--------------------------------------------------------
0000            625            rseg R_ISEG
0000            626   ;--------------------------------------------------------
0000            627   ; absolute internal ram data
0000            628   ;--------------------------------------------------------
0000            629            DSEG
0000            630   ;--------------------------------------------------------
0000            631   ; bit data
0000            632   ;--------------------------------------------------------
0000            633            rseg R_BSEG
0000            634   _autocar:
0000            635            DBIT    1
0001            636   _boost:
0001            637            DBIT    1
0002            638   _open:
0002            639            DBIT    1
0003            640   _close:
0003            641            DBIT    1
0004            642   _x_dir:
0004            643            DBIT    1
0005            644   _y_dir:
0005            645            DBIT    1
0006            646   _dir:
0006            647            DBIT    1
0007            648   _find_bridge_flag:
0007            649            DBIT    1
0008            650   _find_circle1_flag:
0008            651            DBIT    1
0009            652   _find_circle2_flag:
0009            653            DBIT    1
000A            654   _dir_flag:
000A            655            DBIT    1
000B            656   _break_when_dir_found:
000B            657            DBIT    1
000C            658   _circ2:
000C            659            DBIT    1
000D            660   _sonar_state:
000D            661            DBIT    1
000E            662   _counter_above_100:
000E            663            DBIT    1
000F            664   _ML_dir:
000F            665            DBIT    1
0010            666   _MR_dir:
0010            667            DBIT    1
0011            668   _Track_Object_flag_1_134:
0011            669            DBIT    1
0012            670   _Find_Tape_flag_1_143:
0012            671            DBIT    1
0013            672   ;--------------------------------------------------------
0013            673   ; paged external ram data
0013            674   ;--------------------------------------------------------
0000            675            rseg R_PSEG
0000            676   ;--------------------------------------------------------
0000            677   ; external ram data
0000            678   ;--------------------------------------------------------
0000            679            rseg R_XSEG
0000            680   _pwmL:
0000            681            ds 2
0002            682   _pwmR:
0002            683            ds 2
0004            684   _main_short1:
0004            685            ds 2
0006            686   _main_int1:
0006            687            ds 2
0008            688   _main_int2:
0008            689            ds 2
000A            690   _main_int3:
000A            691            ds 2
000C            692   _main_int4:
000C            693            ds 2
000E            694   _Calibrate_LSensors_countL_1_94:
000E            695            ds 2
0010            696   _Calibrate_LSensors_countM_1_94:
0010            697            ds 2
0012            698   _Calibrate_LSensors_countR_1_94:
0012            699            ds 2
0014            700   _Calibrate_LSensors_flags_1_94:
0014            701            ds 2
0016            702   _autonomous_prime_gnd_VL_1_162:
0016            703            ds 2
0018            704   _autonomous_prime_gnd_VR_1_162:
0018            705            ds 2
001A            706   _autonomous_prime_gnd_VM_1_162:
001A            707            ds 2
001C            708   ;--------------------------------------------------------
001C            709   ; absolute external ram data
001C            710   ;--------------------------------------------------------
0000            711            XSEG
0000            712   ;--------------------------------------------------------
0000            713   ; external initialized ram data
0000            714   ;--------------------------------------------------------
0000            715            rseg R_IXSEG
0000            716   _x_absolute:
0000            717            ds 2
0002            718   _y_absolute:
0002            719            ds 2
0004            720   _no_signal_0:
0004            721            ds 2
0006            722   _no_signal_1:
0006            723            ds 2
0008            724   _dir_count:
0008            725            ds 2
000A            726   _timer_count:
000A            727            ds 2
000C            728   _sonar_count:
000C            729            ds 2
000E            730   _sonar_count_2:
000E            731            ds 2
0010            732   _claw_pos:
0010            733            ds 2
0012            734   _pwm_count:
0012            735            ds 1
0000            736            rseg R_HOME
0000            737            rseg R_GSINIT
0000            738            rseg R_CSEG
0000            739   ;--------------------------------------------------------
0000            740   ; Reset entry point and interrupt vectors
0000            741   ;--------------------------------------------------------
0000            742            CSEG at 0x0000
0000 020100     743            ljmp    _crt0
002B            744            CSEG at 0x002b
002B 020100     745            ljmp    _Timer2_ISR
002E            746   ;--------------------------------------------------------
002E            747   ; global & static initialisations
002E            748   ;--------------------------------------------------------
0000            749            rseg R_HOME
0000            750            rseg R_GSINIT
0000            751            rseg R_GSINIT
0000            752   ;--------------------------------------------------------
0000            753   ; data variables initialization
0000            754   ;--------------------------------------------------------
0000            755            rseg R_DINIT
0000            756   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:44: volatile bit find_bridge_flag = 0;
0000 C238       757            clr     _find_bridge_flag
0002            758   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:45: volatile bit find_circle1_flag = 0;
0002 C2E8       759            clr     _find_circle1_flag
0004            760   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:46: volatile bit find_circle2_flag = 0;
0004 C298       761            clr     _find_circle2_flag
0006            762   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:47: volatile bit dir_flag=0;            //set high to indicate that the dir_count has been incremented, wait for flag low
0006 C248       763            clr     _dir_flag
0008            764   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:48: volatile bit break_when_dir_found = 0;
0008 C208       765            clr     _break_when_dir_found
000A            766   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:49: volatile bit circ2 = 0;
000A C2B8       767            clr     _circ2
000C            768   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:50: volatile bit sonar_state = 0;
000C C278       769            clr     _sonar_state
000E            770   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:54: volatile bit counter_above_100 = 0;
000E C238       771            clr     _counter_above_100
0010            772            ; The linker places a 'ret' at the end of segment R_DINIT.
0010            773   ;--------------------------------------------------------
0010            774   ; code
0010            775   ;--------------------------------------------------------
0000            776            rseg R_CSEG
0000            777   ;------------------------------------------------------------
0000            778   ;Allocation info for local variables in function 'InitADC'
0000            779   ;------------------------------------------------------------
0000            780   ;------------------------------------------------------------
0000            781   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:2: void InitADC (void)
0000            782   ;        -----------------------------------------
0000            783   ;         function InitADC
0000            784   ;        -----------------------------------------
0000            785   _InitADC:
0000            786            using   0
0000            787   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:4: SFRPAGE = 0x00;
0000 75A700     788            mov     _SFRPAGE,#0x00
0003            789   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:5: ADC0CN1 = 0b_10_000_000; //14-bit,  Right justified no shifting applied, perform and Accumulate 1 conversion.
0003 75B280     790            mov     _ADC0CN1,#0x80
0006            791   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:6: ADC0CF0 = 0b_11111_0_00; // SYSCLK/32
0006 75BCF8     792            mov     _ADC0CF0,#0xF8
0009            793   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:7: ADC0CF1 = 0b_0_0_011110; // Same as default for now
0009 75B91E     794            mov     _ADC0CF1,#0x1E
000C            795   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:8: ADC0CN0 = 0b_0_0_0_0_0_00_0; // Same as default for now
000C 75E800     796            mov     _ADC0CN0,#0x00
000F            797   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:9: ADC0CF2 = 0b_0_01_11111 ; // GND pin, Vref=VDD
000F 75DF3F     798            mov     _ADC0CF2,#0x3F
0012            799   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:10: ADC0CN2 = 0b_0_000_0000;  // Same as default for now. ADC0 conversion initiated on write of 1 to ADBUSY.
0012 75B300     800            mov     _ADC0CN2,#0x00
0015            801   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:11: ADEN=1; // Enable ADC
0015 D2EF       802            setb    _ADEN
0017 22         803            ret
0018            804   ;------------------------------------------------------------
0018            805   ;Allocation info for local variables in function 'Timer3us'
0018            806   ;------------------------------------------------------------
0018            807   ;us                        Allocated to registers r2 
0018            808   ;i                         Allocated to registers r3 
0018            809   ;------------------------------------------------------------
0018            810   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:15: void Timer3us(unsigned char us)
0018            811   ;        -----------------------------------------
0018            812   ;         function Timer3us
0018            813   ;        -----------------------------------------
0018            814   _Timer3us:
0018 AA82       815            mov     r2,dpl
001A            816   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:20: CKCON0|=0b_0100_0000;
001A 438E40     817            orl     _CKCON0,#0x40
001D            818   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:22: TMR3RL = (-(SYSCLK)/1000000L); // Set Timer3 to overflow in 1us.
001D 7592B8     819            mov     _TMR3RL,#0xB8
0020 7593FF     820            mov     (_TMR3RL >> 8),#0xFF
0023            821   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:23: TMR3 = TMR3RL;                 // Initialize Timer3 for first overflow
0023 859294     822            mov     _TMR3,_TMR3RL
0026 859395     823            mov     (_TMR3 >> 8),(_TMR3RL >> 8)
0029            824   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:25: TMR3CN0 = 0x04;                 // Sart Timer3 and clear overflow flag
0029 759104     825            mov     _TMR3CN0,#0x04
002C            826   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:26: for (i = 0; i < us; i++)       // Count <us> overflows
002C 7B00       827            mov     r3,#0x00
002E            828   L003004?:
002E C3         829            clr     c
002F EB         830            mov     a,r3
0030 9A         831            subb    a,r2
0031 5001       832            jnc     L003007?
0033            833   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:28: while (!(TMR3CN0 & 0x80));  // Wait for overflow
0033            834   L003001?:
0033 E591       835            mov     a,_TMR3CN0
0035 30E758     836            jnb     acc.7,L003001?
0038            837   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:29: TMR3CN0 &= ~(0x80);         // Clear overflow indicator
0038 53917F     838            anl     _TMR3CN0,#0x7F
003B            839   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:26: for (i = 0; i < us; i++)       // Count <us> overflows
003B 0B         840            inc     r3
003C 8001       841            sjmp    L003004?
003E            842   L003007?:
003E            843   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:31: TMR3CN0 = 0 ;                   // Stop Timer3 and clear overflow flag
003E 759100     844            mov     _TMR3CN0,#0x00
0041 22         845            ret
0042            846   ;------------------------------------------------------------
0042            847   ;Allocation info for local variables in function 'waitms'
0042            848   ;------------------------------------------------------------
0042            849   ;ms                        Allocated to registers r2 r3 
0042            850   ;j                         Allocated to registers r4 r5 
0042            851   ;k                         Allocated to registers r6 
0042            852   ;------------------------------------------------------------
0042            853   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:34: void waitms (unsigned int ms)
0042            854   ;        -----------------------------------------
0042            855   ;         function waitms
0042            856   ;        -----------------------------------------
0042            857   _waitms:
0042 AA82       858            mov     r2,dpl
0044 AB83       859            mov     r3,dph
0046            860   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:38: for(j=0; j<ms; j++)
0046 7C00       861            mov     r4,#0x00
0048 7D00       862            mov     r5,#0x00
004A            863   L004005?:
004A C3         864            clr     c
004B EC         865            mov     a,r4
004C 9A         866            subb    a,r2
004D ED         867            mov     a,r5
004E 9B         868            subb    a,r3
004F 5001       869            jnc     L004009?
0051            870   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:39: for (k=0; k<4; k++) Timer3us(250);
0051 7E00       871            mov     r6,#0x00
0053            872   L004001?:
0053 BE04D8     873            cjne    r6,#0x04,L004018?
0056            874   L004018?:
0056 5001       875            jnc     L004007?
0058 7582FA     876            mov     dpl,#0xFA
005B C002       877            push    ar2
005D C003       878            push    ar3
005F C004       879            push    ar4
0061 C005       880            push    ar5
0063 C006       881            push    ar6
0065 120100     882            lcall   _Timer3us
0068 D006       883            pop     ar6
006A D005       884            pop     ar5
006C D004       885            pop     ar4
006E D003       886            pop     ar3
0070 D002       887            pop     ar2
0072 0E         888            inc     r6
0073 8001       889            sjmp    L004001?
0075            890   L004007?:
0075            891   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:38: for(j=0; j<ms; j++)
0075 0C         892            inc     r4
0076 BC0018     893            cjne    r4,#0x00,L004005?
0079 0D         894            inc     r5
007A 8001       895            sjmp    L004005?
007C            896   L004009?:
007C 22         897            ret
007D            898   ;------------------------------------------------------------
007D            899   ;Allocation info for local variables in function 'InitPinADC'
007D            900   ;------------------------------------------------------------
007D            901   ;pinno                     Allocated with name '_InitPinADC_PARM_2'
007D            902   ;portno                    Allocated to registers r2 
007D            903   ;mask                      Allocated to registers r3 
007D            904   ;------------------------------------------------------------
007D            905   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:44: void InitPinADC (unsigned char portno, unsigned char pinno)
007D            906   ;        -----------------------------------------
007D            907   ;         function InitPinADC
007D            908   ;        -----------------------------------------
007D            909   _InitPinADC:
007D AA82       910            mov     r2,dpl
007F            911   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:48: mask=1<<pinno;
007F 8590F0     912            mov     b,_InitPinADC_PARM_2
0082 05F0       913            inc     b
0084 7401       914            mov     a,#0x01
0086 8001       915            sjmp    L005013?
0088            916   L005011?:
0088 25E0       917            add     a,acc
008A            918   L005013?:
008A D5F0D8     919            djnz    b,L005011?
008D FB         920            mov     r3,a
008E            921   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:50: SFRPAGE = 0x20;
008E 75A720     922            mov     _SFRPAGE,#0x20
0091            923   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:51: switch (portno)
0091 BA0018     924            cjne    r2,#0x00,L005014?
0094 8001       925            sjmp    L005001?
0096            926   L005014?:
0096 BA0198     927            cjne    r2,#0x01,L005015?
0099 8001       928            sjmp    L005002?
009B            929   L005015?:
009B            930   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:53: case 0:
009B BA0218     931            cjne    r2,#0x02,L005005?
009E 8001       932            sjmp    L005003?
00A0            933   L005001?:
00A0            934   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:54: P0MDIN &= (~mask); // Set pin as analog input
00A0 EB         935            mov     a,r3
00A1 F4         936            cpl     a
00A2 FA         937            mov     r2,a
00A3 52F1       938            anl     _P0MDIN,a
00A5            939   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:55: P0SKIP |= mask; // Skip Crossbar decoding for this pin
00A5 EB         940            mov     a,r3
00A6 42D4       941            orl     _P0SKIP,a
00A8            942   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:56: break;
00A8            943   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:57: case 1:
00A8 8001       944            sjmp    L005005?
00AA            945   L005002?:
00AA            946   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:58: P1MDIN &= (~mask); // Set pin as analog input
00AA EB         947            mov     a,r3
00AB F4         948            cpl     a
00AC FA         949            mov     r2,a
00AD 52F2       950            anl     _P1MDIN,a
00AF            951   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:59: P1SKIP |= mask; // Skip Crossbar decoding for this pin
00AF EB         952            mov     a,r3
00B0 42D5       953            orl     _P1SKIP,a
00B2            954   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:60: break;
00B2            955   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:61: case 2:
00B2 8001       956            sjmp    L005005?
00B4            957   L005003?:
00B4            958   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:62: P2MDIN &= (~mask); // Set pin as analog input
00B4 EB         959            mov     a,r3
00B5 F4         960            cpl     a
00B6 FA         961            mov     r2,a
00B7 52F3       962            anl     _P2MDIN,a
00B9            963   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:63: P2SKIP |= mask; // Skip Crossbar decoding for this pin
00B9 EB         964            mov     a,r3
00BA 42CC       965            orl     _P2SKIP,a
00BC            966   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:67: }
00BC            967   L005005?:
00BC            968   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:68: SFRPAGE = 0x00;
00BC 75A700     969            mov     _SFRPAGE,#0x00
00BF 22         970            ret
00C0            971   ;------------------------------------------------------------
00C0            972   ;Allocation info for local variables in function 'UART1_RI'
00C0            973   ;------------------------------------------------------------
00C0            974   ;UART1_char2               Allocated to registers r2 
00C0            975   ;------------------------------------------------------------
00C0            976   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:71: void UART1_RI(void) using 3
00C0            977   ;        -----------------------------------------
00C0            978   ;         function UART1_RI
00C0            979   ;        -----------------------------------------
00C0            980   _UART1_RI:
00C0            981            using   3
00C0            982   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:74: P3_1 = !P3_1;
00C0 B2B1       983            cpl     _P3_1
00C2            984   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:75: SFRPAGE = 0x20;
00C2 75A720     985            mov     _SFRPAGE,#0x20
00C5            986   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:79: RI1 = 0;
00C5 C2C8       987            clr     _RI1
00C7            988   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:80: SCON1&=0b_0011_1111;    // Clear Overrun and HW Parity error flags
00C7 53C83F     989            anl     _SCON1,#0x3F
00CA            990   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:81: UART1_char2 = SBUF1;
00CA E592       991            mov     a,_SBUF1
00CC            992   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:92: UART1_char2 = SBUF1;
00CC            993   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:93: if(UART1_char2 % 2 == 0)    //Byte 0
00CC E592       994            mov     a,_SBUF1
00CE FA         995            mov     r2,a
00CF 20E098     996            jb      acc.0,L006002?
00D2            997   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:95: no_signal_0 = 0;     //clear no signal counter
00D2 904B28     998            mov     dptr,#_no_signal_0
00D5 E4         999            clr     a
00D6 F0        1000            movx    @dptr,a
00D7 A3        1001            inc     dptr
00D8 F0        1002            movx    @dptr,a
00D9           1003   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:96: UART1_char2 >>= 1;
00D9 EA        1004            mov     a,r2
00DA C3        1005            clr     c
00DB 13        1006            rrc     a
00DC           1007   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:99: boost = UART1_char2 % 2;
00DC FA        1008            mov     r2,a
00DD 13        1009            rrc     a
00DE 92B8      1010            mov     _boost,c
00E0           1011   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:100: UART1_char2 >>= 1;
00E0 EA        1012            mov     a,r2
00E1 C3        1013            clr     c
00E2 13        1014            rrc     a
00E3           1015   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:101: autocar = UART1_char2 % 2;
00E3 FA        1016            mov     r2,a
00E4 13        1017            rrc     a
00E5 92F8      1018            mov     _autocar,c
00E7           1019   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:102: UART1_char2 >>= 1;
00E7 EA        1020            mov     a,r2
00E8 C3        1021            clr     c
00E9 13        1022            rrc     a
00EA FA        1023            mov     r2,a
00EB           1024   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:105: y_absolute = UART1_char2 % 8;
00EB 7407      1025            mov     a,#0x07
00ED 5A        1026            anl     a,r2
00EE FB        1027            mov     r3,a
00EF 904B68    1028            mov     dptr,#_y_absolute
00F2 F0        1029            movx    @dptr,a
00F3 A3        1030            inc     dptr
00F4 E4        1031            clr     a
00F5 F0        1032            movx    @dptr,a
00F6           1033   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:106: UART1_char2 >>= 3;
00F6 EA        1034            mov     a,r2
00F7 C4        1035            swap    a
00F8 23        1036            rl      a
00F9 541F      1037            anl     a,#0x1f
00FB           1038   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:107: y_dir = UART1_char2 % 2;
00FB FA        1039            mov     r2,a
00FC 13        1040            rrc     a
00FD 92B8      1041            mov     _y_dir,c
00FF 8001      1042            sjmp    L006003?
0101           1043   L006002?:
0101           1044   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:109: no_signal_1 = 0;    //clear no signal counter
0101 904AE8    1045            mov     dptr,#_no_signal_1
0104 E4        1046            clr     a
0105 F0        1047            movx    @dptr,a
0106 A3        1048            inc     dptr
0107 F0        1049            movx    @dptr,a
0108           1050   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:110: UART1_char2 >>= 1;
0108 EA        1051            mov     a,r2
0109 C3        1052            clr     c
010A 13        1053            rrc     a
010B           1054   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:113: close = UART1_char2 % 2;
010B FA        1055            mov     r2,a
010C 13        1056            rrc     a
010D 9238      1057            mov     _close,c
010F           1058   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:114: UART1_char2 >>= 1;
010F EA        1059            mov     a,r2
0110 C3        1060            clr     c
0111 13        1061            rrc     a
0112           1062   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:115: open = UART1_char2 % 2;
0112 FA        1063            mov     r2,a
0113 13        1064            rrc     a
0114 9278      1065            mov     _open,c
0116           1066   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:116: UART1_char2 >>= 1;
0116 EA        1067            mov     a,r2
0117 C3        1068            clr     c
0118 13        1069            rrc     a
0119 FA        1070            mov     r2,a
011A           1071   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:119: x_absolute = UART1_char2 % 8;
011A 7407      1072            mov     a,#0x07
011C 5A        1073            anl     a,r2
011D FB        1074            mov     r3,a
011E 904BA8    1075            mov     dptr,#_x_absolute
0121 F0        1076            movx    @dptr,a
0122 A3        1077            inc     dptr
0123 E4        1078            clr     a
0124 F0        1079            movx    @dptr,a
0125           1080   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:120: UART1_char2 >>= 3;
0125 EA        1081            mov     a,r2
0126 C4        1082            swap    a
0127 23        1083            rl      a
0128 541F      1084            anl     a,#0x1f
012A           1085   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:121: x_dir = UART1_char2 % 2;
012A FA        1086            mov     r2,a
012B 13        1087            rrc     a
012C 92F8      1088            mov     _x_dir,c
012E           1089   L006003?:
012E           1090   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:125: SFRPAGE = 0x00;
012E 75A700    1091            mov     _SFRPAGE,#0x00
0131           1092   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:126: return;
0131 22        1093            ret
0132           1094   ;------------------------------------------------------------
0132           1095   ;Allocation info for local variables in function 'ADC_at_Pin'
0132           1096   ;------------------------------------------------------------
0132           1097   ;pin                       Allocated to registers 
0132           1098   ;------------------------------------------------------------
0132           1099   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:129: unsigned int ADC_at_Pin(unsigned char pin)
0132           1100   ;        -----------------------------------------
0132           1101   ;         function ADC_at_Pin
0132           1102   ;        -----------------------------------------
0132           1103   _ADC_at_Pin:
0132           1104            using   0
0132 8582BB    1105            mov     _ADC0MX,dpl
0135           1106   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:132: ADBUSY=1;       // Dummy conversion first to select new pin
0135 D2EC      1107            setb    _ADBUSY
0137           1108   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:133: while (ADBUSY); // Wait for dummy conversion to finish
0137           1109   L007001?:
0137 20EC18    1110            jb      _ADBUSY,L007001?
013A           1111   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:134: ADBUSY = 1;     // Convert voltage at the pin
013A D2EC      1112            setb    _ADBUSY
013C           1113   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:135: while (ADBUSY); // Wait for conversion to complete
013C           1114   L007004?:
013C 20EC58    1115            jb      _ADBUSY,L007004?
013F           1116   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:136: return (ADC0);
013F 85BD82    1117            mov     dpl,_ADC0
0142 85BE83    1118            mov     dph,(_ADC0 >> 8)
0145 22        1119            ret
0146           1120   ;------------------------------------------------------------
0146           1121   ;Allocation info for local variables in function 'Volts_at_Pin'
0146           1122   ;------------------------------------------------------------
0146           1123   ;pin                       Allocated to registers r2 
0146           1124   ;------------------------------------------------------------
0146           1125   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:139: float Volts_at_Pin(unsigned char pin)
0146           1126   ;        -----------------------------------------
0146           1127   ;         function Volts_at_Pin
0146           1128   ;        -----------------------------------------
0146           1129   _Volts_at_Pin:
0146           1130   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:141: return ((ADC_at_Pin(pin)*VDD)/0b_0011_1111_1111_1111);
0146 120100    1131            lcall   _ADC_at_Pin
0149 120100    1132            lcall   ___uint2fs
014C AA82      1133            mov     r2,dpl
014E AB83      1134            mov     r3,dph
0150 ACF0      1135            mov     r4,b
0152 FD        1136            mov     r5,a
0153 C002      1137            push    ar2
0155 C003      1138            push    ar3
0157 C004      1139            push    ar4
0159 C005      1140            push    ar5
015B 906C8B    1141            mov     dptr,#0x6C8B
015E 75F053    1142            mov     b,#0x53
0161 7440      1143            mov     a,#0x40
0163 120100    1144            lcall   ___fsmul
0166 AA82      1145            mov     r2,dpl
0168 AB83      1146            mov     r3,dph
016A ACF0      1147            mov     r4,b
016C FD        1148            mov     r5,a
016D E581      1149            mov     a,sp
016F 24FC      1150            add     a,#0xfc
0171 F581      1151            mov     sp,a
0173 E4        1152            clr     a
0174 C0E0      1153            push    acc
0176 74FC      1154            mov     a,#0xFC
0178 C0E0      1155            push    acc
017A 747F      1156            mov     a,#0x7F
017C C0E0      1157            push    acc
017E 7446      1158            mov     a,#0x46
0180 C0E0      1159            push    acc
0182 8A82      1160            mov     dpl,r2
0184 8B83      1161            mov     dph,r3
0186 8CF0      1162            mov     b,r4
0188 ED        1163            mov     a,r5
0189 120100    1164            lcall   ___fsdiv
018C AA82      1165            mov     r2,dpl
018E AB83      1166            mov     r3,dph
0190 ACF0      1167            mov     r4,b
0192 FD        1168            mov     r5,a
0193 E581      1169            mov     a,sp
0195 24FC      1170            add     a,#0xfc
0197 F581      1171            mov     sp,a
0199 8A82      1172            mov     dpl,r2
019B 8B83      1173            mov     dph,r3
019D 8CF0      1174            mov     b,r4
019F ED        1175            mov     a,r5
01A0 22        1176            ret
01A1           1177   ;------------------------------------------------------------
01A1           1178   ;Allocation info for local variables in function 'mot_dir'
01A1           1179   ;------------------------------------------------------------
01A1           1180   ;MR                        Allocated with name '_mot_dir_PARM_2'
01A1           1181   ;ML                        Allocated to registers r2 r3 
01A1           1182   ;------------------------------------------------------------
01A1           1183   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:144: void mot_dir(int ML, int MR)
01A1           1184   ;        -----------------------------------------
01A1           1185   ;         function mot_dir
01A1           1186   ;        -----------------------------------------
01A1           1187   _mot_dir:
01A1 AA82      1188            mov     r2,dpl
01A3 AB83      1189            mov     r3,dph
01A5           1190   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:146: ML_dir = ML;
01A5 EA        1191            mov     a,r2
01A6 4B        1192            orl     a,r3
01A7 24FF      1193            add     a,#0xff
01A9 92E8      1194            mov     _ML_dir,c
01AB           1195   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:147: MR_dir = MR;
01AB E540      1196            mov     a,_mot_dir_PARM_2
01AD 4541      1197            orl     a,(_mot_dir_PARM_2 + 1)
01AF 24FF      1198            add     a,#0xff
01B1 92A8      1199            mov     _MR_dir,c
01B3 22        1200            ret
01B4           1201   ;------------------------------------------------------------
01B4           1202   ;Allocation info for local variables in function 'stop'
01B4           1203   ;------------------------------------------------------------
01B4           1204   ;------------------------------------------------------------
01B4           1205   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:150: void stop(void){
01B4           1206   ;        -----------------------------------------
01B4           1207   ;         function stop
01B4           1208   ;        -----------------------------------------
01B4           1209   _stop:
01B4           1210   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:151: pwmL=0;
01B4 904D68    1211            mov     dptr,#_pwmL
01B7 E4        1212            clr     a
01B8 F0        1213            movx    @dptr,a
01B9 A3        1214            inc     dptr
01BA F0        1215            movx    @dptr,a
01BB           1216   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:152: pwmR=0;         
01BB 904D28    1217            mov     dptr,#_pwmR
01BE E4        1218            clr     a
01BF F0        1219            movx    @dptr,a
01C0 A3        1220            inc     dptr
01C1 F0        1221            movx    @dptr,a
01C2           1222   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:153: waitms(100);
01C2 900064    1223            mov     dptr,#0x0064
01C5 020100    1224            ljmp    _waitms
01C8           1225   ;------------------------------------------------------------
01C8           1226   ;Allocation info for local variables in function 'spin_left'
01C8           1227   ;------------------------------------------------------------
01C8           1228   ;offset                    Allocated to registers r2 r3 
01C8           1229   ;------------------------------------------------------------
01C8           1230   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:156: void spin_left(int offset)
01C8           1231   ;        -----------------------------------------
01C8           1232   ;         function spin_left
01C8           1233   ;        -----------------------------------------
01C8           1234   _spin_left:
01C8 AA82      1235            mov     r2,dpl
01CA AB83      1236            mov     r3,dph
01CC           1237   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:158: mot_dir(1,0);
01CC E4        1238            clr     a
01CD F540      1239            mov     _mot_dir_PARM_2,a
01CF F541      1240            mov     (_mot_dir_PARM_2 + 1),a
01D1 900001    1241            mov     dptr,#0x0001
01D4 C002      1242            push    ar2
01D6 C003      1243            push    ar3
01D8 120100    1244            lcall   _mot_dir
01DB D003      1245            pop     ar3
01DD D002      1246            pop     ar2
01DF           1247   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:159: pwmR = BOOSTPWM+offset;
01DF 904D28    1248            mov     dptr,#_pwmR
01E2 7428      1249            mov     a,#0x28
01E4 2A        1250            add     a,r2
01E5 F0        1251            movx    @dptr,a
01E6 E4        1252            clr     a
01E7 3B        1253            addc    a,r3
01E8 A3        1254            inc     dptr
01E9 F0        1255            movx    @dptr,a
01EA           1256   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:160: pwmL = BASEPWM+offset;
01EA 904D68    1257            mov     dptr,#_pwmL
01ED 7419      1258            mov     a,#0x19
01EF 2A        1259            add     a,r2
01F0 F0        1260            movx    @dptr,a
01F1 E4        1261            clr     a
01F2 3B        1262            addc    a,r3
01F3 A3        1263            inc     dptr
01F4 F0        1264            movx    @dptr,a
01F5 22        1265            ret
01F6           1266   ;------------------------------------------------------------
01F6           1267   ;Allocation info for local variables in function 'spin_right'
01F6           1268   ;------------------------------------------------------------
01F6           1269   ;offset                    Allocated to registers r2 r3 
01F6           1270   ;------------------------------------------------------------
01F6           1271   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:164: void spin_right(int offset)
01F6           1272   ;        -----------------------------------------
01F6           1273   ;         function spin_right
01F6           1274   ;        -----------------------------------------
01F6           1275   _spin_right:
01F6 AA82      1276            mov     r2,dpl
01F8 AB83      1277            mov     r3,dph
01FA           1278   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:166: mot_dir(0,1);
01FA 754001    1279            mov     _mot_dir_PARM_2,#0x01
01FD E4        1280            clr     a
01FE F541      1281            mov     (_mot_dir_PARM_2 + 1),a
0200 900000    1282            mov     dptr,#0x0000
0203 C002      1283            push    ar2
0205 C003      1284            push    ar3
0207 120100    1285            lcall   _mot_dir
020A D003      1286            pop     ar3
020C D002      1287            pop     ar2
020E           1288   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:167: pwmL = BOOSTPWM+offset;
020E 904D68    1289            mov     dptr,#_pwmL
0211 7428      1290            mov     a,#0x28
0213 2A        1291            add     a,r2
0214 F0        1292            movx    @dptr,a
0215 E4        1293            clr     a
0216 3B        1294            addc    a,r3
0217 A3        1295            inc     dptr
0218 F0        1296            movx    @dptr,a
0219           1297   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:168: pwmR = BASEPWM+offset;  
0219 904D28    1298            mov     dptr,#_pwmR
021C 7419      1299            mov     a,#0x19
021E 2A        1300            add     a,r2
021F F0        1301            movx    @dptr,a
0220 E4        1302            clr     a
0221 3B        1303            addc    a,r3
0222 A3        1304            inc     dptr
0223 F0        1305            movx    @dptr,a
0224 22        1306            ret
0225           1307   ;------------------------------------------------------------
0225           1308   ;Allocation info for local variables in function 'debug'
0225           1309   ;------------------------------------------------------------
0225           1310   ;------------------------------------------------------------
0225           1311   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:171: void debug( void )
0225           1312   ;        -----------------------------------------
0225           1313   ;         function debug
0225           1314   ;        -----------------------------------------
0225           1315   _debug:
0225           1316   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:174: stop();
0225 120100    1317            lcall   _stop
0228           1318   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:175: while(1);
0228           1319   L013002?:
0228 8001      1320            sjmp    L013002?
022A           1321   ;------------------------------------------------------------
022A           1322   ;Allocation info for local variables in function 'claw_control'
022A           1323   ;------------------------------------------------------------
022A           1324   ;------------------------------------------------------------
022A           1325   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:179: void claw_control(void)
022A           1326   ;        -----------------------------------------
022A           1327   ;         function claw_control
022A           1328   ;        -----------------------------------------
022A           1329   _claw_control:
022A           1330   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:181: if (pwm_count >= 22) {
022A 901840    1331            mov     dptr,#_pwm_count
022D E0        1332            movx    a,@dptr
022E FA        1333            mov     r2,a
022F BA16D8    1334            cjne    r2,#0x16,L014007?
0232           1335   L014007?:
0232 4001      1336            jc      L014002?
0234           1337   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:182: CLAW_L = 0;
0234 C297      1338            clr     _P1_7
0236           1339   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:183: CLAW_R = 0;
0236 C2A0      1340            clr     _P2_0
0238 22        1341            ret
0239           1342   L014002?:
0239           1343   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:185: CLAW_L = (pwm_count < claw_pos) ? 1 : 0;
0239 901840    1344            mov     dptr,#_pwm_count
023C E0        1345            movx    a,@dptr
023D FA        1346            mov     r2,a
023E 901880    1347            mov     dptr,#_claw_pos
0241 E0        1348            movx    a,@dptr
0242 FB        1349            mov     r3,a
0243 A3        1350            inc     dptr
0244 E0        1351            movx    a,@dptr
0245 FC        1352            mov     r4,a
0246 7D00      1353            mov     r5,#0x00
0248 C3        1354            clr     c
0249 EA        1355            mov     a,r2
024A 9B        1356            subb    a,r3
024B ED        1357            mov     a,r5
024C 9C        1358            subb    a,r4
024D 9297      1359            mov     _P1_7,c
024F           1360   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:186: CLAW_R = (pwm_count < 27 - claw_pos) ? 1 : 0;
024F 901880    1361            mov     dptr,#_claw_pos
0252 E0        1362            movx    a,@dptr
0253 FA        1363            mov     r2,a
0254 A3        1364            inc     dptr
0255 E0        1365            movx    a,@dptr
0256 FB        1366            mov     r3,a
0257 741B      1367            mov     a,#0x1B
0259 C3        1368            clr     c
025A 9A        1369            subb    a,r2
025B FA        1370            mov     r2,a
025C E4        1371            clr     a
025D 9B        1372            subb    a,r3
025E FB        1373            mov     r3,a
025F 901840    1374            mov     dptr,#_pwm_count
0262 E0        1375            movx    a,@dptr
0263 FC        1376            mov     r4,a
0264 7D00      1377            mov     r5,#0x00
0266 C3        1378            clr     c
0267 EC        1379            mov     a,r4
0268 9A        1380            subb    a,r2
0269 ED        1381            mov     a,r5
026A 9B        1382            subb    a,r3
026B 92A0      1383            mov     _P2_0,c
026D 22        1384            ret
026E           1385   ;------------------------------------------------------------
026E           1386   ;Allocation info for local variables in function 'sonar_op'
026E           1387   ;------------------------------------------------------------
026E           1388   ;------------------------------------------------------------
026E           1389   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:191: void sonar_op(void)
026E           1390   ;        -----------------------------------------
026E           1391   ;         function sonar_op
026E           1392   ;        -----------------------------------------
026E           1393   _sonar_op:
026E           1394   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:194: Trig = pwm_count >= 50?0:1;
026E 901840    1395            mov     dptr,#_pwm_count
0271 E0        1396            movx    a,@dptr
0272 FA        1397            mov     r2,a
0273 BA3258    1398            cjne    r2,#0x32,L015014?
0276           1399   L015014?:
0276 9290      1400            mov     _P1_0,c
0278           1401   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:197: if (!sonar_state) {
0278 207898    1402            jb      _sonar_state,L015007?
027B           1403   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:198: if (P0_7) {
027B 3087D8    1404            jnb     _P0_7,L015009?
027E           1405   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:199: sonar_state = 1;
027E D278      1406            setb    _sonar_state
0280           1407   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:200: sonar_count = 0;
0280 901900    1408            mov     dptr,#_sonar_count
0283 E4        1409            clr     a
0284 F0        1410            movx    @dptr,a
0285 A3        1411            inc     dptr
0286 F0        1412            movx    @dptr,a
0287 22        1413            ret
0288           1414   L015007?:
0288           1415   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:202: } else if (P0_7) {
0288 308718    1416            jnb     _P0_7,L015004?
028B           1417   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:203: sonar_count++;
028B 901900    1418            mov     dptr,#_sonar_count
028E E0        1419            movx    a,@dptr
028F 2401      1420            add     a,#0x01
0291 F0        1421            movx    @dptr,a
0292 A3        1422            inc     dptr
0293 E0        1423            movx    a,@dptr
0294 3400      1424            addc    a,#0x00
0296 F0        1425            movx    @dptr,a
0297 22        1426            ret
0298           1427   L015004?:
0298           1428   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:206: sonar_count_2 = sonar_count;
0298 901900    1429            mov     dptr,#_sonar_count
029B E0        1430            movx    a,@dptr
029C FA        1431            mov     r2,a
029D A3        1432            inc     dptr
029E E0        1433            movx    a,@dptr
029F FB        1434            mov     r3,a
02A0 9018C0    1435            mov     dptr,#_sonar_count_2
02A3 EA        1436            mov     a,r2
02A4 F0        1437            movx    @dptr,a
02A5 A3        1438            inc     dptr
02A6 EB        1439            mov     a,r3
02A7 F0        1440            movx    @dptr,a
02A8           1441   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:208: sonar_state = 0;
02A8 C278      1442            clr     _sonar_state
02AA           1443   L015009?:
02AA 22        1444            ret
02AB           1445   ;------------------------------------------------------------
02AB           1446   ;Allocation info for local variables in function 'Timer2_ISR'
02AB           1447   ;------------------------------------------------------------
02AB           1448   ;------------------------------------------------------------
02AB           1449   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:212: void Timer2_ISR (void) interrupt 5 using 2
02AB           1450   ;        -----------------------------------------
02AB           1451   ;         function Timer2_ISR
02AB           1452   ;        -----------------------------------------
02AB           1453   _Timer2_ISR:
02AB           1454            using   2
02AB C028      1455            push    bits
02AD C0E0      1456            push    acc
02AF C0F0      1457            push    b
02B1 C082      1458            push    dpl
02B3 C083      1459            push    dph
02B5 C002      1460            push    (0+2)
02B7 C003      1461            push    (0+3)
02B9 C004      1462            push    (0+4)
02BB C005      1463            push    (0+5)
02BD C006      1464            push    (0+6)
02BF C007      1465            push    (0+7)
02C1 C000      1466            push    (0+0)
02C3 C001      1467            push    (0+1)
02C5 C0D0      1468            push    psw
02C7 75D010    1469            mov     psw,#0x10
02CA           1470   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:214: TF2H = 0; // Clear Timer2 interrupt flag
02CA C2CF      1471            clr     _TF2H
02CC           1472   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:216: pwm_count++;
02CC 901840    1473            mov     dptr,#_pwm_count
02CF E0        1474            movx    a,@dptr
02D0 2401      1475            add     a,#0x01
02D2 F0        1476            movx    @dptr,a
02D3           1477   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:217: if (pwm_count >= 100) {
02D3 901840    1478            mov     dptr,#_pwm_count
02D6 E0        1479            movx    a,@dptr
02D7 FA        1480            mov     r2,a
02D8 BA6498    1481            cjne    r2,#0x64,L016020?
02DB           1482   L016020?:
02DB 4001      1483            jc      L016004?
02DD           1484   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:218: pwm_count=0;
02DD 901840    1485            mov     dptr,#_pwm_count
02E0 E4        1486            clr     a
02E1 F0        1487            movx    @dptr,a
02E2           1488   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:219: counter_above_100 = !counter_above_100;
02E2 B238      1489            cpl     _counter_above_100
02E4           1490   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:220: timer_count++;
02E4 901940    1491            mov     dptr,#_timer_count
02E7 E0        1492            movx    a,@dptr
02E8 2401      1493            add     a,#0x01
02EA F0        1494            movx    @dptr,a
02EB A3        1495            inc     dptr
02EC E0        1496            movx    a,@dptr
02ED 3400      1497            addc    a,#0x00
02EF F0        1498            movx    @dptr,a
02F0           1499   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:221: if (timer_count >= 50) {        //every 0.5 seconds enter
02F0 901940    1500            mov     dptr,#_timer_count
02F3 E0        1501            movx    a,@dptr
02F4 FA        1502            mov     r2,a
02F5 A3        1503            inc     dptr
02F6 E0        1504            movx    a,@dptr
02F7 FB        1505            mov     r3,a
02F8 C3        1506            clr     c
02F9 EA        1507            mov     a,r2
02FA 9432      1508            subb    a,#0x32
02FC EB        1509            mov     a,r3
02FD 9400      1510            subb    a,#0x00
02FF 4001      1511            jc      L016004?
0301           1512   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:222: timer_count =  0;
0301 901940    1513            mov     dptr,#_timer_count
0304 E4        1514            clr     a
0305 F0        1515            movx    @dptr,a
0306 A3        1516            inc     dptr
0307 F0        1517            movx    @dptr,a
0308           1518   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:223: dir_flag = 0;
0308 C248      1519            clr     _dir_flag
030A           1520   L016004?:
030A           1521   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:228: if (!ML_dir) {
030A 20E818    1522            jb      _ML_dir,L016006?
030D           1523   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:229: OUTLF = 0;
030D C2A1      1524            clr     _P2_1
030F           1525   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:230: OUTLB =pwm_count>=pwmL?0:1;
030F 901840    1526            mov     dptr,#_pwm_count
0312 E0        1527            movx    a,@dptr
0313 FA        1528            mov     r2,a
0314 904D68    1529            mov     dptr,#_pwmL
0317 E0        1530            movx    a,@dptr
0318 FB        1531            mov     r3,a
0319 A3        1532            inc     dptr
031A E0        1533            movx    a,@dptr
031B FC        1534            mov     r4,a
031C 7D00      1535            mov     r5,#0x00
031E C3        1536            clr     c
031F EA        1537            mov     a,r2
0320 9B        1538            subb    a,r3
0321 ED        1539            mov     a,r5
0322 9C        1540            subb    a,r4
0323 92A2      1541            mov     _P2_2,c
0325 8001      1542            sjmp    L016007?
0327           1543   L016006?:
0327           1544   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:232: OUTLB = 0;
0327 C2A2      1545            clr     _P2_2
0329           1546   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:233: OUTLF =pwm_count>=pwmL?0:1;
0329 901840    1547            mov     dptr,#_pwm_count
032C E0        1548            movx    a,@dptr
032D FA        1549            mov     r2,a
032E 904D68    1550            mov     dptr,#_pwmL
0331 E0        1551            movx    a,@dptr
0332 FB        1552            mov     r3,a
0333 A3        1553            inc     dptr
0334 E0        1554            movx    a,@dptr
0335 FC        1555            mov     r4,a
0336 7D00      1556            mov     r5,#0x00
0338 C3        1557            clr     c
0339 EA        1558            mov     a,r2
033A 9B        1559            subb    a,r3
033B ED        1560            mov     a,r5
033C 9C        1561            subb    a,r4
033D 92A1      1562            mov     _P2_1,c
033F           1563   L016007?:
033F           1564   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:236: if (MR_dir) {
033F 30A898    1565            jnb     _MR_dir,L016009?
0342           1566   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:237: OUTRF = 0;
0342 C2A3      1567            clr     _P2_3
0344           1568   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:238: OUTRB =pwm_count>=pwmR?0:1;
0344 901840    1569            mov     dptr,#_pwm_count
0347 E0        1570            movx    a,@dptr
0348 FA        1571            mov     r2,a
0349 904D28    1572            mov     dptr,#_pwmR
034C E0        1573            movx    a,@dptr
034D FB        1574            mov     r3,a
034E A3        1575            inc     dptr
034F E0        1576            movx    a,@dptr
0350 FC        1577            mov     r4,a
0351 7D00      1578            mov     r5,#0x00
0353 C3        1579            clr     c
0354 EA        1580            mov     a,r2
0355 9B        1581            subb    a,r3
0356 ED        1582            mov     a,r5
0357 9C        1583            subb    a,r4
0358 92A4      1584            mov     _P2_4,c
035A 8001      1585            sjmp    L016010?
035C           1586   L016009?:
035C           1587   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:240: OUTRB = 0;
035C C2A4      1588            clr     _P2_4
035E           1589   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:241: OUTRF =pwm_count>=pwmR?0:1;
035E 901840    1590            mov     dptr,#_pwm_count
0361 E0        1591            movx    a,@dptr
0362 FA        1592            mov     r2,a
0363 904D28    1593            mov     dptr,#_pwmR
0366 E0        1594            movx    a,@dptr
0367 FB        1595            mov     r3,a
0368 A3        1596            inc     dptr
0369 E0        1597            movx    a,@dptr
036A FC        1598            mov     r4,a
036B 7D00      1599            mov     r5,#0x00
036D C3        1600            clr     c
036E EA        1601            mov     a,r2
036F 9B        1602            subb    a,r3
0370 ED        1603            mov     a,r5
0371 9C        1604            subb    a,r4
0372 92A3      1605            mov     _P2_3,c
0374           1606   L016010?:
0374           1607   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:244: sonar_op();
0374 75D000    1608            mov     psw,#0x00
0377 120100    1609            lcall   _sonar_op
037A 75D010    1610            mov     psw,#0x10
037D           1611   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:245: if (!counter_above_100) claw_control();
037D 203818    1612            jb      _counter_above_100,L016013?
0380 75D000    1613            mov     psw,#0x00
0383 120100    1614            lcall   _claw_control
0386 75D010    1615            mov     psw,#0x10
0389           1616   L016013?:
0389 D0D0      1617            pop     psw
038B D001      1618            pop     (0+1)
038D D000      1619            pop     (0+0)
038F D007      1620            pop     (0+7)
0391 D006      1621            pop     (0+6)
0393 D005      1622            pop     (0+5)
0395 D004      1623            pop     (0+4)
0397 D003      1624            pop     (0+3)
0399 D002      1625            pop     (0+2)
039B D083      1626            pop     dph
039D D082      1627            pop     dpl
039F D0F0      1628            pop     b
03A1 D0E0      1629            pop     acc
03A3 D028      1630            pop     bits
03A5 32        1631            reti
03A6           1632   ;------------------------------------------------------------
03A6           1633   ;Allocation info for local variables in function 'Calibrate_LSensors'
03A6           1634   ;------------------------------------------------------------
03A6           1635   ;VM                        Allocated with name '_Calibrate_LSensors_PARM_2'
03A6           1636   ;VR                        Allocated with name '_Calibrate_LSensors_PARM_3'
03A6           1637   ;VL                        Allocated with name '_Calibrate_LSensors_VL_1_93'
03A6           1638   ;countL                    Allocated with name '_Calibrate_LSensors_countL_1_94'
03A6           1639   ;countM                    Allocated with name '_Calibrate_LSensors_countM_1_94'
03A6           1640   ;countR                    Allocated with name '_Calibrate_LSensors_countR_1_94'
03A6           1641   ;flags                     Allocated with name '_Calibrate_LSensors_flags_1_94'
03A6           1642   ;------------------------------------------------------------
03A6           1643   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:250: void Calibrate_LSensors(int *VL, int *VM, int *VR)
03A6           1644   ;        -----------------------------------------
03A6           1645   ;         function Calibrate_LSensors
03A6           1646   ;        -----------------------------------------
03A6           1647   _Calibrate_LSensors:
03A6           1648            using   0
03A6 858238    1649            mov     _Calibrate_LSensors_VL_1_93,dpl
03A9 858339    1650            mov     (_Calibrate_LSensors_VL_1_93 + 1),dph
03AC 85F03A    1651            mov     (_Calibrate_LSensors_VL_1_93 + 2),b
03AF           1652   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:252: xdata short countL=0;
03AF 90CB38    1653            mov     dptr,#_Calibrate_LSensors_countL_1_94
03B2 E4        1654            clr     a
03B3 F0        1655            movx    @dptr,a
03B4 A3        1656            inc     dptr
03B5 F0        1657            movx    @dptr,a
03B6           1658   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:253: xdata short countM=0;
03B6 90CB88    1659            mov     dptr,#_Calibrate_LSensors_countM_1_94
03B9 E4        1660            clr     a
03BA F0        1661            movx    @dptr,a
03BB A3        1662            inc     dptr
03BC F0        1663            movx    @dptr,a
03BD           1664   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:254: xdata short countR=0;
03BD 90CBD8    1665            mov     dptr,#_Calibrate_LSensors_countR_1_94
03C0 E4        1666            clr     a
03C1 F0        1667            movx    @dptr,a
03C2 A3        1668            inc     dptr
03C3 F0        1669            movx    @dptr,a
03C4           1670   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:255: xdata short flags =0;
03C4 90CC28    1671            mov     dptr,#_Calibrate_LSensors_flags_1_94
03C7 E4        1672            clr     a
03C8 F0        1673            movx    @dptr,a
03C9 A3        1674            inc     dptr
03CA F0        1675            movx    @dptr,a
03CB           1676   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:257: main_int1 = 0;
03CB 904CA8    1677            mov     dptr,#_main_int1
03CE E4        1678            clr     a
03CF F0        1679            movx    @dptr,a
03D0 A3        1680            inc     dptr
03D1 F0        1681            movx    @dptr,a
03D2           1682   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:259: while (flags != 7) {
03D2           1683   L017022?:
03D2 90CC28    1684            mov     dptr,#_Calibrate_LSensors_flags_1_94
03D5 E0        1685            movx    a,@dptr
03D6 FD        1686            mov     r5,a
03D7 A3        1687            inc     dptr
03D8 E0        1688            movx    a,@dptr
03D9 FE        1689            mov     r6,a
03DA BD0798    1690            cjne    r5,#0x07,L017038?
03DD BE0098    1691            cjne    r6,#0x00,L017038?
03E0 020100    1692            ljmp    L017024?
03E3           1693   L017038?:
03E3           1694   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:261: if ((flags & 2) != 2) {
03E3 530502    1695            anl     ar5,#0x02
03E6 7E00      1696            mov     r6,#0x00
03E8 BD0218    1697            cjne    r5,#0x02,L017039?
03EB BE0018    1698            cjne    r6,#0x00,L017039?
03EE 020100    1699            ljmp    L017007?
03F1           1700   L017039?:
03F1           1701   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:262: main_int1 = Volts_at_Pin(QFP32_MUX_P1_6)*1000;
03F1 75820C    1702            mov     dpl,#0x0C
03F4 120100    1703            lcall   _Volts_at_Pin
03F7 AD82      1704            mov     r5,dpl
03F9 AE83      1705            mov     r6,dph
03FB AFF0      1706            mov     r7,b
03FD F8        1707            mov     r0,a
03FE C005      1708            push    ar5
0400 C006      1709            push    ar6
0402 C007      1710            push    ar7
0404 C000      1711            push    ar0
0406 900000    1712            mov     dptr,#0x0000
0409 75F07A    1713            mov     b,#0x7A
040C 7444      1714            mov     a,#0x44
040E 120100    1715            lcall   ___fsmul
0411 AD82      1716            mov     r5,dpl
0413 AE83      1717            mov     r6,dph
0415 AFF0      1718            mov     r7,b
0417 F8        1719            mov     r0,a
0418 E581      1720            mov     a,sp
041A 24FC      1721            add     a,#0xfc
041C F581      1722            mov     sp,a
041E 8D82      1723            mov     dpl,r5
0420 8E83      1724            mov     dph,r6
0422 8FF0      1725            mov     b,r7
0424 E8        1726            mov     a,r0
0425 120100    1727            lcall   ___fs2uint
0428 E582      1728            mov     a,dpl
042A 8583F0    1729            mov     b,dph
042D 904CA8    1730            mov     dptr,#_main_int1
0430 F0        1731            movx    @dptr,a
0431 A3        1732            inc     dptr
0432 E5F0      1733            mov     a,b
0434 F0        1734            movx    @dptr,a
0435           1735   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:264: if (abs(*VL - main_int1) <= 50) {
0435 853882    1736            mov     dpl,_Calibrate_LSensors_VL_1_93
0438 853983    1737            mov     dph,(_Calibrate_LSensors_VL_1_93 + 1)
043B 853AF0    1738            mov     b,(_Calibrate_LSensors_VL_1_93 + 2)
043E 120100    1739            lcall   __gptrget
0441 FD        1740            mov     r5,a
0442 A3        1741            inc     dptr
0443 120100    1742            lcall   __gptrget
0446 FE        1743            mov     r6,a
0447 904CA8    1744            mov     dptr,#_main_int1
044A E0        1745            movx    a,@dptr
044B FF        1746            mov     r7,a
044C A3        1747            inc     dptr
044D E0        1748            movx    a,@dptr
044E F8        1749            mov     r0,a
044F ED        1750            mov     a,r5
0450 C3        1751            clr     c
0451 9F        1752            subb    a,r7
0452 F582      1753            mov     dpl,a
0454 EE        1754            mov     a,r6
0455 98        1755            subb    a,r0
0456 F583      1756            mov     dph,a
0458 120100    1757            lcall   _abs
045B AD82      1758            mov     r5,dpl
045D AE83      1759            mov     r6,dph
045F C3        1760            clr     c
0460 7432      1761            mov     a,#0x32
0462 9D        1762            subb    a,r5
0463 E4        1763            clr     a
0464 6480      1764            xrl     a,#0x80
0466 8EF0      1765            mov     b,r6
0468 63F080    1766            xrl     b,#0x80
046B 95F0      1767            subb    a,b
046D 4001      1768            jc      L017002?
046F           1769   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:265: countL++;
046F 90CB38    1770            mov     dptr,#_Calibrate_LSensors_countL_1_94
0472 E0        1771            movx    a,@dptr
0473 2401      1772            add     a,#0x01
0475 F0        1773            movx    @dptr,a
0476 A3        1774            inc     dptr
0477 E0        1775            movx    a,@dptr
0478 3400      1776            addc    a,#0x00
047A F0        1777            movx    @dptr,a
047B 8001      1778            sjmp    L017003?
047D           1779   L017002?:
047D           1780   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:267: countL = 0;
047D 90CB38    1781            mov     dptr,#_Calibrate_LSensors_countL_1_94
0480 E4        1782            clr     a
0481 F0        1783            movx    @dptr,a
0482 A3        1784            inc     dptr
0483 F0        1785            movx    @dptr,a
0484           1786   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:268: *VL = main_int1;
0484 904CA8    1787            mov     dptr,#_main_int1
0487 E0        1788            movx    a,@dptr
0488 FD        1789            mov     r5,a
0489 A3        1790            inc     dptr
048A E0        1791            movx    a,@dptr
048B FE        1792            mov     r6,a
048C 853882    1793            mov     dpl,_Calibrate_LSensors_VL_1_93
048F 853983    1794            mov     dph,(_Calibrate_LSensors_VL_1_93 + 1)
0492 853AF0    1795            mov     b,(_Calibrate_LSensors_VL_1_93 + 2)
0495 ED        1796            mov     a,r5
0496 120100    1797            lcall   __gptrput
0499 A3        1798            inc     dptr
049A EE        1799            mov     a,r6
049B 120100    1800            lcall   __gptrput
049E           1801   L017003?:
049E           1802   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:271: if (countL == 10)
049E 90CB38    1803            mov     dptr,#_Calibrate_LSensors_countL_1_94
04A1 E0        1804            movx    a,@dptr
04A2 FD        1805            mov     r5,a
04A3 A3        1806            inc     dptr
04A4 E0        1807            movx    a,@dptr
04A5 FE        1808            mov     r6,a
04A6 BD0A58    1809            cjne    r5,#0x0A,L017007?
04A9 BE0058    1810            cjne    r6,#0x00,L017007?
04AC           1811   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:272: flags |= 2;
04AC 90CC28    1812            mov     dptr,#_Calibrate_LSensors_flags_1_94
04AF E0        1813            movx    a,@dptr
04B0 FD        1814            mov     r5,a
04B1 A3        1815            inc     dptr
04B2 E0        1816            movx    a,@dptr
04B3 FE        1817            mov     r6,a
04B4 90CC28    1818            mov     dptr,#_Calibrate_LSensors_flags_1_94
04B7 7402      1819            mov     a,#0x02
04B9 4D        1820            orl     a,r5
04BA F0        1821            movx    @dptr,a
04BB A3        1822            inc     dptr
04BC EE        1823            mov     a,r6
04BD F0        1824            movx    @dptr,a
04BE           1825   L017007?:
04BE           1826   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:275: if ((flags & 1) != 1) {
04BE 90CC28    1827            mov     dptr,#_Calibrate_LSensors_flags_1_94
04C1 E0        1828            movx    a,@dptr
04C2 FD        1829            mov     r5,a
04C3 A3        1830            inc     dptr
04C4 E0        1831            movx    a,@dptr
04C5 530501    1832            anl     ar5,#0x01
04C8 7E00      1833            mov     r6,#0x00
04CA BD0118    1834            cjne    r5,#0x01,L017043?
04CD BE0018    1835            cjne    r6,#0x00,L017043?
04D0 020100    1836            ljmp    L017014?
04D3           1837   L017043?:
04D3           1838   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:276: main_int1 = Volts_at_Pin(QFP32_MUX_P1_4)*1000;
04D3 75820A    1839            mov     dpl,#0x0A
04D6 120100    1840            lcall   _Volts_at_Pin
04D9 AD82      1841            mov     r5,dpl
04DB AE83      1842            mov     r6,dph
04DD AFF0      1843            mov     r7,b
04DF F8        1844            mov     r0,a
04E0 C005      1845            push    ar5
04E2 C006      1846            push    ar6
04E4 C007      1847            push    ar7
04E6 C000      1848            push    ar0
04E8 900000    1849            mov     dptr,#0x0000
04EB 75F07A    1850            mov     b,#0x7A
04EE 7444      1851            mov     a,#0x44
04F0 120100    1852            lcall   ___fsmul
04F3 AD82      1853            mov     r5,dpl
04F5 AE83      1854            mov     r6,dph
04F7 AFF0      1855            mov     r7,b
04F9 F8        1856            mov     r0,a
04FA E581      1857            mov     a,sp
04FC 24FC      1858            add     a,#0xfc
04FE F581      1859            mov     sp,a
0500 8D82      1860            mov     dpl,r5
0502 8E83      1861            mov     dph,r6
0504 8FF0      1862            mov     b,r7
0506 E8        1863            mov     a,r0
0507 120100    1864            lcall   ___fs2uint
050A E582      1865            mov     a,dpl
050C 8583F0    1866            mov     b,dph
050F 904CA8    1867            mov     dptr,#_main_int1
0512 F0        1868            movx    @dptr,a
0513 A3        1869            inc     dptr
0514 E5F0      1870            mov     a,b
0516 F0        1871            movx    @dptr,a
0517           1872   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:278: if (abs(*VR-main_int1) <= 50) {
0517 AD18      1873            mov     r5,_Calibrate_LSensors_PARM_3
0519 AE19      1874            mov     r6,(_Calibrate_LSensors_PARM_3 + 1)
051B AF1A      1875            mov     r7,(_Calibrate_LSensors_PARM_3 + 2)
051D 8D82      1876            mov     dpl,r5
051F 8E83      1877            mov     dph,r6
0521 8FF0      1878            mov     b,r7
0523 120100    1879            lcall   __gptrget
0526 F8        1880            mov     r0,a
0527 A3        1881            inc     dptr
0528 120100    1882            lcall   __gptrget
052B F9        1883            mov     r1,a
052C 904CA8    1884            mov     dptr,#_main_int1
052F E0        1885            movx    a,@dptr
0530 FA        1886            mov     r2,a
0531 A3        1887            inc     dptr
0532 E0        1888            movx    a,@dptr
0533 FB        1889            mov     r3,a
0534 E8        1890            mov     a,r0
0535 C3        1891            clr     c
0536 9A        1892            subb    a,r2
0537 F582      1893            mov     dpl,a
0539 E9        1894            mov     a,r1
053A 9B        1895            subb    a,r3
053B F583      1896            mov     dph,a
053D C005      1897            push    ar5
053F C006      1898            push    ar6
0541 C007      1899            push    ar7
0543 120100    1900            lcall   _abs
0546 AA82      1901            mov     r2,dpl
0548 AB83      1902            mov     r3,dph
054A D007      1903            pop     ar7
054C D006      1904            pop     ar6
054E D005      1905            pop     ar5
0550 C3        1906            clr     c
0551 7432      1907            mov     a,#0x32
0553 9A        1908            subb    a,r2
0554 E4        1909            clr     a
0555 6480      1910            xrl     a,#0x80
0557 8BF0      1911            mov     b,r3
0559 63F080    1912            xrl     b,#0x80
055C 95F0      1913            subb    a,b
055E 4001      1914            jc      L017009?
0560           1915   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:279: countR++;
0560 90CBD8    1916            mov     dptr,#_Calibrate_LSensors_countR_1_94
0563 E0        1917            movx    a,@dptr
0564 2401      1918            add     a,#0x01
0566 F0        1919            movx    @dptr,a
0567 A3        1920            inc     dptr
0568 E0        1921            movx    a,@dptr
0569 3400      1922            addc    a,#0x00
056B F0        1923            movx    @dptr,a
056C 8001      1924            sjmp    L017010?
056E           1925   L017009?:
056E           1926   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:281: countR =0;
056E 90CBD8    1927            mov     dptr,#_Calibrate_LSensors_countR_1_94
0571 E4        1928            clr     a
0572 F0        1929            movx    @dptr,a
0573 A3        1930            inc     dptr
0574 F0        1931            movx    @dptr,a
0575           1932   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:282: *VR = main_int1;
0575 904CA8    1933            mov     dptr,#_main_int1
0578 E0        1934            movx    a,@dptr
0579 FA        1935            mov     r2,a
057A A3        1936            inc     dptr
057B E0        1937            movx    a,@dptr
057C FB        1938            mov     r3,a
057D 8D82      1939            mov     dpl,r5
057F 8E83      1940            mov     dph,r6
0581 8FF0      1941            mov     b,r7
0583 EA        1942            mov     a,r2
0584 120100    1943            lcall   __gptrput
0587 A3        1944            inc     dptr
0588 EB        1945            mov     a,r3
0589 120100    1946            lcall   __gptrput
058C           1947   L017010?:
058C           1948   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:285: if (countR == 10)
058C 90CBD8    1949            mov     dptr,#_Calibrate_LSensors_countR_1_94
058F E0        1950            movx    a,@dptr
0590 FA        1951            mov     r2,a
0591 A3        1952            inc     dptr
0592 E0        1953            movx    a,@dptr
0593 FB        1954            mov     r3,a
0594 BA0A58    1955            cjne    r2,#0x0A,L017014?
0597 BB0058    1956            cjne    r3,#0x00,L017014?
059A           1957   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:286: flags |= 1;
059A 90CC28    1958            mov     dptr,#_Calibrate_LSensors_flags_1_94
059D E0        1959            movx    a,@dptr
059E FA        1960            mov     r2,a
059F A3        1961            inc     dptr
05A0 E0        1962            movx    a,@dptr
05A1 FB        1963            mov     r3,a
05A2 90CC28    1964            mov     dptr,#_Calibrate_LSensors_flags_1_94
05A5 7401      1965            mov     a,#0x01
05A7 4A        1966            orl     a,r2
05A8 F0        1967            movx    @dptr,a
05A9 A3        1968            inc     dptr
05AA EB        1969            mov     a,r3
05AB F0        1970            movx    @dptr,a
05AC           1971   L017014?:
05AC           1972   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:289: if ((flags & 4) != 4) {
05AC 90CC28    1973            mov     dptr,#_Calibrate_LSensors_flags_1_94
05AF E0        1974            movx    a,@dptr
05B0 FA        1975            mov     r2,a
05B1 A3        1976            inc     dptr
05B2 E0        1977            movx    a,@dptr
05B3 530204    1978            anl     ar2,#0x04
05B6 7B00      1979            mov     r3,#0x00
05B8 BA0418    1980            cjne    r2,#0x04,L017047?
05BB BB0018    1981            cjne    r3,#0x00,L017047?
05BE 020100    1982            ljmp    L017022?
05C1           1983   L017047?:
05C1           1984   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:290: main_int1 = Volts_at_Pin(QFP32_MUX_P1_5)*1000;
05C1 75820B    1985            mov     dpl,#0x0B
05C4 120100    1986            lcall   _Volts_at_Pin
05C7 AA82      1987            mov     r2,dpl
05C9 AB83      1988            mov     r3,dph
05CB ACF0      1989            mov     r4,b
05CD FD        1990            mov     r5,a
05CE C002      1991            push    ar2
05D0 C003      1992            push    ar3
05D2 C004      1993            push    ar4
05D4 C005      1994            push    ar5
05D6 900000    1995            mov     dptr,#0x0000
05D9 75F07A    1996            mov     b,#0x7A
05DC 7444      1997            mov     a,#0x44
05DE 120100    1998            lcall   ___fsmul
05E1 AA82      1999            mov     r2,dpl
05E3 AB83      2000            mov     r3,dph
05E5 ACF0      2001            mov     r4,b
05E7 FD        2002            mov     r5,a
05E8 E581      2003            mov     a,sp
05EA 24FC      2004            add     a,#0xfc
05EC F581      2005            mov     sp,a
05EE 8A82      2006            mov     dpl,r2
05F0 8B83      2007            mov     dph,r3
05F2 8CF0      2008            mov     b,r4
05F4 ED        2009            mov     a,r5
05F5 120100    2010            lcall   ___fs2uint
05F8 E582      2011            mov     a,dpl
05FA 8583F0    2012            mov     b,dph
05FD 904CA8    2013            mov     dptr,#_main_int1
0600 F0        2014            movx    @dptr,a
0601 A3        2015            inc     dptr
0602 E5F0      2016            mov     a,b
0604 F0        2017            movx    @dptr,a
0605           2018   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:292: if (abs(*VM-main_int1) <= 50){
0605 AA68      2019            mov     r2,_Calibrate_LSensors_PARM_2
0607 AB69      2020            mov     r3,(_Calibrate_LSensors_PARM_2 + 1)
0609 AC6A      2021            mov     r4,(_Calibrate_LSensors_PARM_2 + 2)
060B 8A82      2022            mov     dpl,r2
060D 8B83      2023            mov     dph,r3
060F 8CF0      2024            mov     b,r4
0611 120100    2025            lcall   __gptrget
0614 FD        2026            mov     r5,a
0615 A3        2027            inc     dptr
0616 120100    2028            lcall   __gptrget
0619 FE        2029            mov     r6,a
061A 904CA8    2030            mov     dptr,#_main_int1
061D E0        2031            movx    a,@dptr
061E FF        2032            mov     r7,a
061F A3        2033            inc     dptr
0620 E0        2034            movx    a,@dptr
0621 F8        2035            mov     r0,a
0622 ED        2036            mov     a,r5
0623 C3        2037            clr     c
0624 9F        2038            subb    a,r7
0625 F582      2039            mov     dpl,a
0627 EE        2040            mov     a,r6
0628 98        2041            subb    a,r0
0629 F583      2042            mov     dph,a
062B C002      2043            push    ar2
062D C003      2044            push    ar3
062F C004      2045            push    ar4
0631 120100    2046            lcall   _abs
0634 AD82      2047            mov     r5,dpl
0636 AE83      2048            mov     r6,dph
0638 D004      2049            pop     ar4
063A D003      2050            pop     ar3
063C D002      2051            pop     ar2
063E C3        2052            clr     c
063F 7432      2053            mov     a,#0x32
0641 9D        2054            subb    a,r5
0642 E4        2055            clr     a
0643 6480      2056            xrl     a,#0x80
0645 8EF0      2057            mov     b,r6
0647 63F080    2058            xrl     b,#0x80
064A 95F0      2059            subb    a,b
064C 4001      2060            jc      L017016?
064E           2061   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:293: countM++;
064E 90CB88    2062            mov     dptr,#_Calibrate_LSensors_countM_1_94
0651 E0        2063            movx    a,@dptr
0652 2401      2064            add     a,#0x01
0654 F0        2065            movx    @dptr,a
0655 A3        2066            inc     dptr
0656 E0        2067            movx    a,@dptr
0657 3400      2068            addc    a,#0x00
0659 F0        2069            movx    @dptr,a
065A 8001      2070            sjmp    L017017?
065C           2071   L017016?:
065C           2072   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:295: countM =0;
065C 90CB88    2073            mov     dptr,#_Calibrate_LSensors_countM_1_94
065F E4        2074            clr     a
0660 F0        2075            movx    @dptr,a
0661 A3        2076            inc     dptr
0662 F0        2077            movx    @dptr,a
0663           2078   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:296: *VM = main_int1;
0663 904CA8    2079            mov     dptr,#_main_int1
0666 E0        2080            movx    a,@dptr
0667 FD        2081            mov     r5,a
0668 A3        2082            inc     dptr
0669 E0        2083            movx    a,@dptr
066A FE        2084            mov     r6,a
066B 8A82      2085            mov     dpl,r2
066D 8B83      2086            mov     dph,r3
066F 8CF0      2087            mov     b,r4
0671 ED        2088            mov     a,r5
0672 120100    2089            lcall   __gptrput
0675 A3        2090            inc     dptr
0676 EE        2091            mov     a,r6
0677 120100    2092            lcall   __gptrput
067A           2093   L017017?:
067A           2094   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:299: if (countM == 10)
067A 90CB88    2095            mov     dptr,#_Calibrate_LSensors_countM_1_94
067D E0        2096            movx    a,@dptr
067E FA        2097            mov     r2,a
067F A3        2098            inc     dptr
0680 E0        2099            movx    a,@dptr
0681 FB        2100            mov     r3,a
0682 BA0AD8    2101            cjne    r2,#0x0A,L017049?
0685 BB00D8    2102            cjne    r3,#0x00,L017049?
0688 8001      2103            sjmp    L017050?
068A           2104   L017049?:
068A 020100    2105            ljmp    L017022?
068D           2106   L017050?:
068D           2107   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:300: flags |= 4;
068D 90CC28    2108            mov     dptr,#_Calibrate_LSensors_flags_1_94
0690 E0        2109            movx    a,@dptr
0691 FA        2110            mov     r2,a
0692 A3        2111            inc     dptr
0693 E0        2112            movx    a,@dptr
0694 FB        2113            mov     r3,a
0695 90CC28    2114            mov     dptr,#_Calibrate_LSensors_flags_1_94
0698 7404      2115            mov     a,#0x04
069A 4A        2116            orl     a,r2
069B F0        2117            movx    @dptr,a
069C A3        2118            inc     dptr
069D EB        2119            mov     a,r3
069E F0        2120            movx    @dptr,a
069F 020100    2121            ljmp    L017022?
06A2           2122   L017024?:
06A2           2123   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:303: return;         
06A2 22        2124            ret
06A3           2125   ;------------------------------------------------------------
06A3           2126   ;Allocation info for local variables in function 'Claw_Pos'
06A3           2127   ;------------------------------------------------------------
06A3           2128   ;pos                       Allocated to registers r2 r3 
06A3           2129   ;------------------------------------------------------------
06A3           2130   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:306: void Claw_Pos( int pos ) 
06A3           2131   ;        -----------------------------------------
06A3           2132   ;         function Claw_Pos
06A3           2133   ;        -----------------------------------------
06A3           2134   _Claw_Pos:
06A3 AA82      2135            mov     r2,dpl
06A5 AB83      2136            mov     r3,dph
06A7           2137   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:308: claw_pos = pos + 5;
06A7 901880    2138            mov     dptr,#_claw_pos
06AA 7405      2139            mov     a,#0x05
06AC 2A        2140            add     a,r2
06AD F0        2141            movx    @dptr,a
06AE E4        2142            clr     a
06AF 3B        2143            addc    a,r3
06B0 A3        2144            inc     dptr
06B1 F0        2145            movx    @dptr,a
06B2 22        2146            ret
06B3           2147   ;------------------------------------------------------------
06B3           2148   ;Allocation info for local variables in function 'manual_mode'
06B3           2149   ;------------------------------------------------------------
06B3           2150   ;------------------------------------------------------------
06B3           2151   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:311: void manual_mode(void)
06B3           2152   ;        -----------------------------------------
06B3           2153   ;         function manual_mode
06B3           2154   ;        -----------------------------------------
06B3           2155   _manual_mode:
06B3           2156   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:314: if(open) Claw_Pos(10);
06B3 307858    2157            jnb     _open,L019002?
06B6 90000A    2158            mov     dptr,#0x000A
06B9 120100    2159            lcall   _Claw_Pos
06BC           2160   L019002?:
06BC           2161   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:315: if(close) Claw_Pos(2);
06BC 303898    2162            jnb     _close,L019004?
06BF 900002    2163            mov     dptr,#0x0002
06C2 120100    2164            lcall   _Claw_Pos
06C5           2165   L019004?:
06C5           2166   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:318: if(y_absolute == 0)     //turn in place
06C5 904B68    2167            mov     dptr,#_y_absolute
06C8 E0        2168            movx    a,@dptr
06C9 FA        2169            mov     r2,a
06CA A3        2170            inc     dptr
06CB E0        2171            movx    a,@dptr
06CC FB        2172            mov     r3,a
06CD 4A        2173            orl     a,r2
06CE 6001      2174            jz      L019027?
06D0 020100    2175            ljmp    L019015?
06D3           2176   L019027?:
06D3           2177   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:320: main_short1 = x_absolute;
06D3 904BA8    2178            mov     dptr,#_x_absolute
06D6 E0        2179            movx    a,@dptr
06D7 FA        2180            mov     r2,a
06D8 A3        2181            inc     dptr
06D9 E0        2182            movx    a,@dptr
06DA FB        2183            mov     r3,a
06DB 904CE8    2184            mov     dptr,#_main_short1
06DE EA        2185            mov     a,r2
06DF F0        2186            movx    @dptr,a
06E0 A3        2187            inc     dptr
06E1 EB        2188            mov     a,r3
06E2 F0        2189            movx    @dptr,a
06E3           2190   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:321: ML_dir = !x_dir;
06E3 A2F8      2191            mov     c,_x_dir
06E5 B3        2192            cpl     c
06E6 92E8      2193            mov     _ML_dir,c
06E8           2194   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:322: MR_dir = x_dir;
06E8 A2F8      2195            mov     c,_x_dir
06EA 92A8      2196            mov     _MR_dir,c
06EC           2197   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:323: if(boost)
06EC 30B858    2198            jnb     _boost,L019006?
06EF           2199   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:325: pwmL = main_short1 * BOOST_TURN;  //boost turn speed
06EF 904CE8    2200            mov     dptr,#_main_short1
06F2 E0        2201            movx    a,@dptr
06F3 F500      2202            mov     __mulint_PARM_2,a
06F5 A3        2203            inc     dptr
06F6 E0        2204            movx    a,@dptr
06F7 F501      2205            mov     (__mulint_PARM_2 + 1),a
06F9 900007    2206            mov     dptr,#0x0007
06FC 120100    2207            lcall   __mulint
06FF E582      2208            mov     a,dpl
0701 8583F0    2209            mov     b,dph
0704 904D68    2210            mov     dptr,#_pwmL
0707 F0        2211            movx    @dptr,a
0708 A3        2212            inc     dptr
0709 E5F0      2213            mov     a,b
070B F0        2214            movx    @dptr,a
070C           2215   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:326: pwmR = main_short1 * BOOST_TURN;
070C 904CE8    2216            mov     dptr,#_main_short1
070F E0        2217            movx    a,@dptr
0710 F500      2218            mov     __mulint_PARM_2,a
0712 A3        2219            inc     dptr
0713 E0        2220            movx    a,@dptr
0714 F501      2221            mov     (__mulint_PARM_2 + 1),a
0716 900007    2222            mov     dptr,#0x0007
0719 120100    2223            lcall   __mulint
071C E582      2224            mov     a,dpl
071E 8583F0    2225            mov     b,dph
0721 904D28    2226            mov     dptr,#_pwmR
0724 F0        2227            movx    @dptr,a
0725 A3        2228            inc     dptr
0726 E5F0      2229            mov     a,b
0728 F0        2230            movx    @dptr,a
0729 22        2231            ret
072A           2232   L019006?:
072A           2233   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:328: pwmL = main_short1 * DFT_TURN;    //default turn speed
072A 904CE8    2234            mov     dptr,#_main_short1
072D E0        2235            movx    a,@dptr
072E FA        2236            mov     r2,a
072F A3        2237            inc     dptr
0730 E0        2238            movx    a,@dptr
0731 CA        2239            xch     a,r2
0732 25E0      2240            add     a,acc
0734 CA        2241            xch     a,r2
0735 33        2242            rlc     a
0736 CA        2243            xch     a,r2
0737 25E0      2244            add     a,acc
0739 CA        2245            xch     a,r2
073A 33        2246            rlc     a
073B FB        2247            mov     r3,a
073C 904D68    2248            mov     dptr,#_pwmL
073F EA        2249            mov     a,r2
0740 F0        2250            movx    @dptr,a
0741 A3        2251            inc     dptr
0742 EB        2252            mov     a,r3
0743 F0        2253            movx    @dptr,a
0744           2254   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:329: pwmR = main_short1 * DFT_TURN;
0744 904CE8    2255            mov     dptr,#_main_short1
0747 E0        2256            movx    a,@dptr
0748 FA        2257            mov     r2,a
0749 A3        2258            inc     dptr
074A E0        2259            movx    a,@dptr
074B CA        2260            xch     a,r2
074C 25E0      2261            add     a,acc
074E CA        2262            xch     a,r2
074F 33        2263            rlc     a
0750 CA        2264            xch     a,r2
0751 25E0      2265            add     a,acc
0753 CA        2266            xch     a,r2
0754 33        2267            rlc     a
0755 FB        2268            mov     r3,a
0756 904D28    2269            mov     dptr,#_pwmR
0759 EA        2270            mov     a,r2
075A F0        2271            movx    @dptr,a
075B A3        2272            inc     dptr
075C EB        2273            mov     a,r3
075D F0        2274            movx    @dptr,a
075E 22        2275            ret
075F           2276   L019015?:
075F           2277   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:332: main_int1 = y_absolute * 100;
075F 904B68    2278            mov     dptr,#_y_absolute
0762 E0        2279            movx    a,@dptr
0763 F500      2280            mov     __mulint_PARM_2,a
0765 A3        2281            inc     dptr
0766 E0        2282            movx    a,@dptr
0767 F501      2283            mov     (__mulint_PARM_2 + 1),a
0769 900064    2284            mov     dptr,#0x0064
076C 120100    2285            lcall   __mulint
076F E582      2286            mov     a,dpl
0771 8583F0    2287            mov     b,dph
0774 904CA8    2288            mov     dptr,#_main_int1
0777 F0        2289            movx    @dptr,a
0778 A3        2290            inc     dptr
0779 E5F0      2291            mov     a,b
077B F0        2292            movx    @dptr,a
077C           2293   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:333: main_int2 = main_int1 * x_absolute / TURNING_RADIUS;
077C 904BA8    2294            mov     dptr,#_x_absolute
077F E0        2295            movx    a,@dptr
0780 F500      2296            mov     __mulint_PARM_2,a
0782 A3        2297            inc     dptr
0783 E0        2298            movx    a,@dptr
0784 F501      2299            mov     (__mulint_PARM_2 + 1),a
0786 904CA8    2300            mov     dptr,#_main_int1
0789 E0        2301            movx    a,@dptr
078A FA        2302            mov     r2,a
078B A3        2303            inc     dptr
078C E0        2304            movx    a,@dptr
078D FB        2305            mov     r3,a
078E 8A82      2306            mov     dpl,r2
0790 8B83      2307            mov     dph,r3
0792 120100    2308            lcall   __mulint
0795 AA82      2309            mov     r2,dpl
0797 AB83      2310            mov     r3,dph
0799 75000A    2311            mov     __divuint_PARM_2,#0x0A
079C E4        2312            clr     a
079D F501      2313            mov     (__divuint_PARM_2 + 1),a
079F 8A82      2314            mov     dpl,r2
07A1 8B83      2315            mov     dph,r3
07A3 120100    2316            lcall   __divuint
07A6 E582      2317            mov     a,dpl
07A8 8583F0    2318            mov     b,dph
07AB 904C68    2319            mov     dptr,#_main_int2
07AE F0        2320            movx    @dptr,a
07AF A3        2321            inc     dptr
07B0 E5F0      2322            mov     a,b
07B2 F0        2323            movx    @dptr,a
07B3           2324   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:334: if (x_dir)
07B3 30F8A8    2325            jnb     _x_dir,L019009?
07B6           2326   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:336: main_int3 = main_int1 - main_int2;      //Left motor
07B6 904C68    2327            mov     dptr,#_main_int2
07B9 E0        2328            movx    a,@dptr
07BA FA        2329            mov     r2,a
07BB A3        2330            inc     dptr
07BC E0        2331            movx    a,@dptr
07BD FB        2332            mov     r3,a
07BE 904CA8    2333            mov     dptr,#_main_int1
07C1 E0        2334            movx    a,@dptr
07C2 FC        2335            mov     r4,a
07C3 A3        2336            inc     dptr
07C4 E0        2337            movx    a,@dptr
07C5 FD        2338            mov     r5,a
07C6 904C28    2339            mov     dptr,#_main_int3
07C9 EC        2340            mov     a,r4
07CA C3        2341            clr     c
07CB 9A        2342            subb    a,r2
07CC F0        2343            movx    @dptr,a
07CD ED        2344            mov     a,r5
07CE 9B        2345            subb    a,r3
07CF A3        2346            inc     dptr
07D0 F0        2347            movx    @dptr,a
07D1           2348   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:337: main_int4 = main_int1 + main_int2;      //Right motor
07D1 904C68    2349            mov     dptr,#_main_int2
07D4 E0        2350            movx    a,@dptr
07D5 FA        2351            mov     r2,a
07D6 A3        2352            inc     dptr
07D7 E0        2353            movx    a,@dptr
07D8 FB        2354            mov     r3,a
07D9 904CA8    2355            mov     dptr,#_main_int1
07DC E0        2356            movx    a,@dptr
07DD FC        2357            mov     r4,a
07DE A3        2358            inc     dptr
07DF E0        2359            movx    a,@dptr
07E0 FD        2360            mov     r5,a
07E1 904BE8    2361            mov     dptr,#_main_int4
07E4 EA        2362            mov     a,r2
07E5 2C        2363            add     a,r4
07E6 F0        2364            movx    @dptr,a
07E7 EB        2365            mov     a,r3
07E8 3D        2366            addc    a,r5
07E9 A3        2367            inc     dptr
07EA F0        2368            movx    @dptr,a
07EB 8001      2369            sjmp    L019010?
07ED           2370   L019009?:
07ED           2371   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:339: main_int3 = main_int1 + main_int2;      //Left motor
07ED 904C68    2372            mov     dptr,#_main_int2
07F0 E0        2373            movx    a,@dptr
07F1 FA        2374            mov     r2,a
07F2 A3        2375            inc     dptr
07F3 E0        2376            movx    a,@dptr
07F4 FB        2377            mov     r3,a
07F5 904CA8    2378            mov     dptr,#_main_int1
07F8 E0        2379            movx    a,@dptr
07F9 FC        2380            mov     r4,a
07FA A3        2381            inc     dptr
07FB E0        2382            movx    a,@dptr
07FC FD        2383            mov     r5,a
07FD 904C28    2384            mov     dptr,#_main_int3
0800 EA        2385            mov     a,r2
0801 2C        2386            add     a,r4
0802 F0        2387            movx    @dptr,a
0803 EB        2388            mov     a,r3
0804 3D        2389            addc    a,r5
0805 A3        2390            inc     dptr
0806 F0        2391            movx    @dptr,a
0807           2392   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:340: main_int4 = main_int1 - main_int2;      //Right motor
0807 904C68    2393            mov     dptr,#_main_int2
080A E0        2394            movx    a,@dptr
080B FA        2395            mov     r2,a
080C A3        2396            inc     dptr
080D E0        2397            movx    a,@dptr
080E FB        2398            mov     r3,a
080F 904CA8    2399            mov     dptr,#_main_int1
0812 E0        2400            movx    a,@dptr
0813 FC        2401            mov     r4,a
0814 A3        2402            inc     dptr
0815 E0        2403            movx    a,@dptr
0816 FD        2404            mov     r5,a
0817 904BE8    2405            mov     dptr,#_main_int4
081A EC        2406            mov     a,r4
081B C3        2407            clr     c
081C 9A        2408            subb    a,r2
081D F0        2409            movx    @dptr,a
081E ED        2410            mov     a,r5
081F 9B        2411            subb    a,r3
0820 A3        2412            inc     dptr
0821 F0        2413            movx    @dptr,a
0822           2414   L019010?:
0822           2415   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:344: ML_dir = y_dir;
0822 A2B8      2416            mov     c,_y_dir
0824 92E8      2417            mov     _ML_dir,c
0826           2418   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:345: MR_dir = y_dir;
0826 A2B8      2419            mov     c,_y_dir
0828 92A8      2420            mov     _MR_dir,c
082A           2421   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:346: if(boost)
082A 30B828    2422            jnb     _boost,L019012?
082D           2423   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:348: pwmL = main_int3 / BOOST_SPEED;
082D 904C28    2424            mov     dptr,#_main_int3
0830 E0        2425            movx    a,@dptr
0831 FA        2426            mov     r2,a
0832 A3        2427            inc     dptr
0833 E0        2428            movx    a,@dptr
0834 FB        2429            mov     r3,a
0835 750007    2430            mov     __divuint_PARM_2,#0x07
0838 E4        2431            clr     a
0839 F501      2432            mov     (__divuint_PARM_2 + 1),a
083B 8A82      2433            mov     dpl,r2
083D 8B83      2434            mov     dph,r3
083F 120100    2435            lcall   __divuint
0842 E582      2436            mov     a,dpl
0844 8583F0    2437            mov     b,dph
0847 904D68    2438            mov     dptr,#_pwmL
084A F0        2439            movx    @dptr,a
084B A3        2440            inc     dptr
084C E5F0      2441            mov     a,b
084E F0        2442            movx    @dptr,a
084F           2443   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:349: pwmR = main_int4 / BOOST_SPEED;
084F 904BE8    2444            mov     dptr,#_main_int4
0852 E0        2445            movx    a,@dptr
0853 FA        2446            mov     r2,a
0854 A3        2447            inc     dptr
0855 E0        2448            movx    a,@dptr
0856 FB        2449            mov     r3,a
0857 750007    2450            mov     __divuint_PARM_2,#0x07
085A E4        2451            clr     a
085B F501      2452            mov     (__divuint_PARM_2 + 1),a
085D 8A82      2453            mov     dpl,r2
085F 8B83      2454            mov     dph,r3
0861 120100    2455            lcall   __divuint
0864 E582      2456            mov     a,dpl
0866 8583F0    2457            mov     b,dph
0869 904D28    2458            mov     dptr,#_pwmR
086C F0        2459            movx    @dptr,a
086D A3        2460            inc     dptr
086E E5F0      2461            mov     a,b
0870 F0        2462            movx    @dptr,a
0871 22        2463            ret
0872           2464   L019012?:
0872           2465   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:351: pwmL = main_int3 / DFT_SPEED;
0872 904C28    2466            mov     dptr,#_main_int3
0875 E0        2467            movx    a,@dptr
0876 FA        2468            mov     r2,a
0877 A3        2469            inc     dptr
0878 E0        2470            movx    a,@dptr
0879 FB        2471            mov     r3,a
087A 75000E    2472            mov     __divuint_PARM_2,#0x0E
087D E4        2473            clr     a
087E F501      2474            mov     (__divuint_PARM_2 + 1),a
0880 8A82      2475            mov     dpl,r2
0882 8B83      2476            mov     dph,r3
0884 120100    2477            lcall   __divuint
0887 E582      2478            mov     a,dpl
0889 8583F0    2479            mov     b,dph
088C 904D68    2480            mov     dptr,#_pwmL
088F F0        2481            movx    @dptr,a
0890 A3        2482            inc     dptr
0891 E5F0      2483            mov     a,b
0893 F0        2484            movx    @dptr,a
0894           2485   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:352: pwmR = main_int4 / DFT_SPEED;
0894 904BE8    2486            mov     dptr,#_main_int4
0897 E0        2487            movx    a,@dptr
0898 FA        2488            mov     r2,a
0899 A3        2489            inc     dptr
089A E0        2490            movx    a,@dptr
089B FB        2491            mov     r3,a
089C 75000E    2492            mov     __divuint_PARM_2,#0x0E
089F E4        2493            clr     a
08A0 F501      2494            mov     (__divuint_PARM_2 + 1),a
08A2 8A82      2495            mov     dpl,r2
08A4 8B83      2496            mov     dph,r3
08A6 120100    2497            lcall   __divuint
08A9 E582      2498            mov     a,dpl
08AB 8583F0    2499            mov     b,dph
08AE 904D28    2500            mov     dptr,#_pwmR
08B1 F0        2501            movx    @dptr,a
08B2 A3        2502            inc     dptr
08B3 E5F0      2503            mov     a,b
08B5 F0        2504            movx    @dptr,a
08B6 22        2505            ret
08B7           2506   ;------------------------------------------------------------
08B7           2507   ;Allocation info for local variables in function 'Follow_Tape'
08B7           2508   ;------------------------------------------------------------
08B7           2509   ;gnd_VM                    Allocated with name '_Follow_Tape_PARM_2'
08B7           2510   ;gnd_VR                    Allocated with name '_Follow_Tape_PARM_3'
08B7           2511   ;gnd_VL                    Allocated with name '_Follow_Tape_gnd_VL_1_117'
08B7           2512   ;sloc0                     Allocated with name '_Follow_Tape_sloc0_1_0'
08B7           2513   ;sloc1                     Allocated with name '_Follow_Tape_sloc1_1_0'
08B7           2514   ;sloc2                     Allocated with name '_Follow_Tape_sloc2_1_0'
08B7           2515   ;sloc3                     Allocated with name '_Follow_Tape_sloc3_1_0'
08B7           2516   ;sloc4                     Allocated with name '_Follow_Tape_sloc4_1_0'
08B7           2517   ;tp_VL                     Allocated with name '_Follow_Tape_tp_VL_1_118'
08B7           2518   ;tp_VR                     Allocated with name '_Follow_Tape_tp_VR_1_118'
08B7           2519   ;tp_VM                     Allocated with name '_Follow_Tape_tp_VM_1_118'
08B7           2520   ;------------------------------------------------------------
08B7           2521   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:357: void Follow_Tape(unsigned int *gnd_VL, unsigned int *gnd_VM, unsigned int *gnd_VR)
08B7           2522   ;        -----------------------------------------
08B7           2523   ;         function Follow_Tape
08B7           2524   ;        -----------------------------------------
08B7           2525   _Follow_Tape:
08B7           2526   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:360: xdata unsigned int tp_VL = *gnd_VL-TAPEOFFSET;
08B7 858288    2527            mov     _Follow_Tape_gnd_VL_1_117,dpl
08BA 858389    2528            mov     (_Follow_Tape_gnd_VL_1_117 + 1),dph
08BD 85F08A    2529            mov     (_Follow_Tape_gnd_VL_1_117 + 2),b
08C0 120100    2530            lcall   __gptrget
08C3 FD        2531            mov     r5,a
08C4 A3        2532            inc     dptr
08C5 120100    2533            lcall   __gptrget
08C8 FE        2534            mov     r6,a
08C9 ED        2535            mov     a,r5
08CA 2470      2536            add     a,#0x70
08CC FD        2537            mov     r5,a
08CD EE        2538            mov     a,r6
08CE 34FE      2539            addc    a,#0xfe
08D0 FE        2540            mov     r6,a
08D1           2541   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:361: xdata unsigned int tp_VR = *gnd_VR-TAPEOFFSET;
08D1 857828    2542            mov     _Follow_Tape_sloc1_1_0,_Follow_Tape_PARM_3
08D4 857929    2543            mov     (_Follow_Tape_sloc1_1_0 + 1),(_Follow_Tape_PARM_3 + 1)
08D7 857A2A    2544            mov     (_Follow_Tape_sloc1_1_0 + 2),(_Follow_Tape_PARM_3 + 2)
08DA 852882    2545            mov     dpl,_Follow_Tape_sloc1_1_0
08DD 852983    2546            mov     dph,(_Follow_Tape_sloc1_1_0 + 1)
08E0 852AF0    2547            mov     b,(_Follow_Tape_sloc1_1_0 + 2)
08E3 120100    2548            lcall   __gptrget
08E6 FA        2549            mov     r2,a
08E7 A3        2550            inc     dptr
08E8 120100    2551            lcall   __gptrget
08EB FB        2552            mov     r3,a
08EC EA        2553            mov     a,r2
08ED 2470      2554            add     a,#0x70
08EF FA        2555            mov     r2,a
08F0 EB        2556            mov     a,r3
08F1 34FE      2557            addc    a,#0xfe
08F3 FB        2558            mov     r3,a
08F4           2559   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:362: xdata unsigned int tp_VM = *gnd_VM-TAPEOFFSET;
08F4 85C8D8    2560            mov     _Follow_Tape_sloc0_1_0,_Follow_Tape_PARM_2
08F7 85C9D9    2561            mov     (_Follow_Tape_sloc0_1_0 + 1),(_Follow_Tape_PARM_2 + 1)
08FA 85CADA    2562            mov     (_Follow_Tape_sloc0_1_0 + 2),(_Follow_Tape_PARM_2 + 2)
08FD 85D882    2563            mov     dpl,_Follow_Tape_sloc0_1_0
0900 85D983    2564            mov     dph,(_Follow_Tape_sloc0_1_0 + 1)
0903 85DAF0    2565            mov     b,(_Follow_Tape_sloc0_1_0 + 2)
0906 120100    2566            lcall   __gptrget
0909 FC        2567            mov     r4,a
090A A3        2568            inc     dptr
090B 120100    2569            lcall   __gptrget
090E FF        2570            mov     r7,a
090F EC        2571            mov     a,r4
0910 2470      2572            add     a,#0x70
0912 FC        2573            mov     r4,a
0913 EF        2574            mov     a,r7
0914 34FE      2575            addc    a,#0xfe
0916 FF        2576            mov     r7,a
0917           2577   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:365: pwmL = BASEPWM;
0917 904D68    2578            mov     dptr,#_pwmL
091A 7419      2579            mov     a,#0x19
091C F0        2580            movx    @dptr,a
091D E4        2581            clr     a
091E A3        2582            inc     dptr
091F F0        2583            movx    @dptr,a
0920           2584   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:366: pwmR = BASEPWM;
0920 904D28    2585            mov     dptr,#_pwmR
0923 7419      2586            mov     a,#0x19
0925 F0        2587            movx    @dptr,a
0926 E4        2588            clr     a
0927 A3        2589            inc     dptr
0928 F0        2590            movx    @dptr,a
0929           2591   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:369: mot_dir(0,0);
0929 E4        2592            clr     a
092A F540      2593            mov     _mot_dir_PARM_2,a
092C F541      2594            mov     (_mot_dir_PARM_2 + 1),a
092E F582      2595            mov     dpl,a
0930 F583      2596            mov     dph,a
0932 C002      2597            push    ar2
0934 C003      2598            push    ar3
0936 C004      2599            push    ar4
0938 C005      2600            push    ar5
093A C006      2601            push    ar6
093C C007      2602            push    ar7
093E 120100    2603            lcall   _mot_dir
0941 D007      2604            pop     ar7
0943 D006      2605            pop     ar6
0945 D005      2606            pop     ar5
0947 D004      2607            pop     ar4
0949 D003      2608            pop     ar3
094B D002      2609            pop     ar2
094D           2610   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:370: dir_flag = 1;
094D D248      2611            setb    _dir_flag
094F           2612   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:371: dir_count = 0;
094F 904AA8    2613            mov     dptr,#_dir_count
0952 E4        2614            clr     a
0953 F0        2615            movx    @dptr,a
0954 A3        2616            inc     dptr
0955 F0        2617            movx    @dptr,a
0956           2618   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:373: while (1) {
0956           2619   L020058?:
0956           2620   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:374: if (Volts_at_Pin(QFP32_MUX_P1_5) * 1000 > tp_VM) {                      //if M not on tape
0956 C005      2621            push    ar5
0958 C006      2622            push    ar6
095A 75820B    2623            mov     dpl,#0x0B
095D C002      2624            push    ar2
095F C003      2625            push    ar3
0961 C004      2626            push    ar4
0963 C007      2627            push    ar7
0965 120100    2628            lcall   _Volts_at_Pin
0968 A882      2629            mov     r0,dpl
096A A983      2630            mov     r1,dph
096C ADF0      2631            mov     r5,b
096E FE        2632            mov     r6,a
096F C000      2633            push    ar0
0971 C001      2634            push    ar1
0973 C005      2635            push    ar5
0975 C006      2636            push    ar6
0977 900000    2637            mov     dptr,#0x0000
097A 75F07A    2638            mov     b,#0x7A
097D 7444      2639            mov     a,#0x44
097F 120100    2640            lcall   ___fsmul
0982 AD82      2641            mov     r5,dpl
0984 AE83      2642            mov     r6,dph
0986 A8F0      2643            mov     r0,b
0988 F9        2644            mov     r1,a
0989 E581      2645            mov     a,sp
098B 24FC      2646            add     a,#0xfc
098D F581      2647            mov     sp,a
098F D007      2648            pop     ar7
0991 D004      2649            pop     ar4
0993 8C82      2650            mov     dpl,r4
0995 8F83      2651            mov     dph,r7
0997 C004      2652            push    ar4
0999 C005      2653            push    ar5
099B C006      2654            push    ar6
099D C007      2655            push    ar7
099F C000      2656            push    ar0
09A1 C001      2657            push    ar1
09A3 120100    2658            lcall   ___uint2fs
09A6 858278    2659            mov     _Follow_Tape_sloc2_1_0,dpl
09A9 858379    2660            mov     (_Follow_Tape_sloc2_1_0 + 1),dph
09AC 85F07A    2661            mov     (_Follow_Tape_sloc2_1_0 + 2),b
09AF F57B      2662            mov     (_Follow_Tape_sloc2_1_0 + 3),a
09B1 D001      2663            pop     ar1
09B3 D000      2664            pop     ar0
09B5 D007      2665            pop     ar7
09B7 D006      2666            pop     ar6
09B9 D005      2667            pop     ar5
09BB C006      2668            push    ar6
09BD C007      2669            push    ar7
09BF C078      2670            push    _Follow_Tape_sloc2_1_0
09C1 C079      2671            push    (_Follow_Tape_sloc2_1_0 + 1)
09C3 C07A      2672            push    (_Follow_Tape_sloc2_1_0 + 2)
09C5 C07B      2673            push    (_Follow_Tape_sloc2_1_0 + 3)
09C7 8D82      2674            mov     dpl,r5
09C9 8E83      2675            mov     dph,r6
09CB 88F0      2676            mov     b,r0
09CD E9        2677            mov     a,r1
09CE 120100    2678            lcall   ___fsgt
09D1 AD82      2679            mov     r5,dpl
09D3 E581      2680            mov     a,sp
09D5 24FC      2681            add     a,#0xfc
09D7 F581      2682            mov     sp,a
09D9 D007      2683            pop     ar7
09DB D006      2684            pop     ar6
09DD D004      2685            pop     ar4
09DF D003      2686            pop     ar3
09E1 D002      2687            pop     ar2
09E3 ED        2688            mov     a,r5
09E4 D006      2689            pop     ar6
09E6 D005      2690            pop     ar5
09E8 7001      2691            jnz     L020091?
09EA 020100    2692            ljmp    L020030?
09ED           2693   L020091?:
09ED           2694   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:376: if (Volts_at_Pin(QFP32_MUX_P1_6) * 1000 < tp_VL) {              //if L on tape
09ED C004      2695            push    ar4
09EF C007      2696            push    ar7
09F1 75820C    2697            mov     dpl,#0x0C
09F4 C002      2698            push    ar2
09F6 C003      2699            push    ar3
09F8 C005      2700            push    ar5
09FA C006      2701            push    ar6
09FC 120100    2702            lcall   _Volts_at_Pin
09FF A882      2703            mov     r0,dpl
0A01 A983      2704            mov     r1,dph
0A03 ACF0      2705            mov     r4,b
0A05 FF        2706            mov     r7,a
0A06 D006      2707            pop     ar6
0A08 D005      2708            pop     ar5
0A0A C004      2709            push    ar4
0A0C C005      2710            push    ar5
0A0E C006      2711            push    ar6
0A10 C007      2712            push    ar7
0A12 C000      2713            push    ar0
0A14 C001      2714            push    ar1
0A16 C004      2715            push    ar4
0A18 C007      2716            push    ar7
0A1A 900000    2717            mov     dptr,#0x0000
0A1D 75F07A    2718            mov     b,#0x7A
0A20 7444      2719            mov     a,#0x44
0A22 120100    2720            lcall   ___fsmul
0A25 8582C8    2721            mov     _Follow_Tape_sloc3_1_0,dpl
0A28 8583C9    2722            mov     (_Follow_Tape_sloc3_1_0 + 1),dph
0A2B 85F0CA    2723            mov     (_Follow_Tape_sloc3_1_0 + 2),b
0A2E F5CB      2724            mov     (_Follow_Tape_sloc3_1_0 + 3),a
0A30 E581      2725            mov     a,sp
0A32 24FC      2726            add     a,#0xfc
0A34 F581      2727            mov     sp,a
0A36 D007      2728            pop     ar7
0A38 D006      2729            pop     ar6
0A3A D005      2730            pop     ar5
0A3C D004      2731            pop     ar4
0A3E 8D82      2732            mov     dpl,r5
0A40 8E83      2733            mov     dph,r6
0A42 C005      2734            push    ar5
0A44 C006      2735            push    ar6
0A46 120100    2736            lcall   ___uint2fs
0A49 AC82      2737            mov     r4,dpl
0A4B AF83      2738            mov     r7,dph
0A4D A8F0      2739            mov     r0,b
0A4F F9        2740            mov     r1,a
0A50 C007      2741            push    ar7
0A52 C004      2742            push    ar4
0A54 C007      2743            push    ar7
0A56 C000      2744            push    ar0
0A58 C001      2745            push    ar1
0A5A 85C882    2746            mov     dpl,_Follow_Tape_sloc3_1_0
0A5D 85C983    2747            mov     dph,(_Follow_Tape_sloc3_1_0 + 1)
0A60 85CAF0    2748            mov     b,(_Follow_Tape_sloc3_1_0 + 2)
0A63 E5CB      2749            mov     a,(_Follow_Tape_sloc3_1_0 + 3)
0A65 120100    2750            lcall   ___fslt
0A68 AC82      2751            mov     r4,dpl
0A6A E581      2752            mov     a,sp
0A6C 24FC      2753            add     a,#0xfc
0A6E F581      2754            mov     sp,a
0A70 D007      2755            pop     ar7
0A72 D006      2756            pop     ar6
0A74 D005      2757            pop     ar5
0A76 D003      2758            pop     ar3
0A78 D002      2759            pop     ar2
0A7A EC        2760            mov     a,r4
0A7B D007      2761            pop     ar7
0A7D D004      2762            pop     ar4
0A7F 6001      2763            jz      L020015?
0A81           2764   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:377: mot_dir(1,0);
0A81 E4        2765            clr     a
0A82 F540      2766            mov     _mot_dir_PARM_2,a
0A84 F541      2767            mov     (_mot_dir_PARM_2 + 1),a
0A86 900001    2768            mov     dptr,#0x0001
0A89 C002      2769            push    ar2
0A8B C003      2770            push    ar3
0A8D C004      2771            push    ar4
0A8F C005      2772            push    ar5
0A91 C006      2773            push    ar6
0A93 C007      2774            push    ar7
0A95 120100    2775            lcall   _mot_dir
0A98 D007      2776            pop     ar7
0A9A D006      2777            pop     ar6
0A9C D005      2778            pop     ar5
0A9E D004      2779            pop     ar4
0AA0 D003      2780            pop     ar3
0AA2 D002      2781            pop     ar2
0AA4           2782   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:378: pwmR = BOOSTPWM; // this main way
0AA4 904D28    2783            mov     dptr,#_pwmR
0AA7 7428      2784            mov     a,#0x28
0AA9 F0        2785            movx    @dptr,a
0AAA E4        2786            clr     a
0AAB A3        2787            inc     dptr
0AAC F0        2788            movx    @dptr,a
0AAD           2789   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:379: pwmL = BOOSTPWM;
0AAD 904D68    2790            mov     dptr,#_pwmL
0AB0 7428      2791            mov     a,#0x28
0AB2 F0        2792            movx    @dptr,a
0AB3 E4        2793            clr     a
0AB4 A3        2794            inc     dptr
0AB5 F0        2795            movx    @dptr,a
0AB6           2796   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:382: if (dir_flag == 0) {
0AB6 3048E8    2797            jnb     _dir_flag,L020093?
0AB9 020100    2798            ljmp    L020031?
0ABC           2799   L020093?:
0ABC           2800   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:383: if (dir_count < 0) dir_count = 1;
0ABC 904AA8    2801            mov     dptr,#_dir_count
0ABF E0        2802            movx    a,@dptr
0AC0 F8        2803            mov     r0,a
0AC1 A3        2804            inc     dptr
0AC2 E0        2805            movx    a,@dptr
0AC3 F9        2806            mov     r1,a
0AC4 30E768    2807            jnb     acc.7,L020002?
0AC7 904AA8    2808            mov     dptr,#_dir_count
0ACA 7401      2809            mov     a,#0x01
0ACC F0        2810            movx    @dptr,a
0ACD E4        2811            clr     a
0ACE A3        2812            inc     dptr
0ACF F0        2813            movx    @dptr,a
0AD0 8001      2814            sjmp    L020003?
0AD2           2815   L020002?:
0AD2           2816   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:384: else dir_count++;
0AD2 904AA8    2817            mov     dptr,#_dir_count
0AD5 E0        2818            movx    a,@dptr
0AD6 2401      2819            add     a,#0x01
0AD8 F0        2820            movx    @dptr,a
0AD9 A3        2821            inc     dptr
0ADA E0        2822            movx    a,@dptr
0ADB 3400      2823            addc    a,#0x00
0ADD F0        2824            movx    @dptr,a
0ADE           2825   L020003?:
0ADE           2826   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:385: dir_flag = 1;
0ADE D248      2827            setb    _dir_flag
0AE0 020100    2828            ljmp    L020031?
0AE3           2829   L020015?:
0AE3           2830   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:387: } else if (Volts_at_Pin(QFP32_MUX_P1_4) * 1000 < tp_VR) { //if R on tape
0AE3 C004      2831            push    ar4
0AE5 C007      2832            push    ar7
0AE7 75820A    2833            mov     dpl,#0x0A
0AEA C002      2834            push    ar2
0AEC C003      2835            push    ar3
0AEE C005      2836            push    ar5
0AF0 C006      2837            push    ar6
0AF2 120100    2838            lcall   _Volts_at_Pin
0AF5 A882      2839            mov     r0,dpl
0AF7 A983      2840            mov     r1,dph
0AF9 ACF0      2841            mov     r4,b
0AFB FF        2842            mov     r7,a
0AFC D006      2843            pop     ar6
0AFE D005      2844            pop     ar5
0B00 C004      2845            push    ar4
0B02 C005      2846            push    ar5
0B04 C006      2847            push    ar6
0B06 C007      2848            push    ar7
0B08 C000      2849            push    ar0
0B0A C001      2850            push    ar1
0B0C C004      2851            push    ar4
0B0E C007      2852            push    ar7
0B10 900000    2853            mov     dptr,#0x0000
0B13 75F07A    2854            mov     b,#0x7A
0B16 7444      2855            mov     a,#0x44
0B18 120100    2856            lcall   ___fsmul
0B1B 8582C8    2857            mov     _Follow_Tape_sloc3_1_0,dpl
0B1E 8583C9    2858            mov     (_Follow_Tape_sloc3_1_0 + 1),dph
0B21 85F0CA    2859            mov     (_Follow_Tape_sloc3_1_0 + 2),b
0B24 F5CB      2860            mov     (_Follow_Tape_sloc3_1_0 + 3),a
0B26 E581      2861            mov     a,sp
0B28 24FC      2862            add     a,#0xfc
0B2A F581      2863            mov     sp,a
0B2C D007      2864            pop     ar7
0B2E D006      2865            pop     ar6
0B30 D005      2866            pop     ar5
0B32 D004      2867            pop     ar4
0B34 D003      2868            pop     ar3
0B36 D002      2869            pop     ar2
0B38 8A82      2870            mov     dpl,r2
0B3A 8B83      2871            mov     dph,r3
0B3C C002      2872            push    ar2
0B3E C003      2873            push    ar3
0B40 C005      2874            push    ar5
0B42 C006      2875            push    ar6
0B44 120100    2876            lcall   ___uint2fs
0B47 AC82      2877            mov     r4,dpl
0B49 AF83      2878            mov     r7,dph
0B4B A8F0      2879            mov     r0,b
0B4D F9        2880            mov     r1,a
0B4E C007      2881            push    ar7
0B50 C004      2882            push    ar4
0B52 C007      2883            push    ar7
0B54 C000      2884            push    ar0
0B56 C001      2885            push    ar1
0B58 85C882    2886            mov     dpl,_Follow_Tape_sloc3_1_0
0B5B 85C983    2887            mov     dph,(_Follow_Tape_sloc3_1_0 + 1)
0B5E 85CAF0    2888            mov     b,(_Follow_Tape_sloc3_1_0 + 2)
0B61 E5CB      2889            mov     a,(_Follow_Tape_sloc3_1_0 + 3)
0B63 120100    2890            lcall   ___fslt
0B66 AC82      2891            mov     r4,dpl
0B68 E581      2892            mov     a,sp
0B6A 24FC      2893            add     a,#0xfc
0B6C F581      2894            mov     sp,a
0B6E D007      2895            pop     ar7
0B70 D006      2896            pop     ar6
0B72 D005      2897            pop     ar5
0B74 D003      2898            pop     ar3
0B76 D002      2899            pop     ar2
0B78 EC        2900            mov     a,r4
0B79 D007      2901            pop     ar7
0B7B D004      2902            pop     ar4
0B7D 6001      2903            jz      L020012?
0B7F           2904   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:388: mot_dir(0,1);
0B7F 754001    2905            mov     _mot_dir_PARM_2,#0x01
0B82 E4        2906            clr     a
0B83 F541      2907            mov     (_mot_dir_PARM_2 + 1),a
0B85 900000    2908            mov     dptr,#0x0000
0B88 C002      2909            push    ar2
0B8A C003      2910            push    ar3
0B8C C004      2911            push    ar4
0B8E C005      2912            push    ar5
0B90 C006      2913            push    ar6
0B92 C007      2914            push    ar7
0B94 120100    2915            lcall   _mot_dir
0B97 D007      2916            pop     ar7
0B99 D006      2917            pop     ar6
0B9B D005      2918            pop     ar5
0B9D D004      2919            pop     ar4
0B9F D003      2920            pop     ar3
0BA1 D002      2921            pop     ar2
0BA3           2922   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:389: pwmL = BOOSTPWM; // this main way
0BA3 904D68    2923            mov     dptr,#_pwmL
0BA6 7428      2924            mov     a,#0x28
0BA8 F0        2925            movx    @dptr,a
0BA9 E4        2926            clr     a
0BAA A3        2927            inc     dptr
0BAB F0        2928            movx    @dptr,a
0BAC           2929   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:390: pwmR = BOOSTPWM;        
0BAC 904D28    2930            mov     dptr,#_pwmR
0BAF 7428      2931            mov     a,#0x28
0BB1 F0        2932            movx    @dptr,a
0BB2 E4        2933            clr     a
0BB3 A3        2934            inc     dptr
0BB4 F0        2935            movx    @dptr,a
0BB5           2936   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:393: if (dir_flag == 0) {
0BB5 304828    2937            jnb     _dir_flag,L020096?
0BB8 020100    2938            ljmp    L020031?
0BBB           2939   L020096?:
0BBB           2940   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:394: if (dir_count > 0) dir_count = -1;
0BBB 904AA8    2941            mov     dptr,#_dir_count
0BBE E0        2942            movx    a,@dptr
0BBF F8        2943            mov     r0,a
0BC0 A3        2944            inc     dptr
0BC1 E0        2945            movx    a,@dptr
0BC2 F9        2946            mov     r1,a
0BC3 C3        2947            clr     c
0BC4 E4        2948            clr     a
0BC5 98        2949            subb    a,r0
0BC6 E4        2950            clr     a
0BC7 6480      2951            xrl     a,#0x80
0BC9 89F0      2952            mov     b,r1
0BCB 63F080    2953            xrl     b,#0x80
0BCE 95F0      2954            subb    a,b
0BD0 5001      2955            jnc     L020007?
0BD2 904AA8    2956            mov     dptr,#_dir_count
0BD5 74FF      2957            mov     a,#0xFF
0BD7 F0        2958            movx    @dptr,a
0BD8 A3        2959            inc     dptr
0BD9 F0        2960            movx    @dptr,a
0BDA 8001      2961            sjmp    L020008?
0BDC           2962   L020007?:
0BDC           2963   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:395: else dir_count--;
0BDC 904AA8    2964            mov     dptr,#_dir_count
0BDF E0        2965            movx    a,@dptr
0BE0 24FF      2966            add     a,#0xff
0BE2 F8        2967            mov     r0,a
0BE3 A3        2968            inc     dptr
0BE4 E0        2969            movx    a,@dptr
0BE5 34FF      2970            addc    a,#0xff
0BE7 F9        2971            mov     r1,a
0BE8 904AA8    2972            mov     dptr,#_dir_count
0BEB E8        2973            mov     a,r0
0BEC F0        2974            movx    @dptr,a
0BED A3        2975            inc     dptr
0BEE E9        2976            mov     a,r1
0BEF F0        2977            movx    @dptr,a
0BF0           2978   L020008?:
0BF0           2979   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:396: dir_flag = 1;
0BF0 D248      2980            setb    _dir_flag
0BF2 020100    2981            ljmp    L020031?
0BF5           2982   L020012?:
0BF5           2983   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:399: mot_dir(0,0);
0BF5 E4        2984            clr     a
0BF6 F540      2985            mov     _mot_dir_PARM_2,a
0BF8 F541      2986            mov     (_mot_dir_PARM_2 + 1),a
0BFA F582      2987            mov     dpl,a
0BFC F583      2988            mov     dph,a
0BFE C002      2989            push    ar2
0C00 C003      2990            push    ar3
0C02 C004      2991            push    ar4
0C04 C005      2992            push    ar5
0C06 C006      2993            push    ar6
0C08 C007      2994            push    ar7
0C0A 120100    2995            lcall   _mot_dir
0C0D D007      2996            pop     ar7
0C0F D006      2997            pop     ar6
0C11 D005      2998            pop     ar5
0C13 D004      2999            pop     ar4
0C15 D003      3000            pop     ar3
0C17 D002      3001            pop     ar2
0C19           3002   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:400: pwmL = BASEPWM;
0C19 904D68    3003            mov     dptr,#_pwmL
0C1C 7419      3004            mov     a,#0x19
0C1E F0        3005            movx    @dptr,a
0C1F E4        3006            clr     a
0C20 A3        3007            inc     dptr
0C21 F0        3008            movx    @dptr,a
0C22           3009   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:401: pwmR = BASEPWM;         
0C22 904D28    3010            mov     dptr,#_pwmR
0C25 7419      3011            mov     a,#0x19
0C27 F0        3012            movx    @dptr,a
0C28 E4        3013            clr     a
0C29 A3        3014            inc     dptr
0C2A F0        3015            movx    @dptr,a
0C2B 020100    3016            ljmp    L020031?
0C2E           3017   L020030?:
0C2E           3018   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:405: } else if ((Volts_at_Pin(QFP32_MUX_P1_6) * 1000 < tp_VL) && (Volts_at_Pin(QFP32_MUX_P1_4) * 1000 < tp_VR) && (Volts_at_Pin(QFP32_MUX_P1_5) * 1000 < tp_VM) && find_circle2_flag) {
0C2E C004      3019            push    ar4
0C30 C007      3020            push    ar7
0C32 75820C    3021            mov     dpl,#0x0C
0C35 C002      3022            push    ar2
0C37 C003      3023            push    ar3
0C39 C005      3024            push    ar5
0C3B C006      3025            push    ar6
0C3D 120100    3026            lcall   _Volts_at_Pin
0C40 A882      3027            mov     r0,dpl
0C42 A983      3028            mov     r1,dph
0C44 ACF0      3029            mov     r4,b
0C46 FF        3030            mov     r7,a
0C47 C000      3031            push    ar0
0C49 C001      3032            push    ar1
0C4B C004      3033            push    ar4
0C4D C007      3034            push    ar7
0C4F 900000    3035            mov     dptr,#0x0000
0C52 75F07A    3036            mov     b,#0x7A
0C55 7444      3037            mov     a,#0x44
0C57 120100    3038            lcall   ___fsmul
0C5A AC82      3039            mov     r4,dpl
0C5C AF83      3040            mov     r7,dph
0C5E A8F0      3041            mov     r0,b
0C60 F9        3042            mov     r1,a
0C61 E581      3043            mov     a,sp
0C63 24FC      3044            add     a,#0xfc
0C65 F581      3045            mov     sp,a
0C67 D006      3046            pop     ar6
0C69 D005      3047            pop     ar5
0C6B 8D82      3048            mov     dpl,r5
0C6D 8E83      3049            mov     dph,r6
0C6F C004      3050            push    ar4
0C71 C005      3051            push    ar5
0C73 C006      3052            push    ar6
0C75 C007      3053            push    ar7
0C77 C000      3054            push    ar0
0C79 C001      3055            push    ar1
0C7B 120100    3056            lcall   ___uint2fs
0C7E 8582C8    3057            mov     _Follow_Tape_sloc3_1_0,dpl
0C81 8583C9    3058            mov     (_Follow_Tape_sloc3_1_0 + 1),dph
0C84 85F0CA    3059            mov     (_Follow_Tape_sloc3_1_0 + 2),b
0C87 F5CB      3060            mov     (_Follow_Tape_sloc3_1_0 + 3),a
0C89 D001      3061            pop     ar1
0C8B D000      3062            pop     ar0
0C8D D007      3063            pop     ar7
0C8F D006      3064            pop     ar6
0C91 D005      3065            pop     ar5
0C93 D004      3066            pop     ar4
0C95 C005      3067            push    ar5
0C97 C006      3068            push    ar6
0C99 C007      3069            push    ar7
0C9B C0C8      3070            push    _Follow_Tape_sloc3_1_0
0C9D C0C9      3071            push    (_Follow_Tape_sloc3_1_0 + 1)
0C9F C0CA      3072            push    (_Follow_Tape_sloc3_1_0 + 2)
0CA1 C0CB      3073            push    (_Follow_Tape_sloc3_1_0 + 3)
0CA3 8C82      3074            mov     dpl,r4
0CA5 8F83      3075            mov     dph,r7
0CA7 88F0      3076            mov     b,r0
0CA9 E9        3077            mov     a,r1
0CAA 120100    3078            lcall   ___fslt
0CAD AC82      3079            mov     r4,dpl
0CAF E581      3080            mov     a,sp
0CB1 24FC      3081            add     a,#0xfc
0CB3 F581      3082            mov     sp,a
0CB5 D007      3083            pop     ar7
0CB7 D006      3084            pop     ar6
0CB9 D005      3085            pop     ar5
0CBB D003      3086            pop     ar3
0CBD D002      3087            pop     ar2
0CBF EC        3088            mov     a,r4
0CC0 D007      3089            pop     ar7
0CC2 D004      3090            pop     ar4
0CC4 7001      3091            jnz     L020098?
0CC6 020100    3092            ljmp    L020024?
0CC9           3093   L020098?:
0CC9 C004      3094            push    ar4
0CCB C007      3095            push    ar7
0CCD 75820A    3096            mov     dpl,#0x0A
0CD0 C002      3097            push    ar2
0CD2 C003      3098            push    ar3
0CD4 C005      3099            push    ar5
0CD6 C006      3100            push    ar6
0CD8 120100    3101            lcall   _Volts_at_Pin
0CDB A882      3102            mov     r0,dpl
0CDD A983      3103            mov     r1,dph
0CDF ACF0      3104            mov     r4,b
0CE1 FF        3105            mov     r7,a
0CE2 D006      3106            pop     ar6
0CE4 D005      3107            pop     ar5
0CE6 C004      3108            push    ar4
0CE8 C005      3109            push    ar5
0CEA C006      3110            push    ar6
0CEC C007      3111            push    ar7
0CEE C000      3112            push    ar0
0CF0 C001      3113            push    ar1
0CF2 C004      3114            push    ar4
0CF4 C007      3115            push    ar7
0CF6 900000    3116            mov     dptr,#0x0000
0CF9 75F07A    3117            mov     b,#0x7A
0CFC 7444      3118            mov     a,#0x44
0CFE 120100    3119            lcall   ___fsmul
0D01 858218    3120            mov     _Follow_Tape_sloc4_1_0,dpl
0D04 858319    3121            mov     (_Follow_Tape_sloc4_1_0 + 1),dph
0D07 85F01A    3122            mov     (_Follow_Tape_sloc4_1_0 + 2),b
0D0A F51B      3123            mov     (_Follow_Tape_sloc4_1_0 + 3),a
0D0C E581      3124            mov     a,sp
0D0E 24FC      3125            add     a,#0xfc
0D10 F581      3126            mov     sp,a
0D12 D007      3127            pop     ar7
0D14 D006      3128            pop     ar6
0D16 D005      3129            pop     ar5
0D18 D004      3130            pop     ar4
0D1A D003      3131            pop     ar3
0D1C D002      3132            pop     ar2
0D1E 8A82      3133            mov     dpl,r2
0D20 8B83      3134            mov     dph,r3
0D22 C002      3135            push    ar2
0D24 C003      3136            push    ar3
0D26 C005      3137            push    ar5
0D28 C006      3138            push    ar6
0D2A 120100    3139            lcall   ___uint2fs
0D2D AC82      3140            mov     r4,dpl
0D2F AF83      3141            mov     r7,dph
0D31 A8F0      3142            mov     r0,b
0D33 F9        3143            mov     r1,a
0D34 C007      3144            push    ar7
0D36 C004      3145            push    ar4
0D38 C007      3146            push    ar7
0D3A C000      3147            push    ar0
0D3C C001      3148            push    ar1
0D3E 851882    3149            mov     dpl,_Follow_Tape_sloc4_1_0
0D41 851983    3150            mov     dph,(_Follow_Tape_sloc4_1_0 + 1)
0D44 851AF0    3151            mov     b,(_Follow_Tape_sloc4_1_0 + 2)
0D47 E51B      3152            mov     a,(_Follow_Tape_sloc4_1_0 + 3)
0D49 120100    3153            lcall   ___fslt
0D4C AC82      3154            mov     r4,dpl
0D4E E581      3155            mov     a,sp
0D50 24FC      3156            add     a,#0xfc
0D52 F581      3157            mov     sp,a
0D54 D007      3158            pop     ar7
0D56 D006      3159            pop     ar6
0D58 D005      3160            pop     ar5
0D5A D003      3161            pop     ar3
0D5C D002      3162            pop     ar2
0D5E EC        3163            mov     a,r4
0D5F D007      3164            pop     ar7
0D61 D004      3165            pop     ar4
0D63 7001      3166            jnz     L020099?
0D65 020100    3167            ljmp    L020024?
0D68           3168   L020099?:
0D68 C004      3169            push    ar4
0D6A C007      3170            push    ar7
0D6C 75820B    3171            mov     dpl,#0x0B
0D6F C002      3172            push    ar2
0D71 C003      3173            push    ar3
0D73 C005      3174            push    ar5
0D75 C006      3175            push    ar6
0D77 120100    3176            lcall   _Volts_at_Pin
0D7A A882      3177            mov     r0,dpl
0D7C A983      3178            mov     r1,dph
0D7E ACF0      3179            mov     r4,b
0D80 FF        3180            mov     r7,a
0D81 C000      3181            push    ar0
0D83 C001      3182            push    ar1
0D85 C004      3183            push    ar4
0D87 C007      3184            push    ar7
0D89 900000    3185            mov     dptr,#0x0000
0D8C 75F07A    3186            mov     b,#0x7A
0D8F 7444      3187            mov     a,#0x44
0D91 120100    3188            lcall   ___fsmul
0D94 AC82      3189            mov     r4,dpl
0D96 AF83      3190            mov     r7,dph
0D98 A8F0      3191            mov     r0,b
0D9A F9        3192            mov     r1,a
0D9B E581      3193            mov     a,sp
0D9D 24FC      3194            add     a,#0xfc
0D9F F581      3195            mov     sp,a
0DA1 C007      3196            push    ar7
0DA3 C078      3197            push    _Follow_Tape_sloc2_1_0
0DA5 C079      3198            push    (_Follow_Tape_sloc2_1_0 + 1)
0DA7 C07A      3199            push    (_Follow_Tape_sloc2_1_0 + 2)
0DA9 C07B      3200            push    (_Follow_Tape_sloc2_1_0 + 3)
0DAB 8C82      3201            mov     dpl,r4
0DAD 8F83      3202            mov     dph,r7
0DAF 88F0      3203            mov     b,r0
0DB1 E9        3204            mov     a,r1
0DB2 120100    3205            lcall   ___fslt
0DB5 AC82      3206            mov     r4,dpl
0DB7 E581      3207            mov     a,sp
0DB9 24FC      3208            add     a,#0xfc
0DBB F581      3209            mov     sp,a
0DBD D007      3210            pop     ar7
0DBF D006      3211            pop     ar6
0DC1 D005      3212            pop     ar5
0DC3 D003      3213            pop     ar3
0DC5 D002      3214            pop     ar2
0DC7 EC        3215            mov     a,r4
0DC8 D007      3216            pop     ar7
0DCA D004      3217            pop     ar4
0DCC 6001      3218            jz      L020024?
0DCE           3219   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:406: find_circle2_flag = 0;
0DCE 1098A8    3220            jbc     _find_circle2_flag,L020101?
0DD1 8001      3221            sjmp    L020024?
0DD3           3222   L020101?:
0DD3           3223   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:407: find_circle1_flag = 0;
0DD3 C2E8      3224            clr     _find_circle1_flag
0DD5           3225   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:408: waitms(2000);           //move towards the middle of the circle
0DD5 9007D0    3226            mov     dptr,#0x07D0
0DD8 120100    3227            lcall   _waitms
0DDB           3228   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:409: stop();
0DDB 120100    3229            lcall   _stop
0DDE           3230   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:410: Claw_Pos(10);
0DDE 90000A    3231            mov     dptr,#0x000A
0DE1 120100    3232            lcall   _Claw_Pos
0DE4           3233   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:411: waitms(500);
0DE4 9001F4    3234            mov     dptr,#0x01F4
0DE7           3235   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:412: break;                          //we break so that the program can find the tape again (travel back to the main circle)
0DE7 020100    3236            ljmp    _waitms
0DEA           3237   L020024?:
0DEA           3238   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:414: } else if ((Volts_at_Pin(QFP32_MUX_P1_6) * 1000 < tp_VL) && (Volts_at_Pin(QFP32_MUX_P1_4) * 1000 < tp_VR) && (Volts_at_Pin(QFP32_MUX_P1_5) * 1000 < tp_VM) && find_circle1_flag) {
0DEA C004      3239            push    ar4
0DEC C007      3240            push    ar7
0DEE 75820C    3241            mov     dpl,#0x0C
0DF1 C002      3242            push    ar2
0DF3 C003      3243            push    ar3
0DF5 C005      3244            push    ar5
0DF7 C006      3245            push    ar6
0DF9 120100    3246            lcall   _Volts_at_Pin
0DFC A882      3247            mov     r0,dpl
0DFE A983      3248            mov     r1,dph
0E00 ACF0      3249            mov     r4,b
0E02 FF        3250            mov     r7,a
0E03 C000      3251            push    ar0
0E05 C001      3252            push    ar1
0E07 C004      3253            push    ar4
0E09 C007      3254            push    ar7
0E0B 900000    3255            mov     dptr,#0x0000
0E0E 75F07A    3256            mov     b,#0x7A
0E11 7444      3257            mov     a,#0x44
0E13 120100    3258            lcall   ___fsmul
0E16 AC82      3259            mov     r4,dpl
0E18 AF83      3260            mov     r7,dph
0E1A A8F0      3261            mov     r0,b
0E1C F9        3262            mov     r1,a
0E1D E581      3263            mov     a,sp
0E1F 24FC      3264            add     a,#0xfc
0E21 F581      3265            mov     sp,a
0E23 C007      3266            push    ar7
0E25 C0C8      3267            push    _Follow_Tape_sloc3_1_0
0E27 C0C9      3268            push    (_Follow_Tape_sloc3_1_0 + 1)
0E29 C0CA      3269            push    (_Follow_Tape_sloc3_1_0 + 2)
0E2B C0CB      3270            push    (_Follow_Tape_sloc3_1_0 + 3)
0E2D 8C82      3271            mov     dpl,r4
0E2F 8F83      3272            mov     dph,r7
0E31 88F0      3273            mov     b,r0
0E33 E9        3274            mov     a,r1
0E34 120100    3275            lcall   ___fslt
0E37 AC82      3276            mov     r4,dpl
0E39 E581      3277            mov     a,sp
0E3B 24FC      3278            add     a,#0xfc
0E3D F581      3279            mov     sp,a
0E3F D007      3280            pop     ar7
0E41 D006      3281            pop     ar6
0E43 D005      3282            pop     ar5
0E45 D003      3283            pop     ar3
0E47 D002      3284            pop     ar2
0E49 EC        3285            mov     a,r4
0E4A D007      3286            pop     ar7
0E4C D004      3287            pop     ar4
0E4E 7001      3288            jnz     L020102?
0E50 020100    3289            ljmp    L020018?
0E53           3290   L020102?:
0E53 C004      3291            push    ar4
0E55 C007      3292            push    ar7
0E57 75820A    3293            mov     dpl,#0x0A
0E5A C002      3294            push    ar2
0E5C C003      3295            push    ar3
0E5E C005      3296            push    ar5
0E60 C006      3297            push    ar6
0E62 120100    3298            lcall   _Volts_at_Pin
0E65 A882      3299            mov     r0,dpl
0E67 A983      3300            mov     r1,dph
0E69 ACF0      3301            mov     r4,b
0E6B FF        3302            mov     r7,a
0E6C D006      3303            pop     ar6
0E6E D005      3304            pop     ar5
0E70 C004      3305            push    ar4
0E72 C005      3306            push    ar5
0E74 C006      3307            push    ar6
0E76 C007      3308            push    ar7
0E78 C000      3309            push    ar0
0E7A C001      3310            push    ar1
0E7C C004      3311            push    ar4
0E7E C007      3312            push    ar7
0E80 900000    3313            mov     dptr,#0x0000
0E83 75F07A    3314            mov     b,#0x7A
0E86 7444      3315            mov     a,#0x44
0E88 120100    3316            lcall   ___fsmul
0E8B 858218    3317            mov     _Follow_Tape_sloc4_1_0,dpl
0E8E 858319    3318            mov     (_Follow_Tape_sloc4_1_0 + 1),dph
0E91 85F01A    3319            mov     (_Follow_Tape_sloc4_1_0 + 2),b
0E94 F51B      3320            mov     (_Follow_Tape_sloc4_1_0 + 3),a
0E96 E581      3321            mov     a,sp
0E98 24FC      3322            add     a,#0xfc
0E9A F581      3323            mov     sp,a
0E9C D007      3324            pop     ar7
0E9E D006      3325            pop     ar6
0EA0 D005      3326            pop     ar5
0EA2 D004      3327            pop     ar4
0EA4 D003      3328            pop     ar3
0EA6 D002      3329            pop     ar2
0EA8 8A82      3330            mov     dpl,r2
0EAA 8B83      3331            mov     dph,r3
0EAC C002      3332            push    ar2
0EAE C003      3333            push    ar3
0EB0 C005      3334            push    ar5
0EB2 C006      3335            push    ar6
0EB4 120100    3336            lcall   ___uint2fs
0EB7 AC82      3337            mov     r4,dpl
0EB9 AF83      3338            mov     r7,dph
0EBB A8F0      3339            mov     r0,b
0EBD F9        3340            mov     r1,a
0EBE C007      3341            push    ar7
0EC0 C004      3342            push    ar4
0EC2 C007      3343            push    ar7
0EC4 C000      3344            push    ar0
0EC6 C001      3345            push    ar1
0EC8 851882    3346            mov     dpl,_Follow_Tape_sloc4_1_0
0ECB 851983    3347            mov     dph,(_Follow_Tape_sloc4_1_0 + 1)
0ECE 851AF0    3348            mov     b,(_Follow_Tape_sloc4_1_0 + 2)
0ED1 E51B      3349            mov     a,(_Follow_Tape_sloc4_1_0 + 3)
0ED3 120100    3350            lcall   ___fslt
0ED6 AC82      3351            mov     r4,dpl
0ED8 E581      3352            mov     a,sp
0EDA 24FC      3353            add     a,#0xfc
0EDC F581      3354            mov     sp,a
0EDE D007      3355            pop     ar7
0EE0 D006      3356            pop     ar6
0EE2 D005      3357            pop     ar5
0EE4 D003      3358            pop     ar3
0EE6 D002      3359            pop     ar2
0EE8 EC        3360            mov     a,r4
0EE9 D007      3361            pop     ar7
0EEB D004      3362            pop     ar4
0EED 6001      3363            jz      L020018?
0EEF C004      3364            push    ar4
0EF1 C007      3365            push    ar7
0EF3 75820B    3366            mov     dpl,#0x0B
0EF6 C002      3367            push    ar2
0EF8 C003      3368            push    ar3
0EFA C005      3369            push    ar5
0EFC C006      3370            push    ar6
0EFE 120100    3371            lcall   _Volts_at_Pin
0F01 A882      3372            mov     r0,dpl
0F03 A983      3373            mov     r1,dph
0F05 ACF0      3374            mov     r4,b
0F07 FF        3375            mov     r7,a
0F08 C000      3376            push    ar0
0F0A C001      3377            push    ar1
0F0C C004      3378            push    ar4
0F0E C007      3379            push    ar7
0F10 900000    3380            mov     dptr,#0x0000
0F13 75F07A    3381            mov     b,#0x7A
0F16 7444      3382            mov     a,#0x44
0F18 120100    3383            lcall   ___fsmul
0F1B AC82      3384            mov     r4,dpl
0F1D AF83      3385            mov     r7,dph
0F1F A8F0      3386            mov     r0,b
0F21 F9        3387            mov     r1,a
0F22 E581      3388            mov     a,sp
0F24 24FC      3389            add     a,#0xfc
0F26 F581      3390            mov     sp,a
0F28 C007      3391            push    ar7
0F2A C078      3392            push    _Follow_Tape_sloc2_1_0
0F2C C079      3393            push    (_Follow_Tape_sloc2_1_0 + 1)
0F2E C07A      3394            push    (_Follow_Tape_sloc2_1_0 + 2)
0F30 C07B      3395            push    (_Follow_Tape_sloc2_1_0 + 3)
0F32 8C82      3396            mov     dpl,r4
0F34 8F83      3397            mov     dph,r7
0F36 88F0      3398            mov     b,r0
0F38 E9        3399            mov     a,r1
0F39 120100    3400            lcall   ___fslt
0F3C AC82      3401            mov     r4,dpl
0F3E E581      3402            mov     a,sp
0F40 24FC      3403            add     a,#0xfc
0F42 F581      3404            mov     sp,a
0F44 D007      3405            pop     ar7
0F46 D006      3406            pop     ar6
0F48 D005      3407            pop     ar5
0F4A D003      3408            pop     ar3
0F4C D002      3409            pop     ar2
0F4E EC        3410            mov     a,r4
0F4F D007      3411            pop     ar7
0F51 D004      3412            pop     ar4
0F53 6001      3413            jz      L020018?
0F55           3414   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:415: find_circle1_flag = 0;
0F55 10E868    3415            jbc     _find_circle1_flag,L020105?
0F58 8001      3416            sjmp    L020018?
0F5A           3417   L020105?:
0F5A           3418   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:416: find_circle2_flag = 0;
0F5A C298      3419            clr     _find_circle2_flag
0F5C           3420   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:418: break;          
0F5C 22        3421            ret
0F5D           3422   L020018?:
0F5D           3423   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:420: mot_dir(0,0);
0F5D E4        3424            clr     a
0F5E F540      3425            mov     _mot_dir_PARM_2,a
0F60 F541      3426            mov     (_mot_dir_PARM_2 + 1),a
0F62 F582      3427            mov     dpl,a
0F64 F583      3428            mov     dph,a
0F66 C002      3429            push    ar2
0F68 C003      3430            push    ar3
0F6A C004      3431            push    ar4
0F6C C005      3432            push    ar5
0F6E C006      3433            push    ar6
0F70 C007      3434            push    ar7
0F72 120100    3435            lcall   _mot_dir
0F75 D007      3436            pop     ar7
0F77 D006      3437            pop     ar6
0F79 D005      3438            pop     ar5
0F7B D004      3439            pop     ar4
0F7D D003      3440            pop     ar3
0F7F D002      3441            pop     ar2
0F81           3442   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:421: pwmL = BASEPWM;
0F81 904D68    3443            mov     dptr,#_pwmL
0F84 7419      3444            mov     a,#0x19
0F86 F0        3445            movx    @dptr,a
0F87 E4        3446            clr     a
0F88 A3        3447            inc     dptr
0F89 F0        3448            movx    @dptr,a
0F8A           3449   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:422: pwmR = BASEPWM;         
0F8A 904D28    3450            mov     dptr,#_pwmR
0F8D 7419      3451            mov     a,#0x19
0F8F F0        3452            movx    @dptr,a
0F90 E4        3453            clr     a
0F91 A3        3454            inc     dptr
0F92 F0        3455            movx    @dptr,a
0F93           3456   L020031?:
0F93           3457   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:426: if (dir_count >= 7) dir =1;      //ccw
0F93 904AA8    3458            mov     dptr,#_dir_count
0F96 E0        3459            movx    a,@dptr
0F97 F8        3460            mov     r0,a
0F98 A3        3461            inc     dptr
0F99 E0        3462            movx    a,@dptr
0F9A F9        3463            mov     r1,a
0F9B C3        3464            clr     c
0F9C E8        3465            mov     a,r0
0F9D 9407      3466            subb    a,#0x07
0F9F E9        3467            mov     a,r1
0FA0 6480      3468            xrl     a,#0x80
0FA2 9480      3469            subb    a,#0x80
0FA4 4001      3470            jc      L020033?
0FA6 D278      3471            setb    _dir
0FA8           3472   L020033?:
0FA8           3473   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:427: if (dir_count <= -7) dir =0; //cw
0FA8 904AA8    3474            mov     dptr,#_dir_count
0FAB E0        3475            movx    a,@dptr
0FAC F8        3476            mov     r0,a
0FAD A3        3477            inc     dptr
0FAE E0        3478            movx    a,@dptr
0FAF F9        3479            mov     r1,a
0FB0 C3        3480            clr     c
0FB1 74F9      3481            mov     a,#0xF9
0FB3 98        3482            subb    a,r0
0FB4 747F      3483            mov     a,#(0xFF ^ 0x80)
0FB6 89F0      3484            mov     b,r1
0FB8 63F080    3485            xrl     b,#0x80
0FBB 95F0      3486            subb    a,b
0FBD 4001      3487            jc      L020035?
0FBF C278      3488            clr     _dir
0FC1           3489   L020035?:
0FC1           3490   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:430: if (find_bridge_flag == 1) {
0FC1 203828    3491            jb      _find_bridge_flag,L020108?
0FC4 020100    3492            ljmp    L020055?
0FC7           3493   L020108?:
0FC7           3494   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:431: if (dir && (Volts_at_Pin(QFP32_MUX_P1_4) * 1000 < tp_VR) && (Volts_at_Pin(QFP32_MUX_P1_5) * 1000 < tp_VM)) {
0FC7 2078A8    3495            jb      _dir,L020109?
0FCA 020100    3496            ljmp    L020040?
0FCD           3497   L020109?:
0FCD C004      3498            push    ar4
0FCF C007      3499            push    ar7
0FD1 75820A    3500            mov     dpl,#0x0A
0FD4 C002      3501            push    ar2
0FD6 C003      3502            push    ar3
0FD8 C005      3503            push    ar5
0FDA C006      3504            push    ar6
0FDC 120100    3505            lcall   _Volts_at_Pin
0FDF A882      3506            mov     r0,dpl
0FE1 A983      3507            mov     r1,dph
0FE3 ACF0      3508            mov     r4,b
0FE5 FF        3509            mov     r7,a
0FE6 D006      3510            pop     ar6
0FE8 D005      3511            pop     ar5
0FEA C004      3512            push    ar4
0FEC C005      3513            push    ar5
0FEE C006      3514            push    ar6
0FF0 C007      3515            push    ar7
0FF2 C000      3516            push    ar0
0FF4 C001      3517            push    ar1
0FF6 C004      3518            push    ar4
0FF8 C007      3519            push    ar7
0FFA 900000    3520            mov     dptr,#0x0000
0FFD 75F07A    3521            mov     b,#0x7A
1000 7444      3522            mov     a,#0x44
1002 120100    3523            lcall   ___fsmul
1005 858218    3524            mov     _Follow_Tape_sloc4_1_0,dpl
1008 858319    3525            mov     (_Follow_Tape_sloc4_1_0 + 1),dph
100B 85F01A    3526            mov     (_Follow_Tape_sloc4_1_0 + 2),b
100E F51B      3527            mov     (_Follow_Tape_sloc4_1_0 + 3),a
1010 E581      3528            mov     a,sp
1012 24FC      3529            add     a,#0xfc
1014 F581      3530            mov     sp,a
1016 D007      3531            pop     ar7
1018 D006      3532            pop     ar6
101A D005      3533            pop     ar5
101C D004      3534            pop     ar4
101E D003      3535            pop     ar3
1020 D002      3536            pop     ar2
1022 8A82      3537            mov     dpl,r2
1024 8B83      3538            mov     dph,r3
1026 C002      3539            push    ar2
1028 C003      3540            push    ar3
102A C005      3541            push    ar5
102C C006      3542            push    ar6
102E 120100    3543            lcall   ___uint2fs
1031 AC82      3544            mov     r4,dpl
1033 AF83      3545            mov     r7,dph
1035 A8F0      3546            mov     r0,b
1037 F9        3547            mov     r1,a
1038 C007      3548            push    ar7
103A C004      3549            push    ar4
103C C007      3550            push    ar7
103E C000      3551            push    ar0
1040 C001      3552            push    ar1
1042 851882    3553            mov     dpl,_Follow_Tape_sloc4_1_0
1045 851983    3554            mov     dph,(_Follow_Tape_sloc4_1_0 + 1)
1048 851AF0    3555            mov     b,(_Follow_Tape_sloc4_1_0 + 2)
104B E51B      3556            mov     a,(_Follow_Tape_sloc4_1_0 + 3)
104D 120100    3557            lcall   ___fslt
1050 AC82      3558            mov     r4,dpl
1052 E581      3559            mov     a,sp
1054 24FC      3560            add     a,#0xfc
1056 F581      3561            mov     sp,a
1058 D007      3562            pop     ar7
105A D006      3563            pop     ar6
105C D005      3564            pop     ar5
105E D003      3565            pop     ar3
1060 D002      3566            pop     ar2
1062 EC        3567            mov     a,r4
1063 D007      3568            pop     ar7
1065 D004      3569            pop     ar4
1067 7001      3570            jnz     L020110?
1069 020100    3571            ljmp    L020040?
106C           3572   L020110?:
106C C004      3573            push    ar4
106E C007      3574            push    ar7
1070 75820B    3575            mov     dpl,#0x0B
1073 C002      3576            push    ar2
1075 C003      3577            push    ar3
1077 C005      3578            push    ar5
1079 C006      3579            push    ar6
107B 120100    3580            lcall   _Volts_at_Pin
107E A882      3581            mov     r0,dpl
1080 A983      3582            mov     r1,dph
1082 ACF0      3583            mov     r4,b
1084 FF        3584            mov     r7,a
1085 C000      3585            push    ar0
1087 C001      3586            push    ar1
1089 C004      3587            push    ar4
108B C007      3588            push    ar7
108D 900000    3589            mov     dptr,#0x0000
1090 75F07A    3590            mov     b,#0x7A
1093 7444      3591            mov     a,#0x44
1095 120100    3592            lcall   ___fsmul
1098 AC82      3593            mov     r4,dpl
109A AF83      3594            mov     r7,dph
109C A8F0      3595            mov     r0,b
109E F9        3596            mov     r1,a
109F E581      3597            mov     a,sp
10A1 24FC      3598            add     a,#0xfc
10A3 F581      3599            mov     sp,a
10A5 C007      3600            push    ar7
10A7 C078      3601            push    _Follow_Tape_sloc2_1_0
10A9 C079      3602            push    (_Follow_Tape_sloc2_1_0 + 1)
10AB C07A      3603            push    (_Follow_Tape_sloc2_1_0 + 2)
10AD C07B      3604            push    (_Follow_Tape_sloc2_1_0 + 3)
10AF 8C82      3605            mov     dpl,r4
10B1 8F83      3606            mov     dph,r7
10B3 88F0      3607            mov     b,r0
10B5 E9        3608            mov     a,r1
10B6 120100    3609            lcall   ___fslt
10B9 AC82      3610            mov     r4,dpl
10BB E581      3611            mov     a,sp
10BD 24FC      3612            add     a,#0xfc
10BF F581      3613            mov     sp,a
10C1 D007      3614            pop     ar7
10C3 D006      3615            pop     ar6
10C5 D005      3616            pop     ar5
10C7 D003      3617            pop     ar3
10C9 D002      3618            pop     ar2
10CB EC        3619            mov     a,r4
10CC D007      3620            pop     ar7
10CE D004      3621            pop     ar4
10D0 6001      3622            jz      L020040?
10D2           3623   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:432: find_bridge_flag = 0;
10D2 C238      3624            clr     _find_bridge_flag
10D4           3625   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:433: Bridge_Rotate(gnd_VL,gnd_VM,gnd_VR);    //rotate on to the bridge
10D4 85D898    3626            mov     _Bridge_Rotate_PARM_2,_Follow_Tape_sloc0_1_0
10D7 85D999    3627            mov     (_Bridge_Rotate_PARM_2 + 1),(_Follow_Tape_sloc0_1_0 + 1)
10DA 85DA9A    3628            mov     (_Bridge_Rotate_PARM_2 + 2),(_Follow_Tape_sloc0_1_0 + 2)
10DD 852848    3629            mov     _Bridge_Rotate_PARM_3,_Follow_Tape_sloc1_1_0
10E0 852949    3630            mov     (_Bridge_Rotate_PARM_3 + 1),(_Follow_Tape_sloc1_1_0 + 1)
10E3 852A4A    3631            mov     (_Bridge_Rotate_PARM_3 + 2),(_Follow_Tape_sloc1_1_0 + 2)
10E6 858882    3632            mov     dpl,_Follow_Tape_gnd_VL_1_117
10E9 858983    3633            mov     dph,(_Follow_Tape_gnd_VL_1_117 + 1)
10EC 858AF0    3634            mov     b,(_Follow_Tape_gnd_VL_1_117 + 2)
10EF C002      3635            push    ar2
10F1 C003      3636            push    ar3
10F3 C004      3637            push    ar4
10F5 C005      3638            push    ar5
10F7 C006      3639            push    ar6
10F9 C007      3640            push    ar7
10FB 120100    3641            lcall   _Bridge_Rotate
10FE D007      3642            pop     ar7
1100 D006      3643            pop     ar6
1102 D005      3644            pop     ar5
1104 D004      3645            pop     ar4
1106 D003      3646            pop     ar3
1108 D002      3647            pop     ar2
110A           3648   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:436: if (circ2) find_circle2_flag = 1;       
110A 30B868    3649            jnb     _circ2,L020037?
110D D298      3650            setb    _find_circle2_flag
110F 8001      3651            sjmp    L020040?
1111           3652   L020037?:
1111           3653   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:437: else find_circle1_flag = 1;
1111 D2E8      3654            setb    _find_circle1_flag
1113           3655   L020040?:
1113           3656   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:440: if (!dir && (Volts_at_Pin(QFP32_MUX_P1_6) * 1000 < tp_VL) && (Volts_at_Pin(QFP32_MUX_P1_5) * 1000 < tp_VM)) {
1113 3078A8    3657            jnb     _dir,L020113?
1116 020100    3658            ljmp    L020058?
1119           3659   L020113?:
1119 C004      3660            push    ar4
111B C007      3661            push    ar7
111D 75820C    3662            mov     dpl,#0x0C
1120 C002      3663            push    ar2
1122 C003      3664            push    ar3
1124 C005      3665            push    ar5
1126 C006      3666            push    ar6
1128 120100    3667            lcall   _Volts_at_Pin
112B A882      3668            mov     r0,dpl
112D A983      3669            mov     r1,dph
112F ACF0      3670            mov     r4,b
1131 FF        3671            mov     r7,a
1132 D006      3672            pop     ar6
1134 D005      3673            pop     ar5
1136 C004      3674            push    ar4
1138 C005      3675            push    ar5
113A C006      3676            push    ar6
113C C007      3677            push    ar7
113E C000      3678            push    ar0
1140 C001      3679            push    ar1
1142 C004      3680            push    ar4
1144 C007      3681            push    ar7
1146 900000    3682            mov     dptr,#0x0000
1149 75F07A    3683            mov     b,#0x7A
114C 7444      3684            mov     a,#0x44
114E 120100    3685            lcall   ___fsmul
1151 858218    3686            mov     _Follow_Tape_sloc4_1_0,dpl
1154 858319    3687            mov     (_Follow_Tape_sloc4_1_0 + 1),dph
1157 85F01A    3688            mov     (_Follow_Tape_sloc4_1_0 + 2),b
115A F51B      3689            mov     (_Follow_Tape_sloc4_1_0 + 3),a
115C E581      3690            mov     a,sp
115E 24FC      3691            add     a,#0xfc
1160 F581      3692            mov     sp,a
1162 D007      3693            pop     ar7
1164 D006      3694            pop     ar6
1166 D005      3695            pop     ar5
1168 D004      3696            pop     ar4
116A 8D82      3697            mov     dpl,r5
116C 8E83      3698            mov     dph,r6
116E C005      3699            push    ar5
1170 C006      3700            push    ar6
1172 120100    3701            lcall   ___uint2fs
1175 AC82      3702            mov     r4,dpl
1177 AF83      3703            mov     r7,dph
1179 A8F0      3704            mov     r0,b
117B F9        3705            mov     r1,a
117C C007      3706            push    ar7
117E C004      3707            push    ar4
1180 C007      3708            push    ar7
1182 C000      3709            push    ar0
1184 C001      3710            push    ar1
1186 851882    3711            mov     dpl,_Follow_Tape_sloc4_1_0
1189 851983    3712            mov     dph,(_Follow_Tape_sloc4_1_0 + 1)
118C 851AF0    3713            mov     b,(_Follow_Tape_sloc4_1_0 + 2)
118F E51B      3714            mov     a,(_Follow_Tape_sloc4_1_0 + 3)
1191 120100    3715            lcall   ___fslt
1194 AC82      3716            mov     r4,dpl
1196 E581      3717            mov     a,sp
1198 24FC      3718            add     a,#0xfc
119A F581      3719            mov     sp,a
119C D007      3720            pop     ar7
119E D006      3721            pop     ar6
11A0 D005      3722            pop     ar5
11A2 D003      3723            pop     ar3
11A4 D002      3724            pop     ar2
11A6 EC        3725            mov     a,r4
11A7 D007      3726            pop     ar7
11A9 D004      3727            pop     ar4
11AB 7001      3728            jnz     L020114?
11AD 020100    3729            ljmp    L020058?
11B0           3730   L020114?:
11B0 C004      3731            push    ar4
11B2 C007      3732            push    ar7
11B4 75820B    3733            mov     dpl,#0x0B
11B7 C002      3734            push    ar2
11B9 C003      3735            push    ar3
11BB C005      3736            push    ar5
11BD C006      3737            push    ar6
11BF 120100    3738            lcall   _Volts_at_Pin
11C2 A882      3739            mov     r0,dpl
11C4 A983      3740            mov     r1,dph
11C6 ACF0      3741            mov     r4,b
11C8 FF        3742            mov     r7,a
11C9 C000      3743            push    ar0
11CB C001      3744            push    ar1
11CD C004      3745            push    ar4
11CF C007      3746            push    ar7
11D1 900000    3747            mov     dptr,#0x0000
11D4 75F07A    3748            mov     b,#0x7A
11D7 7444      3749            mov     a,#0x44
11D9 120100    3750            lcall   ___fsmul
11DC AC82      3751            mov     r4,dpl
11DE AF83      3752            mov     r7,dph
11E0 A8F0      3753            mov     r0,b
11E2 F9        3754            mov     r1,a
11E3 E581      3755            mov     a,sp
11E5 24FC      3756            add     a,#0xfc
11E7 F581      3757            mov     sp,a
11E9 C007      3758            push    ar7
11EB C078      3759            push    _Follow_Tape_sloc2_1_0
11ED C079      3760            push    (_Follow_Tape_sloc2_1_0 + 1)
11EF C07A      3761            push    (_Follow_Tape_sloc2_1_0 + 2)
11F1 C07B      3762            push    (_Follow_Tape_sloc2_1_0 + 3)
11F3 8C82      3763            mov     dpl,r4
11F5 8F83      3764            mov     dph,r7
11F7 88F0      3765            mov     b,r0
11F9 E9        3766            mov     a,r1
11FA 120100    3767            lcall   ___fslt
11FD AC82      3768            mov     r4,dpl
11FF E581      3769            mov     a,sp
1201 24FC      3770            add     a,#0xfc
1203 F581      3771            mov     sp,a
1205 D007      3772            pop     ar7
1207 D006      3773            pop     ar6
1209 D005      3774            pop     ar5
120B D003      3775            pop     ar3
120D D002      3776            pop     ar2
120F EC        3777            mov     a,r4
1210 D007      3778            pop     ar7
1212 D004      3779            pop     ar4
1214 7001      3780            jnz     L020115?
1216 020100    3781            ljmp    L020058?
1219           3782   L020115?:
1219           3783   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:441: find_bridge_flag = 0;
1219 C238      3784            clr     _find_bridge_flag
121B           3785   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:442: Bridge_Rotate(gnd_VL,gnd_VM,gnd_VR);    //rotate on to the bridge
121B 85D898    3786            mov     _Bridge_Rotate_PARM_2,_Follow_Tape_sloc0_1_0
121E 85D999    3787            mov     (_Bridge_Rotate_PARM_2 + 1),(_Follow_Tape_sloc0_1_0 + 1)
1221 85DA9A    3788            mov     (_Bridge_Rotate_PARM_2 + 2),(_Follow_Tape_sloc0_1_0 + 2)
1224 852848    3789            mov     _Bridge_Rotate_PARM_3,_Follow_Tape_sloc1_1_0
1227 852949    3790            mov     (_Bridge_Rotate_PARM_3 + 1),(_Follow_Tape_sloc1_1_0 + 1)
122A 852A4A    3791            mov     (_Bridge_Rotate_PARM_3 + 2),(_Follow_Tape_sloc1_1_0 + 2)
122D 858882    3792            mov     dpl,_Follow_Tape_gnd_VL_1_117
1230 858983    3793            mov     dph,(_Follow_Tape_gnd_VL_1_117 + 1)
1233 858AF0    3794            mov     b,(_Follow_Tape_gnd_VL_1_117 + 2)
1236 C002      3795            push    ar2
1238 C003      3796            push    ar3
123A C004      3797            push    ar4
123C C005      3798            push    ar5
123E C006      3799            push    ar6
1240 C007      3800            push    ar7
1242 120100    3801            lcall   _Bridge_Rotate
1245 D007      3802            pop     ar7
1247 D006      3803            pop     ar6
1249 D005      3804            pop     ar5
124B D004      3805            pop     ar4
124D D003      3806            pop     ar3
124F D002      3807            pop     ar2
1251           3808   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:445: if (circ2) find_circle2_flag = 1;
1251 30B868    3809            jnb     _circ2,L020044?
1254 D298      3810            setb    _find_circle2_flag
1256 020100    3811            ljmp    L020058?
1259           3812   L020044?:
1259           3813   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:446: else find_circle1_flag = 1;
1259 D2E8      3814            setb    _find_circle1_flag
125B 020100    3815            ljmp    L020058?
125E           3816   L020055?:
125E           3817   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:449: } else if ((dir_count >= 15) || (dir_count <= -15) && break_when_dir_found) {
125E 904AA8    3818            mov     dptr,#_dir_count
1261 E0        3819            movx    a,@dptr
1262 F8        3820            mov     r0,a
1263 A3        3821            inc     dptr
1264 E0        3822            movx    a,@dptr
1265 F9        3823            mov     r1,a
1266 C3        3824            clr     c
1267 E8        3825            mov     a,r0
1268 940F      3826            subb    a,#0x0F
126A E9        3827            mov     a,r1
126B 6480      3828            xrl     a,#0x80
126D 9480      3829            subb    a,#0x80
126F 5001      3830            jnc     L020050?
1271 904AA8    3831            mov     dptr,#_dir_count
1274 E0        3832            movx    a,@dptr
1275 F8        3833            mov     r0,a
1276 A3        3834            inc     dptr
1277 E0        3835            movx    a,@dptr
1278 F9        3836            mov     r1,a
1279 C3        3837            clr     c
127A 74F1      3838            mov     a,#0xF1
127C 98        3839            subb    a,r0
127D 747F      3840            mov     a,#(0xFF ^ 0x80)
127F 89F0      3841            mov     b,r1
1281 63F080    3842            xrl     b,#0x80
1284 95F0      3843            subb    a,b
1286 5001      3844            jnc     L020118?
1288 020100    3845            ljmp    L020058?
128B           3846   L020118?:
128B 200828    3847            jb      _break_when_dir_found,L020119?
128E 020100    3848            ljmp    L020058?
1291           3849   L020119?:
1291           3850   L020050?:
1291           3851   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:450: break_when_dir_found = 0;       //reset the break when dir found flag
1291 C208      3852            clr     _break_when_dir_found
1293           3853   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:451: break;  //if the find_bridge_flag is not set, and the direction has been found, break (to find object in circle)
1293 22        3854            ret
1294           3855   ;------------------------------------------------------------
1294           3856   ;Allocation info for local variables in function 'Track_Object'
1294           3857   ;------------------------------------------------------------
1294           3858   ;IRVR                      Allocated with name '_Track_Object_IRVR_1_134'
1294           3859   ;IRVL                      Allocated with name '_Track_Object_IRVL_1_134'
1294           3860   ;------------------------------------------------------------
1294           3861   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:456: void Track_Object(void)
1294           3862   ;        -----------------------------------------
1294           3863   ;         function Track_Object
1294           3864   ;        -----------------------------------------
1294           3865   _Track_Object:
1294           3866   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:460: bit flag = 0;
1294 C298      3867            clr     _Track_Object_flag_1_134
1296           3868   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:461: mot_dir(0,0);
1296 E4        3869            clr     a
1297 F540      3870            mov     _mot_dir_PARM_2,a
1299 F541      3871            mov     (_mot_dir_PARM_2 + 1),a
129B F582      3872            mov     dpl,a
129D F583      3873            mov     dph,a
129F 120100    3874            lcall   _mot_dir
12A2           3875   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:463: while (!flag) {
12A2           3876   L021021?:
12A2 3098A8    3877            jnb     _Track_Object_flag_1_134,L021038?
12A5 020100    3878            ljmp    L021023?
12A8           3879   L021038?:
12A8           3880   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:464: IRVR = Volts_at_Pin(QFP32_MUX_P1_2) * 1000;
12A8 758208    3881            mov     dpl,#0x08
12AB 120100    3882            lcall   _Volts_at_Pin
12AE AA82      3883            mov     r2,dpl
12B0 AB83      3884            mov     r3,dph
12B2 ACF0      3885            mov     r4,b
12B4 FD        3886            mov     r5,a
12B5 C002      3887            push    ar2
12B7 C003      3888            push    ar3
12B9 C004      3889            push    ar4
12BB C005      3890            push    ar5
12BD 900000    3891            mov     dptr,#0x0000
12C0 75F07A    3892            mov     b,#0x7A
12C3 7444      3893            mov     a,#0x44
12C5 120100    3894            lcall   ___fsmul
12C8 AA82      3895            mov     r2,dpl
12CA AB83      3896            mov     r3,dph
12CC ACF0      3897            mov     r4,b
12CE FD        3898            mov     r5,a
12CF E581      3899            mov     a,sp
12D1 24FC      3900            add     a,#0xfc
12D3 F581      3901            mov     sp,a
12D5 8A82      3902            mov     dpl,r2
12D7 8B83      3903            mov     dph,r3
12D9 8CF0      3904            mov     b,r4
12DB ED        3905            mov     a,r5
12DC 120100    3906            lcall   ___fs2uint
12DF AA82      3907            mov     r2,dpl
12E1 AB83      3908            mov     r3,dph
12E3           3909   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:465: IRVL = Volts_at_Pin(QFP32_MUX_P1_3) * 1000;
12E3 758209    3910            mov     dpl,#0x09
12E6 C002      3911            push    ar2
12E8 C003      3912            push    ar3
12EA 120100    3913            lcall   _Volts_at_Pin
12ED AC82      3914            mov     r4,dpl
12EF AD83      3915            mov     r5,dph
12F1 AEF0      3916            mov     r6,b
12F3 FF        3917            mov     r7,a
12F4 C004      3918            push    ar4
12F6 C005      3919            push    ar5
12F8 C006      3920            push    ar6
12FA C007      3921            push    ar7
12FC 900000    3922            mov     dptr,#0x0000
12FF 75F07A    3923            mov     b,#0x7A
1302 7444      3924            mov     a,#0x44
1304 120100    3925            lcall   ___fsmul
1307 AC82      3926            mov     r4,dpl
1309 AD83      3927            mov     r5,dph
130B AEF0      3928            mov     r6,b
130D FF        3929            mov     r7,a
130E E581      3930            mov     a,sp
1310 24FC      3931            add     a,#0xfc
1312 F581      3932            mov     sp,a
1314 8C82      3933            mov     dpl,r4
1316 8D83      3934            mov     dph,r5
1318 8EF0      3935            mov     b,r6
131A EF        3936            mov     a,r7
131B 120100    3937            lcall   ___fs2uint
131E AC82      3938            mov     r4,dpl
1320 AD83      3939            mov     r5,dph
1322 D003      3940            pop     ar3
1324 D002      3941            pop     ar2
1326           3942   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:467: if ((IRVR > 1000) && (IRVL < 1000)) {
1326 C3        3943            clr     c
1327 74E8      3944            mov     a,#0xE8
1329 9A        3945            subb    a,r2
132A 7403      3946            mov     a,#0x03
132C 9B        3947            subb    a,r3
132D E4        3948            clr     a
132E 33        3949            rlc     a
132F FE        3950            mov     r6,a
1330 6001      3951            jz      L021016?
1332 C3        3952            clr     c
1333 EC        3953            mov     a,r4
1334 94E8      3954            subb    a,#0xE8
1336 ED        3955            mov     a,r5
1337 9403      3956            subb    a,#0x03
1339 5001      3957            jnc     L021016?
133B           3958   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:468: pwmL = SLOWPWM;
133B 904D68    3959            mov     dptr,#_pwmL
133E 7405      3960            mov     a,#0x05
1340 F0        3961            movx    @dptr,a
1341 E4        3962            clr     a
1342 A3        3963            inc     dptr
1343 F0        3964            movx    @dptr,a
1344           3965   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:469: pwmR = BOOSTPWM;        
1344 904D28    3966            mov     dptr,#_pwmR
1347 7428      3967            mov     a,#0x28
1349 F0        3968            movx    @dptr,a
134A E4        3969            clr     a
134B A3        3970            inc     dptr
134C F0        3971            movx    @dptr,a
134D 020100    3972            ljmp    L021017?
1350           3973   L021016?:
1350           3974   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:470: } else if ((IRVL > 1000) && (IRVR < 1000)) {
1350 C3        3975            clr     c
1351 74E8      3976            mov     a,#0xE8
1353 9C        3977            subb    a,r4
1354 7403      3978            mov     a,#0x03
1356 9D        3979            subb    a,r5
1357 E4        3980            clr     a
1358 33        3981            rlc     a
1359 FF        3982            mov     r7,a
135A 6001      3983            jz      L021012?
135C C3        3984            clr     c
135D EA        3985            mov     a,r2
135E 94E8      3986            subb    a,#0xE8
1360 EB        3987            mov     a,r3
1361 9403      3988            subb    a,#0x03
1363 5001      3989            jnc     L021012?
1365           3990   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:471: pwmL = BOOSTPWM;
1365 904D68    3991            mov     dptr,#_pwmL
1368 7428      3992            mov     a,#0x28
136A F0        3993            movx    @dptr,a
136B E4        3994            clr     a
136C A3        3995            inc     dptr
136D F0        3996            movx    @dptr,a
136E           3997   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:472: pwmR = SLOWPWM;         
136E 904D28    3998            mov     dptr,#_pwmR
1371 7405      3999            mov     a,#0x05
1373 F0        4000            movx    @dptr,a
1374 E4        4001            clr     a
1375 A3        4002            inc     dptr
1376 F0        4003            movx    @dptr,a
1377 8001      4004            sjmp    L021017?
1379           4005   L021012?:
1379           4006   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:473: } else if ((IRVL > 1000) && (IRVR > 1000)) {
1379 EF        4007            mov     a,r7
137A 6001      4008            jz      L021008?
137C EE        4009            mov     a,r6
137D 6001      4010            jz      L021008?
137F           4011   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:474: if (sonar_count_2 < 40) {
137F 9018C0    4012            mov     dptr,#_sonar_count_2
1382 E0        4013            movx    a,@dptr
1383 FE        4014            mov     r6,a
1384 A3        4015            inc     dptr
1385 E0        4016            movx    a,@dptr
1386 FF        4017            mov     r7,a
1387 C3        4018            clr     c
1388 EE        4019            mov     a,r6
1389 9428      4020            subb    a,#0x28
138B EF        4021            mov     a,r7
138C 9400      4022            subb    a,#0x00
138E 5001      4023            jnc     L021002?
1390           4024   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:475: pwmL = BOOSTPWM; //approach the object quickly
1390 904D68    4025            mov     dptr,#_pwmL
1393 7428      4026            mov     a,#0x28
1395 F0        4027            movx    @dptr,a
1396 E4        4028            clr     a
1397 A3        4029            inc     dptr
1398 F0        4030            movx    @dptr,a
1399           4031   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:476: pwmR = BOOSTPWM;
1399 904D28    4032            mov     dptr,#_pwmR
139C 7428      4033            mov     a,#0x28
139E F0        4034            movx    @dptr,a
139F E4        4035            clr     a
13A0 A3        4036            inc     dptr
13A1 F0        4037            movx    @dptr,a
13A2 8001      4038            sjmp    L021017?
13A4           4039   L021002?:
13A4           4040   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:478: pwmL = 0; // temporary just stops
13A4 904D68    4041            mov     dptr,#_pwmL
13A7 E4        4042            clr     a
13A8 F0        4043            movx    @dptr,a
13A9 A3        4044            inc     dptr
13AA F0        4045            movx    @dptr,a
13AB           4046   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:479: pwmR = 0;
13AB 904D28    4047            mov     dptr,#_pwmR
13AE E4        4048            clr     a
13AF F0        4049            movx    @dptr,a
13B0 A3        4050            inc     dptr
13B1 F0        4051            movx    @dptr,a
13B2 8001      4052            sjmp    L021017?
13B4           4053   L021008?:
13B4           4054   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:481: } else if ((IRVL < 1000) && (IRVR < 1000)) {
13B4 C3        4055            clr     c
13B5 EC        4056            mov     a,r4
13B6 94E8      4057            subb    a,#0xE8
13B8 ED        4058            mov     a,r5
13B9 9403      4059            subb    a,#0x03
13BB 5001      4060            jnc     L021017?
13BD C3        4061            clr     c
13BE EA        4062            mov     a,r2
13BF 94E8      4063            subb    a,#0xE8
13C1 EB        4064            mov     a,r3
13C2 9403      4065            subb    a,#0x03
13C4 5001      4066            jnc     L021017?
13C6           4067   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:482: pwmL = BASEPWM; 
13C6 904D68    4068            mov     dptr,#_pwmL
13C9 7419      4069            mov     a,#0x19
13CB F0        4070            movx    @dptr,a
13CC E4        4071            clr     a
13CD A3        4072            inc     dptr
13CE F0        4073            movx    @dptr,a
13CF           4074   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:483: pwmR = BASEPWM;         
13CF 904D28    4075            mov     dptr,#_pwmR
13D2 7419      4076            mov     a,#0x19
13D4 F0        4077            movx    @dptr,a
13D5 E4        4078            clr     a
13D6 A3        4079            inc     dptr
13D7 F0        4080            movx    @dptr,a
13D8           4081   L021017?:
13D8           4082   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:486: if (sonar_count_2 < 4)
13D8 9018C0    4083            mov     dptr,#_sonar_count_2
13DB E0        4084            movx    a,@dptr
13DC FA        4085            mov     r2,a
13DD A3        4086            inc     dptr
13DE E0        4087            movx    a,@dptr
13DF FB        4088            mov     r3,a
13E0 C3        4089            clr     c
13E1 EA        4090            mov     a,r2
13E2 9404      4091            subb    a,#0x04
13E4 EB        4092            mov     a,r3
13E5 9400      4093            subb    a,#0x00
13E7 4001      4094            jc      L021048?
13E9 020100    4095            ljmp    L021021?
13EC           4096   L021048?:
13EC           4097   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:487: flag = 1;
13EC D298      4098            setb    _Track_Object_flag_1_134
13EE 020100    4099            ljmp    L021021?
13F1           4100   L021023?:
13F1           4101   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:490: pwmL = BASEPWM; 
13F1 904D68    4102            mov     dptr,#_pwmL
13F4 7419      4103            mov     a,#0x19
13F6 F0        4104            movx    @dptr,a
13F7 E4        4105            clr     a
13F8 A3        4106            inc     dptr
13F9 F0        4107            movx    @dptr,a
13FA           4108   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:491: pwmR = BASEPWM;         
13FA 904D28    4109            mov     dptr,#_pwmR
13FD 7419      4110            mov     a,#0x19
13FF F0        4111            movx    @dptr,a
1400 E4        4112            clr     a
1401 A3        4113            inc     dptr
1402 F0        4114            movx    @dptr,a
1403           4115   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:492: waitms(500);
1403 9001F4    4116            mov     dptr,#0x01F4
1406 120100    4117            lcall   _waitms
1409           4118   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:493: stop();
1409 120100    4119            lcall   _stop
140C           4120   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:494: Claw_Pos(2);
140C 900002    4121            mov     dptr,#0x0002
140F 120100    4122            lcall   _Claw_Pos
1412           4123   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:495: waitms(500);
1412 9001F4    4124            mov     dptr,#0x01F4
1415 020100    4125            ljmp    _waitms
1418           4126   ;------------------------------------------------------------
1418           4127   ;Allocation info for local variables in function 'Find_Tape'
1418           4128   ;------------------------------------------------------------
1418           4129   ;motordir                  Allocated with name '_Find_Tape_PARM_2'
1418           4130   ;gnd_VM                    Allocated with name '_Find_Tape_gnd_VM_1_142'
1418           4131   ;temp                      Allocated to registers 
1418           4132   ;------------------------------------------------------------
1418           4133   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:499: void Find_Tape(unsigned short int *gnd_VM, int motordir)
1418           4134   ;        -----------------------------------------
1418           4135   ;         function Find_Tape
1418           4136   ;        -----------------------------------------
1418           4137   _Find_Tape:
1418 858268    4138            mov     _Find_Tape_gnd_VM_1_142,dpl
141B 858369    4139            mov     (_Find_Tape_gnd_VM_1_142 + 1),dph
141E 85F06A    4140            mov     (_Find_Tape_gnd_VM_1_142 + 2),b
1421           4141   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:501: bit flag=0;
1421 C2E8      4142            clr     _Find_Tape_flag_1_143
1423           4143   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:504: while (!flag) {
1423           4144   L022004?:
1423 30E8E8    4145            jnb     _Find_Tape_flag_1_143,L022012?
1426 020100    4146            ljmp    L022006?
1429           4147   L022012?:
1429           4148   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:505: if (Volts_at_Pin(QFP32_MUX_P1_5)*1000 < *gnd_VM-TAPEOFFSET) { // found tape, proceed with function
1429 75820B    4149            mov     dpl,#0x0B
142C 120100    4150            lcall   _Volts_at_Pin
142F AD82      4151            mov     r5,dpl
1431 AE83      4152            mov     r6,dph
1433 AFF0      4153            mov     r7,b
1435 F8        4154            mov     r0,a
1436 C005      4155            push    ar5
1438 C006      4156            push    ar6
143A C007      4157            push    ar7
143C C000      4158            push    ar0
143E 900000    4159            mov     dptr,#0x0000
1441 75F07A    4160            mov     b,#0x7A
1444 7444      4161            mov     a,#0x44
1446 120100    4162            lcall   ___fsmul
1449 AD82      4163            mov     r5,dpl
144B AE83      4164            mov     r6,dph
144D AFF0      4165            mov     r7,b
144F F8        4166            mov     r0,a
1450 E581      4167            mov     a,sp
1452 24FC      4168            add     a,#0xfc
1454 F581      4169            mov     sp,a
1456 856882    4170            mov     dpl,_Find_Tape_gnd_VM_1_142
1459 856983    4171            mov     dph,(_Find_Tape_gnd_VM_1_142 + 1)
145C 856AF0    4172            mov     b,(_Find_Tape_gnd_VM_1_142 + 2)
145F 120100    4173            lcall   __gptrget
1462 F9        4174            mov     r1,a
1463 A3        4175            inc     dptr
1464 120100    4176            lcall   __gptrget
1467 FA        4177            mov     r2,a
1468 E9        4178            mov     a,r1
1469 2470      4179            add     a,#0x70
146B F582      4180            mov     dpl,a
146D EA        4181            mov     a,r2
146E 34FE      4182            addc    a,#0xfe
1470 F583      4183            mov     dph,a
1472 C005      4184            push    ar5
1474 C006      4185            push    ar6
1476 C007      4186            push    ar7
1478 C000      4187            push    ar0
147A 120100    4188            lcall   ___uint2fs
147D AA82      4189            mov     r2,dpl
147F AB83      4190            mov     r3,dph
1481 ACF0      4191            mov     r4,b
1483 F9        4192            mov     r1,a
1484 D000      4193            pop     ar0
1486 D007      4194            pop     ar7
1488 D006      4195            pop     ar6
148A D005      4196            pop     ar5
148C C002      4197            push    ar2
148E C003      4198            push    ar3
1490 C004      4199            push    ar4
1492 C001      4200            push    ar1
1494 8D82      4201            mov     dpl,r5
1496 8E83      4202            mov     dph,r6
1498 8FF0      4203            mov     b,r7
149A E8        4204            mov     a,r0
149B 120100    4205            lcall   ___fslt
149E AA82      4206            mov     r2,dpl
14A0 E581      4207            mov     a,sp
14A2 24FC      4208            add     a,#0xfc
14A4 F581      4209            mov     sp,a
14A6 EA        4210            mov     a,r2
14A7 6001      4211            jz      L022002?
14A9           4212   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:506: stop();
14A9 120100    4213            lcall   _stop
14AC           4214   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:507: flag = 1;
14AC D2E8      4215            setb    _Find_Tape_flag_1_143
14AE 020100    4216            ljmp    L022004?
14B1           4217   L022002?:
14B1           4218   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:509: mot_dir(motordir,motordir);
14B1 852840    4219            mov     _mot_dir_PARM_2,_Find_Tape_PARM_2
14B4 852941    4220            mov     (_mot_dir_PARM_2 + 1),(_Find_Tape_PARM_2 + 1)
14B7 852882    4221            mov     dpl,_Find_Tape_PARM_2
14BA 852983    4222            mov     dph,(_Find_Tape_PARM_2 + 1)
14BD 120100    4223            lcall   _mot_dir
14C0           4224   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:510: pwmL = BASEPWM;
14C0 904D68    4225            mov     dptr,#_pwmL
14C3 7419      4226            mov     a,#0x19
14C5 F0        4227            movx    @dptr,a
14C6 E4        4228            clr     a
14C7 A3        4229            inc     dptr
14C8 F0        4230            movx    @dptr,a
14C9           4231   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:511: pwmR = BASEPWM;         
14C9 904D28    4232            mov     dptr,#_pwmR
14CC 7419      4233            mov     a,#0x19
14CE F0        4234            movx    @dptr,a
14CF E4        4235            clr     a
14D0 A3        4236            inc     dptr
14D1 F0        4237            movx    @dptr,a
14D2 020100    4238            ljmp    L022004?
14D5           4239   L022006?:
14D5           4240   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:514: return;
14D5 22        4241            ret
14D6           4242   ;------------------------------------------------------------
14D6           4243   ;Allocation info for local variables in function 'Rotate'
14D6           4244   ;------------------------------------------------------------
14D6           4245   ;gnd_VR                    Allocated with name '_Rotate_PARM_2'
14D6           4246   ;gnd_VL                    Allocated with name '_Rotate_gnd_VL_1_147'
14D6           4247   ;sloc0                     Allocated with name '_Rotate_sloc0_1_0'
14D6           4248   ;------------------------------------------------------------
14D6           4249   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:517: void Rotate(unsigned short int *gnd_VL, unsigned short int *gnd_VR)
14D6           4250   ;        -----------------------------------------
14D6           4251   ;         function Rotate
14D6           4252   ;        -----------------------------------------
14D6           4253   _Rotate:
14D6 8582B8    4254            mov     _Rotate_gnd_VL_1_147,dpl
14D9 8583B9    4255            mov     (_Rotate_gnd_VL_1_147 + 1),dph
14DC 85F0BA    4256            mov     (_Rotate_gnd_VL_1_147 + 2),b
14DF           4257   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:519: if (Volts_at_Pin(QFP32_MUX_P1_6)*1000 < *gnd_VL-TAPEOFFSET) {
14DF 75820C    4258            mov     dpl,#0x0C
14E2 120100    4259            lcall   _Volts_at_Pin
14E5 AD82      4260            mov     r5,dpl
14E7 AE83      4261            mov     r6,dph
14E9 AFF0      4262            mov     r7,b
14EB F8        4263            mov     r0,a
14EC C005      4264            push    ar5
14EE C006      4265            push    ar6
14F0 C007      4266            push    ar7
14F2 C000      4267            push    ar0
14F4 900000    4268            mov     dptr,#0x0000
14F7 75F07A    4269            mov     b,#0x7A
14FA 7444      4270            mov     a,#0x44
14FC 120100    4271            lcall   ___fsmul
14FF AD82      4272            mov     r5,dpl
1501 AE83      4273            mov     r6,dph
1503 AFF0      4274            mov     r7,b
1505 F8        4275            mov     r0,a
1506 E581      4276            mov     a,sp
1508 24FC      4277            add     a,#0xfc
150A F581      4278            mov     sp,a
150C 85B882    4279            mov     dpl,_Rotate_gnd_VL_1_147
150F 85B983    4280            mov     dph,(_Rotate_gnd_VL_1_147 + 1)
1512 85BAF0    4281            mov     b,(_Rotate_gnd_VL_1_147 + 2)
1515 120100    4282            lcall   __gptrget
1518 F9        4283            mov     r1,a
1519 A3        4284            inc     dptr
151A 120100    4285            lcall   __gptrget
151D FA        4286            mov     r2,a
151E E9        4287            mov     a,r1
151F 2470      4288            add     a,#0x70
1521 F582      4289            mov     dpl,a
1523 EA        4290            mov     a,r2
1524 34FE      4291            addc    a,#0xfe
1526 F583      4292            mov     dph,a
1528 C005      4293            push    ar5
152A C006      4294            push    ar6
152C C007      4295            push    ar7
152E C000      4296            push    ar0
1530 120100    4297            lcall   ___uint2fs
1533 AA82      4298            mov     r2,dpl
1535 AB83      4299            mov     r3,dph
1537 ACF0      4300            mov     r4,b
1539 F9        4301            mov     r1,a
153A D000      4302            pop     ar0
153C D007      4303            pop     ar7
153E D006      4304            pop     ar6
1540 D005      4305            pop     ar5
1542 C002      4306            push    ar2
1544 C003      4307            push    ar3
1546 C004      4308            push    ar4
1548 C001      4309            push    ar1
154A 8D82      4310            mov     dpl,r5
154C 8E83      4311            mov     dph,r6
154E 8FF0      4312            mov     b,r7
1550 E8        4313            mov     a,r0
1551 120100    4314            lcall   ___fslt
1554 AA82      4315            mov     r2,dpl
1556 E581      4316            mov     a,sp
1558 24FC      4317            add     a,#0xfc
155A F581      4318            mov     sp,a
155C EA        4319            mov     a,r2
155D 6001      4320            jz      L023004?
155F           4321   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:520: spin_left(10);
155F 90000A    4322            mov     dptr,#0x000A
1562 120100    4323            lcall   _spin_left
1565 020100    4324            ljmp    L023015?
1568           4325   L023004?:
1568           4326   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:521: } else if (Volts_at_Pin(QFP32_MUX_P1_4)*1000 < *gnd_VR-TAPEOFFSET) {
1568 75820A    4327            mov     dpl,#0x0A
156B 120100    4328            lcall   _Volts_at_Pin
156E AA82      4329            mov     r2,dpl
1570 AB83      4330            mov     r3,dph
1572 ACF0      4331            mov     r4,b
1574 FD        4332            mov     r5,a
1575 C002      4333            push    ar2
1577 C003      4334            push    ar3
1579 C004      4335            push    ar4
157B C005      4336            push    ar5
157D 900000    4337            mov     dptr,#0x0000
1580 75F07A    4338            mov     b,#0x7A
1583 7444      4339            mov     a,#0x44
1585 120100    4340            lcall   ___fsmul
1588 AA82      4341            mov     r2,dpl
158A AB83      4342            mov     r3,dph
158C ACF0      4343            mov     r4,b
158E FD        4344            mov     r5,a
158F E581      4345            mov     a,sp
1591 24FC      4346            add     a,#0xfc
1593 F581      4347            mov     sp,a
1595 AED8      4348            mov     r6,_Rotate_PARM_2
1597 AFD9      4349            mov     r7,(_Rotate_PARM_2 + 1)
1599 A8DA      4350            mov     r0,(_Rotate_PARM_2 + 2)
159B 8E82      4351            mov     dpl,r6
159D 8F83      4352            mov     dph,r7
159F 88F0      4353            mov     b,r0
15A1 120100    4354            lcall   __gptrget
15A4 FE        4355            mov     r6,a
15A5 A3        4356            inc     dptr
15A6 120100    4357            lcall   __gptrget
15A9 FF        4358            mov     r7,a
15AA EE        4359            mov     a,r6
15AB 2470      4360            add     a,#0x70
15AD F582      4361            mov     dpl,a
15AF EF        4362            mov     a,r7
15B0 34FE      4363            addc    a,#0xfe
15B2 F583      4364            mov     dph,a
15B4 C002      4365            push    ar2
15B6 C003      4366            push    ar3
15B8 C004      4367            push    ar4
15BA C005      4368            push    ar5
15BC 120100    4369            lcall   ___uint2fs
15BF AE82      4370            mov     r6,dpl
15C1 AF83      4371            mov     r7,dph
15C3 A8F0      4372            mov     r0,b
15C5 F9        4373            mov     r1,a
15C6 D005      4374            pop     ar5
15C8 D004      4375            pop     ar4
15CA D003      4376            pop     ar3
15CC D002      4377            pop     ar2
15CE C006      4378            push    ar6
15D0 C007      4379            push    ar7
15D2 C000      4380            push    ar0
15D4 C001      4381            push    ar1
15D6 8A82      4382            mov     dpl,r2
15D8 8B83      4383            mov     dph,r3
15DA 8CF0      4384            mov     b,r4
15DC ED        4385            mov     a,r5
15DD 120100    4386            lcall   ___fslt
15E0 AA82      4387            mov     r2,dpl
15E2 E581      4388            mov     a,sp
15E4 24FC      4389            add     a,#0xfc
15E6 F581      4390            mov     sp,a
15E8 EA        4391            mov     a,r2
15E9 6001      4392            jz      L023015?
15EB           4393   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:522: spin_right(10);
15EB 90000A    4394            mov     dptr,#0x000A
15EE 120100    4395            lcall   _spin_right
15F1           4396   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:525: while((Volts_at_Pin(QFP32_MUX_P1_6)*1000 < *gnd_VL-TAPEOFFSET) &&
15F1           4397   L023015?:
15F1 85D808    4398            mov     _Rotate_sloc0_1_0,_Rotate_PARM_2
15F4 85D909    4399            mov     (_Rotate_sloc0_1_0 + 1),(_Rotate_PARM_2 + 1)
15F7 85DA0A    4400            mov     (_Rotate_sloc0_1_0 + 2),(_Rotate_PARM_2 + 2)
15FA           4401   L023007?:
15FA 75820C    4402            mov     dpl,#0x0C
15FD 120100    4403            lcall   _Volts_at_Pin
1600 AD82      4404            mov     r5,dpl
1602 AE83      4405            mov     r6,dph
1604 AFF0      4406            mov     r7,b
1606 F8        4407            mov     r0,a
1607 C005      4408            push    ar5
1609 C006      4409            push    ar6
160B C007      4410            push    ar7
160D C000      4411            push    ar0
160F 900000    4412            mov     dptr,#0x0000
1612 75F07A    4413            mov     b,#0x7A
1615 7444      4414            mov     a,#0x44
1617 120100    4415            lcall   ___fsmul
161A AD82      4416            mov     r5,dpl
161C AE83      4417            mov     r6,dph
161E AFF0      4418            mov     r7,b
1620 F8        4419            mov     r0,a
1621 E581      4420            mov     a,sp
1623 24FC      4421            add     a,#0xfc
1625 F581      4422            mov     sp,a
1627 85B882    4423            mov     dpl,_Rotate_gnd_VL_1_147
162A 85B983    4424            mov     dph,(_Rotate_gnd_VL_1_147 + 1)
162D 85BAF0    4425            mov     b,(_Rotate_gnd_VL_1_147 + 2)
1630 120100    4426            lcall   __gptrget
1633 F9        4427            mov     r1,a
1634 A3        4428            inc     dptr
1635 120100    4429            lcall   __gptrget
1638 FA        4430            mov     r2,a
1639 E9        4431            mov     a,r1
163A 2470      4432            add     a,#0x70
163C F582      4433            mov     dpl,a
163E EA        4434            mov     a,r2
163F 34FE      4435            addc    a,#0xfe
1641 F583      4436            mov     dph,a
1643 C005      4437            push    ar5
1645 C006      4438            push    ar6
1647 C007      4439            push    ar7
1649 C000      4440            push    ar0
164B 120100    4441            lcall   ___uint2fs
164E AA82      4442            mov     r2,dpl
1650 AB83      4443            mov     r3,dph
1652 ACF0      4444            mov     r4,b
1654 F9        4445            mov     r1,a
1655 D000      4446            pop     ar0
1657 D007      4447            pop     ar7
1659 D006      4448            pop     ar6
165B D005      4449            pop     ar5
165D C002      4450            push    ar2
165F C003      4451            push    ar3
1661 C004      4452            push    ar4
1663 C001      4453            push    ar1
1665 8D82      4454            mov     dpl,r5
1667 8E83      4455            mov     dph,r6
1669 8FF0      4456            mov     b,r7
166B E8        4457            mov     a,r0
166C 120100    4458            lcall   ___fslt
166F AA82      4459            mov     r2,dpl
1671 E581      4460            mov     a,sp
1673 24FC      4461            add     a,#0xfc
1675 F581      4462            mov     sp,a
1677 EA        4463            mov     a,r2
1678 7001      4464            jnz     L023018?
167A 020100    4465            ljmp    L023009?
167D           4466   L023018?:
167D           4467   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:526: (Volts_at_Pin(QFP32_MUX_P1_4)*1000 < *gnd_VR-TAPEOFFSET)); 
167D 75820A    4468            mov     dpl,#0x0A
1680 120100    4469            lcall   _Volts_at_Pin
1683 AD82      4470            mov     r5,dpl
1685 AE83      4471            mov     r6,dph
1687 AFF0      4472            mov     r7,b
1689 F8        4473            mov     r0,a
168A C005      4474            push    ar5
168C C006      4475            push    ar6
168E C007      4476            push    ar7
1690 C000      4477            push    ar0
1692 900000    4478            mov     dptr,#0x0000
1695 75F07A    4479            mov     b,#0x7A
1698 7444      4480            mov     a,#0x44
169A 120100    4481            lcall   ___fsmul
169D AD82      4482            mov     r5,dpl
169F AE83      4483            mov     r6,dph
16A1 AFF0      4484            mov     r7,b
16A3 F8        4485            mov     r0,a
16A4 E581      4486            mov     a,sp
16A6 24FC      4487            add     a,#0xfc
16A8 F581      4488            mov     sp,a
16AA 850882    4489            mov     dpl,_Rotate_sloc0_1_0
16AD 850983    4490            mov     dph,(_Rotate_sloc0_1_0 + 1)
16B0 850AF0    4491            mov     b,(_Rotate_sloc0_1_0 + 2)
16B3 120100    4492            lcall   __gptrget
16B6 F9        4493            mov     r1,a
16B7 A3        4494            inc     dptr
16B8 120100    4495            lcall   __gptrget
16BB FA        4496            mov     r2,a
16BC E9        4497            mov     a,r1
16BD 2470      4498            add     a,#0x70
16BF F582      4499            mov     dpl,a
16C1 EA        4500            mov     a,r2
16C2 34FE      4501            addc    a,#0xfe
16C4 F583      4502            mov     dph,a
16C6 C005      4503            push    ar5
16C8 C006      4504            push    ar6
16CA C007      4505            push    ar7
16CC C000      4506            push    ar0
16CE 120100    4507            lcall   ___uint2fs
16D1 AA82      4508            mov     r2,dpl
16D3 AB83      4509            mov     r3,dph
16D5 ACF0      4510            mov     r4,b
16D7 F9        4511            mov     r1,a
16D8 D000      4512            pop     ar0
16DA D007      4513            pop     ar7
16DC D006      4514            pop     ar6
16DE D005      4515            pop     ar5
16E0 C002      4516            push    ar2
16E2 C003      4517            push    ar3
16E4 C004      4518            push    ar4
16E6 C001      4519            push    ar1
16E8 8D82      4520            mov     dpl,r5
16EA 8E83      4521            mov     dph,r6
16EC 8FF0      4522            mov     b,r7
16EE E8        4523            mov     a,r0
16EF 120100    4524            lcall   ___fslt
16F2 AA82      4525            mov     r2,dpl
16F4 E581      4526            mov     a,sp
16F6 24FC      4527            add     a,#0xfc
16F8 F581      4528            mov     sp,a
16FA EA        4529            mov     a,r2
16FB 6001      4530            jz      L023019?
16FD 020100    4531            ljmp    L023007?
1700           4532   L023019?:
1700           4533   L023009?:
1700           4534   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:527: return;
1700 22        4535            ret
1701           4536   ;------------------------------------------------------------
1701           4537   ;Allocation info for local variables in function 'Detect_Object'
1701           4538   ;------------------------------------------------------------
1701           4539   ;------------------------------------------------------------
1701           4540   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:530: int Detect_Object (void)
1701           4541   ;        -----------------------------------------
1701           4542   ;         function Detect_Object
1701           4543   ;        -----------------------------------------
1701           4544   _Detect_Object:
1701           4545   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:532: if (((Volts_at_Pin(QFP32_MUX_P1_2) * 1000) < 1000) || ((Volts_at_Pin(QFP32_MUX_P1_3) * 1000) < 1000))
1701 758208    4546            mov     dpl,#0x08
1704 120100    4547            lcall   _Volts_at_Pin
1707 AA82      4548            mov     r2,dpl
1709 AB83      4549            mov     r3,dph
170B ACF0      4550            mov     r4,b
170D FD        4551            mov     r5,a
170E C002      4552            push    ar2
1710 C003      4553            push    ar3
1712 C004      4554            push    ar4
1714 C005      4555            push    ar5
1716 900000    4556            mov     dptr,#0x0000
1719 75F07A    4557            mov     b,#0x7A
171C 7444      4558            mov     a,#0x44
171E 120100    4559            lcall   ___fsmul
1721 AA82      4560            mov     r2,dpl
1723 AB83      4561            mov     r3,dph
1725 ACF0      4562            mov     r4,b
1727 FD        4563            mov     r5,a
1728 E581      4564            mov     a,sp
172A 24FC      4565            add     a,#0xfc
172C F581      4566            mov     sp,a
172E E4        4567            clr     a
172F C0E0      4568            push    acc
1731 C0E0      4569            push    acc
1733 747A      4570            mov     a,#0x7A
1735 C0E0      4571            push    acc
1737 7444      4572            mov     a,#0x44
1739 C0E0      4573            push    acc
173B 8A82      4574            mov     dpl,r2
173D 8B83      4575            mov     dph,r3
173F 8CF0      4576            mov     b,r4
1741 ED        4577            mov     a,r5
1742 120100    4578            lcall   ___fslt
1745 AA82      4579            mov     r2,dpl
1747 E581      4580            mov     a,sp
1749 24FC      4581            add     a,#0xfc
174B F581      4582            mov     sp,a
174D EA        4583            mov     a,r2
174E 7001      4584            jnz     L024001?
1750 758209    4585            mov     dpl,#0x09
1753 120100    4586            lcall   _Volts_at_Pin
1756 AA82      4587            mov     r2,dpl
1758 AB83      4588            mov     r3,dph
175A ACF0      4589            mov     r4,b
175C FD        4590            mov     r5,a
175D C002      4591            push    ar2
175F C003      4592            push    ar3
1761 C004      4593            push    ar4
1763 C005      4594            push    ar5
1765 900000    4595            mov     dptr,#0x0000
1768 75F07A    4596            mov     b,#0x7A
176B 7444      4597            mov     a,#0x44
176D 120100    4598            lcall   ___fsmul
1770 AA82      4599            mov     r2,dpl
1772 AB83      4600            mov     r3,dph
1774 ACF0      4601            mov     r4,b
1776 FD        4602            mov     r5,a
1777 E581      4603            mov     a,sp
1779 24FC      4604            add     a,#0xfc
177B F581      4605            mov     sp,a
177D E4        4606            clr     a
177E C0E0      4607            push    acc
1780 C0E0      4608            push    acc
1782 747A      4609            mov     a,#0x7A
1784 C0E0      4610            push    acc
1786 7444      4611            mov     a,#0x44
1788 C0E0      4612            push    acc
178A 8A82      4613            mov     dpl,r2
178C 8B83      4614            mov     dph,r3
178E 8CF0      4615            mov     b,r4
1790 ED        4616            mov     a,r5
1791 120100    4617            lcall   ___fslt
1794 AA82      4618            mov     r2,dpl
1796 E581      4619            mov     a,sp
1798 24FC      4620            add     a,#0xfc
179A F581      4621            mov     sp,a
179C EA        4622            mov     a,r2
179D 6001      4623            jz      L024002?
179F           4624   L024001?:
179F           4625   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:533: return 1;
179F 900001    4626            mov     dptr,#0x0001
17A2 22        4627            ret
17A3           4628   L024002?:
17A3           4629   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:534: if (sonar_count_2 <= 40)
17A3 9018C0    4630            mov     dptr,#_sonar_count_2
17A6 E0        4631            movx    a,@dptr
17A7 FA        4632            mov     r2,a
17A8 A3        4633            inc     dptr
17A9 E0        4634            movx    a,@dptr
17AA FB        4635            mov     r3,a
17AB C3        4636            clr     c
17AC 7428      4637            mov     a,#0x28
17AE 9A        4638            subb    a,r2
17AF E4        4639            clr     a
17B0 9B        4640            subb    a,r3
17B1 4001      4641            jc      L024005?
17B3           4642   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:535: return 1;
17B3 900001    4643            mov     dptr,#0x0001
17B6           4644   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:537: return 0;
17B6 22        4645            ret
17B7           4646   L024005?:
17B7 900000    4647            mov     dptr,#0x0000
17BA 22        4648            ret
17BB           4649   ;------------------------------------------------------------
17BB           4650   ;Allocation info for local variables in function 'Find_Object'
17BB           4651   ;------------------------------------------------------------
17BB           4652   ;------------------------------------------------------------
17BB           4653   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:540: void Find_Object( void )
17BB           4654   ;        -----------------------------------------
17BB           4655   ;         function Find_Object
17BB           4656   ;        -----------------------------------------
17BB           4657   _Find_Object:
17BB           4658   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:542: Claw_Pos (10);
17BB 90000A    4659            mov     dptr,#0x000A
17BE 120100    4660            lcall   _Claw_Pos
17C1           4661   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:543: stop();
17C1 120100    4662            lcall   _stop
17C4           4663   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:544: waitms(500);
17C4 9001F4    4664            mov     dptr,#0x01F4
17C7 120100    4665            lcall   _waitms
17CA           4666   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:547: if (dir) {
17CA 3078E8    4667            jnb     _dir,L025002?
17CD           4668   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:549: mot_dir(1,0);
17CD E4        4669            clr     a
17CE F540      4670            mov     _mot_dir_PARM_2,a
17D0 F541      4671            mov     (_mot_dir_PARM_2 + 1),a
17D2 900001    4672            mov     dptr,#0x0001
17D5 120100    4673            lcall   _mot_dir
17D8           4674   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:550: pwmR = 0;
17D8 904D28    4675            mov     dptr,#_pwmR
17DB E4        4676            clr     a
17DC F0        4677            movx    @dptr,a
17DD A3        4678            inc     dptr
17DE F0        4679            movx    @dptr,a
17DF           4680   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:551: pwmL = BASEPWM;
17DF 904D68    4681            mov     dptr,#_pwmL
17E2 7419      4682            mov     a,#0x19
17E4 F0        4683            movx    @dptr,a
17E5 E4        4684            clr     a
17E6 A3        4685            inc     dptr
17E7 F0        4686            movx    @dptr,a
17E8 8001      4687            sjmp    L025004?
17EA           4688   L025002?:
17EA           4689   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:554: mot_dir(0,1);
17EA 754001    4690            mov     _mot_dir_PARM_2,#0x01
17ED E4        4691            clr     a
17EE F541      4692            mov     (_mot_dir_PARM_2 + 1),a
17F0 900000    4693            mov     dptr,#0x0000
17F3 120100    4694            lcall   _mot_dir
17F6           4695   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:555: pwmR = BASEPWM;
17F6 904D28    4696            mov     dptr,#_pwmR
17F9 7419      4697            mov     a,#0x19
17FB F0        4698            movx    @dptr,a
17FC E4        4699            clr     a
17FD A3        4700            inc     dptr
17FE F0        4701            movx    @dptr,a
17FF           4702   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:556: pwmL =0;
17FF 904D68    4703            mov     dptr,#_pwmL
1802 E4        4704            clr     a
1803 F0        4705            movx    @dptr,a
1804 A3        4706            inc     dptr
1805 F0        4707            movx    @dptr,a
1806           4708   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:560: while (Detect_Object() != 1);           //locate an object with the IR sensors
1806           4709   L025004?:
1806 120100    4710            lcall   _Detect_Object
1809 AA82      4711            mov     r2,dpl
180B AB83      4712            mov     r3,dph
180D BA0128    4713            cjne    r2,#0x01,L025004?
1810 BB0028    4714            cjne    r3,#0x00,L025004?
1813 22        4715            ret
1814           4716   ;------------------------------------------------------------
1814           4717   ;Allocation info for local variables in function 'Bridge_Rotate'
1814           4718   ;------------------------------------------------------------
1814           4719   ;gnd_VM                    Allocated with name '_Bridge_Rotate_PARM_2'
1814           4720   ;gnd_VR                    Allocated with name '_Bridge_Rotate_PARM_3'
1814           4721   ;gnd_VL                    Allocated with name '_Bridge_Rotate_gnd_VL_1_157'
1814           4722   ;sloc0                     Allocated with name '_Bridge_Rotate_sloc0_1_0'
1814           4723   ;sloc1                     Allocated with name '_Bridge_Rotate_sloc1_1_0'
1814           4724   ;sloc2                     Allocated with name '_Bridge_Rotate_sloc2_1_0'
1814           4725   ;------------------------------------------------------------
1814           4726   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:563: void Bridge_Rotate(unsigned short int* gnd_VL, unsigned short int* gnd_VM, unsigned short int* gnd_VR)
1814           4727   ;        -----------------------------------------
1814           4728   ;         function Bridge_Rotate
1814           4729   ;        -----------------------------------------
1814           4730   _Bridge_Rotate:
1814 858258    4731            mov     _Bridge_Rotate_gnd_VL_1_157,dpl
1817 858359    4732            mov     (_Bridge_Rotate_gnd_VL_1_157 + 1),dph
181A 85F05A    4733            mov     (_Bridge_Rotate_gnd_VL_1_157 + 2),b
181D           4734   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:565: if (dir) {
181D 207868    4735            jb      _dir,L026021?
1820 020100    4736            ljmp    L026010?
1823           4737   L026021?:
1823           4738   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:566: mot_dir(0,1);
1823 754001    4739            mov     _mot_dir_PARM_2,#0x01
1826 E4        4740            clr     a
1827 F541      4741            mov     (_mot_dir_PARM_2 + 1),a
1829 900000    4742            mov     dptr,#0x0000
182C 120100    4743            lcall   _mot_dir
182F           4744   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:567: pwmL = BASEPWM+10;
182F 904D68    4745            mov     dptr,#_pwmL
1832 7423      4746            mov     a,#0x23
1834 F0        4747            movx    @dptr,a
1835 E4        4748            clr     a
1836 A3        4749            inc     dptr
1837 F0        4750            movx    @dptr,a
1838           4751   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:568: pwmR = BASEPWM+10;      
1838 904D28    4752            mov     dptr,#_pwmR
183B 7423      4753            mov     a,#0x23
183D F0        4754            movx    @dptr,a
183E E4        4755            clr     a
183F A3        4756            inc     dptr
1840 F0        4757            movx    @dptr,a
1841           4758   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:569: waitms(700);
1841 9002BC    4759            mov     dptr,#0x02BC
1844 120100    4760            lcall   _waitms
1847           4761   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:570: while ((Volts_at_Pin(QFP32_MUX_P1_4)*1000 < *gnd_VR-TAPEOFFSET) || (Volts_at_Pin(QFP32_MUX_P1_5)*1000 < *gnd_VM-TAPEOFFSET));
1847 8548F8    4762            mov     _Bridge_Rotate_sloc1_1_0,_Bridge_Rotate_PARM_3
184A 8549F9    4763            mov     (_Bridge_Rotate_sloc1_1_0 + 1),(_Bridge_Rotate_PARM_3 + 1)
184D 854AFA    4764            mov     (_Bridge_Rotate_sloc1_1_0 + 2),(_Bridge_Rotate_PARM_3 + 2)
1850 8598A8    4765            mov     _Bridge_Rotate_sloc0_1_0,_Bridge_Rotate_PARM_2
1853 8599A9    4766            mov     (_Bridge_Rotate_sloc0_1_0 + 1),(_Bridge_Rotate_PARM_2 + 1)
1856 859AAA    4767            mov     (_Bridge_Rotate_sloc0_1_0 + 2),(_Bridge_Rotate_PARM_2 + 2)
1859           4768   L026002?:
1859 75820A    4769            mov     dpl,#0x0A
185C 120100    4770            lcall   _Volts_at_Pin
185F A882      4771            mov     r0,dpl
1861 A983      4772            mov     r1,dph
1863 ADF0      4773            mov     r5,b
1865 FE        4774            mov     r6,a
1866 C000      4775            push    ar0
1868 C001      4776            push    ar1
186A C005      4777            push    ar5
186C C006      4778            push    ar6
186E 900000    4779            mov     dptr,#0x0000
1871 75F07A    4780            mov     b,#0x7A
1874 7444      4781            mov     a,#0x44
1876 120100    4782            lcall   ___fsmul
1879 858248    4783            mov     _Bridge_Rotate_sloc2_1_0,dpl
187C 858349    4784            mov     (_Bridge_Rotate_sloc2_1_0 + 1),dph
187F 85F04A    4785            mov     (_Bridge_Rotate_sloc2_1_0 + 2),b
1882 F54B      4786            mov     (_Bridge_Rotate_sloc2_1_0 + 3),a
1884 E581      4787            mov     a,sp
1886 24FC      4788            add     a,#0xfc
1888 F581      4789            mov     sp,a
188A 85F882    4790            mov     dpl,_Bridge_Rotate_sloc1_1_0
188D 85F983    4791            mov     dph,(_Bridge_Rotate_sloc1_1_0 + 1)
1890 85FAF0    4792            mov     b,(_Bridge_Rotate_sloc1_1_0 + 2)
1893 120100    4793            lcall   __gptrget
1896 F9        4794            mov     r1,a
1897 A3        4795            inc     dptr
1898 120100    4796            lcall   __gptrget
189B FD        4797            mov     r5,a
189C E9        4798            mov     a,r1
189D 2470      4799            add     a,#0x70
189F F582      4800            mov     dpl,a
18A1 ED        4801            mov     a,r5
18A2 34FE      4802            addc    a,#0xfe
18A4 F583      4803            mov     dph,a
18A6 120100    4804            lcall   ___uint2fs
18A9 AD82      4805            mov     r5,dpl
18AB AE83      4806            mov     r6,dph
18AD AFF0      4807            mov     r7,b
18AF F8        4808            mov     r0,a
18B0 C005      4809            push    ar5
18B2 C006      4810            push    ar6
18B4 C007      4811            push    ar7
18B6 C000      4812            push    ar0
18B8 854882    4813            mov     dpl,_Bridge_Rotate_sloc2_1_0
18BB 854983    4814            mov     dph,(_Bridge_Rotate_sloc2_1_0 + 1)
18BE 854AF0    4815            mov     b,(_Bridge_Rotate_sloc2_1_0 + 2)
18C1 E54B      4816            mov     a,(_Bridge_Rotate_sloc2_1_0 + 3)
18C3 120100    4817            lcall   ___fslt
18C6 AD82      4818            mov     r5,dpl
18C8 E581      4819            mov     a,sp
18CA 24FC      4820            add     a,#0xfc
18CC F581      4821            mov     sp,a
18CE ED        4822            mov     a,r5
18CF 7001      4823            jnz     L026002?
18D1 75820B    4824            mov     dpl,#0x0B
18D4 120100    4825            lcall   _Volts_at_Pin
18D7 AD82      4826            mov     r5,dpl
18D9 AE83      4827            mov     r6,dph
18DB AFF0      4828            mov     r7,b
18DD F8        4829            mov     r0,a
18DE C005      4830            push    ar5
18E0 C006      4831            push    ar6
18E2 C007      4832            push    ar7
18E4 C000      4833            push    ar0
18E6 900000    4834            mov     dptr,#0x0000
18E9 75F07A    4835            mov     b,#0x7A
18EC 7444      4836            mov     a,#0x44
18EE 120100    4837            lcall   ___fsmul
18F1 858248    4838            mov     _Bridge_Rotate_sloc2_1_0,dpl
18F4 858349    4839            mov     (_Bridge_Rotate_sloc2_1_0 + 1),dph
18F7 85F04A    4840            mov     (_Bridge_Rotate_sloc2_1_0 + 2),b
18FA F54B      4841            mov     (_Bridge_Rotate_sloc2_1_0 + 3),a
18FC E581      4842            mov     a,sp
18FE 24FC      4843            add     a,#0xfc
1900 F581      4844            mov     sp,a
1902 85A882    4845            mov     dpl,_Bridge_Rotate_sloc0_1_0
1905 85A983    4846            mov     dph,(_Bridge_Rotate_sloc0_1_0 + 1)
1908 85AAF0    4847            mov     b,(_Bridge_Rotate_sloc0_1_0 + 2)
190B 120100    4848            lcall   __gptrget
190E F9        4849            mov     r1,a
190F A3        4850            inc     dptr
1910 120100    4851            lcall   __gptrget
1913 FD        4852            mov     r5,a
1914 E9        4853            mov     a,r1
1915 2470      4854            add     a,#0x70
1917 F582      4855            mov     dpl,a
1919 ED        4856            mov     a,r5
191A 34FE      4857            addc    a,#0xfe
191C F583      4858            mov     dph,a
191E 120100    4859            lcall   ___uint2fs
1921 AD82      4860            mov     r5,dpl
1923 AE83      4861            mov     r6,dph
1925 AFF0      4862            mov     r7,b
1927 F8        4863            mov     r0,a
1928 C005      4864            push    ar5
192A C006      4865            push    ar6
192C C007      4866            push    ar7
192E C000      4867            push    ar0
1930 854882    4868            mov     dpl,_Bridge_Rotate_sloc2_1_0
1933 854983    4869            mov     dph,(_Bridge_Rotate_sloc2_1_0 + 1)
1936 854AF0    4870            mov     b,(_Bridge_Rotate_sloc2_1_0 + 2)
1939 E54B      4871            mov     a,(_Bridge_Rotate_sloc2_1_0 + 3)
193B 120100    4872            lcall   ___fslt
193E AD82      4873            mov     r5,dpl
1940 E581      4874            mov     a,sp
1942 24FC      4875            add     a,#0xfc
1944 F581      4876            mov     sp,a
1946 ED        4877            mov     a,r5
1947 6001      4878            jz      L026023?
1949 020100    4879            ljmp    L026002?
194C           4880   L026023?:
194C           4881   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:571: Find_Tape(gnd_VM,0);
194C E4        4882            clr     a
194D F528      4883            mov     _Find_Tape_PARM_2,a
194F F529      4884            mov     (_Find_Tape_PARM_2 + 1),a
1951 85A882    4885            mov     dpl,_Bridge_Rotate_sloc0_1_0
1954 85A983    4886            mov     dph,(_Bridge_Rotate_sloc0_1_0 + 1)
1957 85AAF0    4887            mov     b,(_Bridge_Rotate_sloc0_1_0 + 2)
195A 020100    4888            ljmp    _Find_Tape
195D           4889   L026010?:
195D           4890   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:573: mot_dir(1,0);
195D E4        4891            clr     a
195E F540      4892            mov     _mot_dir_PARM_2,a
1960 F541      4893            mov     (_mot_dir_PARM_2 + 1),a
1962 900001    4894            mov     dptr,#0x0001
1965 120100    4895            lcall   _mot_dir
1968           4896   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:574: pwmL = BASEPWM+10;
1968 904D68    4897            mov     dptr,#_pwmL
196B 7423      4898            mov     a,#0x23
196D F0        4899            movx    @dptr,a
196E E4        4900            clr     a
196F A3        4901            inc     dptr
1970 F0        4902            movx    @dptr,a
1971           4903   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:575: pwmR = BASEPWM+10;      
1971 904D28    4904            mov     dptr,#_pwmR
1974 7423      4905            mov     a,#0x23
1976 F0        4906            movx    @dptr,a
1977 E4        4907            clr     a
1978 A3        4908            inc     dptr
1979 F0        4909            movx    @dptr,a
197A           4910   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:576: waitms(700);
197A 9002BC    4911            mov     dptr,#0x02BC
197D 120100    4912            lcall   _waitms
1980           4913   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:577: while ((Volts_at_Pin(QFP32_MUX_P1_6)*1000 < *gnd_VL-TAPEOFFSET) || (Volts_at_Pin(QFP32_MUX_P1_5)*1000 < *gnd_VM-TAPEOFFSET));
1980 AD98      4914            mov     r5,_Bridge_Rotate_PARM_2
1982 AE99      4915            mov     r6,(_Bridge_Rotate_PARM_2 + 1)
1984 AF9A      4916            mov     r7,(_Bridge_Rotate_PARM_2 + 2)
1986           4917   L026006?:
1986 C005      4918            push    ar5
1988 C006      4919            push    ar6
198A C007      4920            push    ar7
198C 75820C    4921            mov     dpl,#0x0C
198F C005      4922            push    ar5
1991 C006      4923            push    ar6
1993 C007      4924            push    ar7
1995 120100    4925            lcall   _Volts_at_Pin
1998 A882      4926            mov     r0,dpl
199A A983      4927            mov     r1,dph
199C AAF0      4928            mov     r2,b
199E FB        4929            mov     r3,a
199F C000      4930            push    ar0
19A1 C001      4931            push    ar1
19A3 C002      4932            push    ar2
19A5 C003      4933            push    ar3
19A7 900000    4934            mov     dptr,#0x0000
19AA 75F07A    4935            mov     b,#0x7A
19AD 7444      4936            mov     a,#0x44
19AF 120100    4937            lcall   ___fsmul
19B2 AA82      4938            mov     r2,dpl
19B4 AB83      4939            mov     r3,dph
19B6 ACF0      4940            mov     r4,b
19B8 F8        4941            mov     r0,a
19B9 E581      4942            mov     a,sp
19BB 24FC      4943            add     a,#0xfc
19BD F581      4944            mov     sp,a
19BF D007      4945            pop     ar7
19C1 D006      4946            pop     ar6
19C3 D005      4947            pop     ar5
19C5 855882    4948            mov     dpl,_Bridge_Rotate_gnd_VL_1_157
19C8 855983    4949            mov     dph,(_Bridge_Rotate_gnd_VL_1_157 + 1)
19CB 855AF0    4950            mov     b,(_Bridge_Rotate_gnd_VL_1_157 + 2)
19CE 120100    4951            lcall   __gptrget
19D1 F9        4952            mov     r1,a
19D2 A3        4953            inc     dptr
19D3 120100    4954            lcall   __gptrget
19D6 FD        4955            mov     r5,a
19D7 E9        4956            mov     a,r1
19D8 2470      4957            add     a,#0x70
19DA F582      4958            mov     dpl,a
19DC ED        4959            mov     a,r5
19DD 34FE      4960            addc    a,#0xfe
19DF F583      4961            mov     dph,a
19E1 C002      4962            push    ar2
19E3 C003      4963            push    ar3
19E5 C004      4964            push    ar4
19E7 C000      4965            push    ar0
19E9 120100    4966            lcall   ___uint2fs
19EC AD82      4967            mov     r5,dpl
19EE AE83      4968            mov     r6,dph
19F0 AFF0      4969            mov     r7,b
19F2 F9        4970            mov     r1,a
19F3 D000      4971            pop     ar0
19F5 D004      4972            pop     ar4
19F7 D003      4973            pop     ar3
19F9 D002      4974            pop     ar2
19FB C005      4975            push    ar5
19FD C006      4976            push    ar6
19FF C007      4977            push    ar7
1A01 C005      4978            push    ar5
1A03 C006      4979            push    ar6
1A05 C007      4980            push    ar7
1A07 C001      4981            push    ar1
1A09 8A82      4982            mov     dpl,r2
1A0B 8B83      4983            mov     dph,r3
1A0D 8CF0      4984            mov     b,r4
1A0F E8        4985            mov     a,r0
1A10 120100    4986            lcall   ___fslt
1A13 AA82      4987            mov     r2,dpl
1A15 E581      4988            mov     a,sp
1A17 24FC      4989            add     a,#0xfc
1A19 F581      4990            mov     sp,a
1A1B D007      4991            pop     ar7
1A1D D006      4992            pop     ar6
1A1F D005      4993            pop     ar5
1A21 D007      4994            pop     ar7
1A23 D006      4995            pop     ar6
1A25 D005      4996            pop     ar5
1A27 EA        4997            mov     a,r2
1A28 6001      4998            jz      L026024?
1A2A 020100    4999            ljmp    L026006?
1A2D           5000   L026024?:
1A2D 75820B    5001            mov     dpl,#0x0B
1A30 C005      5002            push    ar5
1A32 C006      5003            push    ar6
1A34 C007      5004            push    ar7
1A36 120100    5005            lcall   _Volts_at_Pin
1A39 AA82      5006            mov     r2,dpl
1A3B AB83      5007            mov     r3,dph
1A3D ACF0      5008            mov     r4,b
1A3F F8        5009            mov     r0,a
1A40 C002      5010            push    ar2
1A42 C003      5011            push    ar3
1A44 C004      5012            push    ar4
1A46 C000      5013            push    ar0
1A48 900000    5014            mov     dptr,#0x0000
1A4B 75F07A    5015            mov     b,#0x7A
1A4E 7444      5016            mov     a,#0x44
1A50 120100    5017            lcall   ___fsmul
1A53 858248    5018            mov     _Bridge_Rotate_sloc2_1_0,dpl
1A56 858349    5019            mov     (_Bridge_Rotate_sloc2_1_0 + 1),dph
1A59 85F04A    5020            mov     (_Bridge_Rotate_sloc2_1_0 + 2),b
1A5C F54B      5021            mov     (_Bridge_Rotate_sloc2_1_0 + 3),a
1A5E E581      5022            mov     a,sp
1A60 24FC      5023            add     a,#0xfc
1A62 F581      5024            mov     sp,a
1A64 D007      5025            pop     ar7
1A66 D006      5026            pop     ar6
1A68 D005      5027            pop     ar5
1A6A 8D82      5028            mov     dpl,r5
1A6C 8E83      5029            mov     dph,r6
1A6E 8FF0      5030            mov     b,r7
1A70 120100    5031            lcall   __gptrget
1A73 F9        5032            mov     r1,a
1A74 A3        5033            inc     dptr
1A75 120100    5034            lcall   __gptrget
1A78 FA        5035            mov     r2,a
1A79 E9        5036            mov     a,r1
1A7A 2470      5037            add     a,#0x70
1A7C F582      5038            mov     dpl,a
1A7E EA        5039            mov     a,r2
1A7F 34FE      5040            addc    a,#0xfe
1A81 F583      5041            mov     dph,a
1A83 C005      5042            push    ar5
1A85 C006      5043            push    ar6
1A87 C007      5044            push    ar7
1A89 120100    5045            lcall   ___uint2fs
1A8C AA82      5046            mov     r2,dpl
1A8E AB83      5047            mov     r3,dph
1A90 ACF0      5048            mov     r4,b
1A92 F8        5049            mov     r0,a
1A93 C002      5050            push    ar2
1A95 C003      5051            push    ar3
1A97 C004      5052            push    ar4
1A99 C000      5053            push    ar0
1A9B 854882    5054            mov     dpl,_Bridge_Rotate_sloc2_1_0
1A9E 854983    5055            mov     dph,(_Bridge_Rotate_sloc2_1_0 + 1)
1AA1 854AF0    5056            mov     b,(_Bridge_Rotate_sloc2_1_0 + 2)
1AA4 E54B      5057            mov     a,(_Bridge_Rotate_sloc2_1_0 + 3)
1AA6 120100    5058            lcall   ___fslt
1AA9 AA82      5059            mov     r2,dpl
1AAB E581      5060            mov     a,sp
1AAD 24FC      5061            add     a,#0xfc
1AAF F581      5062            mov     sp,a
1AB1 D007      5063            pop     ar7
1AB3 D006      5064            pop     ar6
1AB5 D005      5065            pop     ar5
1AB7 EA        5066            mov     a,r2
1AB8 6001      5067            jz      L026025?
1ABA 020100    5068            ljmp    L026006?
1ABD           5069   L026025?:
1ABD           5070   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:578: Find_Tape(gnd_VM,0);
1ABD E4        5071            clr     a
1ABE F528      5072            mov     _Find_Tape_PARM_2,a
1AC0 F529      5073            mov     (_Find_Tape_PARM_2 + 1),a
1AC2 8D82      5074            mov     dpl,r5
1AC4 8E83      5075            mov     dph,r6
1AC6 8FF0      5076            mov     b,r7
1AC8           5077   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:580: return;
1AC8 020100    5078            ljmp    _Find_Tape
1ACB           5079   ;------------------------------------------------------------
1ACB           5080   ;Allocation info for local variables in function 'autonomous_prime'
1ACB           5081   ;------------------------------------------------------------
1ACB           5082   ;gnd_VL                    Allocated with name '_autonomous_prime_gnd_VL_1_162'
1ACB           5083   ;gnd_VR                    Allocated with name '_autonomous_prime_gnd_VR_1_162'
1ACB           5084   ;gnd_VM                    Allocated with name '_autonomous_prime_gnd_VM_1_162'
1ACB           5085   ;------------------------------------------------------------
1ACB           5086   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:583: void autonomous_prime(void)
1ACB           5087   ;        -----------------------------------------
1ACB           5088   ;         function autonomous_prime
1ACB           5089   ;        -----------------------------------------
1ACB           5090   _autonomous_prime:
1ACB           5091   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:590: find_bridge_flag = 0;
1ACB C238      5092            clr     _find_bridge_flag
1ACD           5093   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:591: Calibrate_LSensors(&gnd_VL,&gnd_VM,&gnd_VR);    
1ACD 756818    5094            mov     _Calibrate_LSensors_PARM_2,#_autonomous_prime_gnd_VM_1_162
1AD0 7569CD    5095            mov     (_Calibrate_LSensors_PARM_2 + 1),#(_autonomous_prime_gnd_VM_1_162 >> 8)
1AD3 756A00    5096            mov     (_Calibrate_LSensors_PARM_2 + 2),#0x00
1AD6 7518C8    5097            mov     _Calibrate_LSensors_PARM_3,#_autonomous_prime_gnd_VR_1_162
1AD9 7519CC    5098            mov     (_Calibrate_LSensors_PARM_3 + 1),#(_autonomous_prime_gnd_VR_1_162 >> 8)
1ADC 751A00    5099            mov     (_Calibrate_LSensors_PARM_3 + 2),#0x00
1ADF 90CC78    5100            mov     dptr,#_autonomous_prime_gnd_VL_1_162
1AE2 75F000    5101            mov     b,#0x00
1AE5 120100    5102            lcall   _Calibrate_LSensors
1AE8           5103   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:592: Find_Tape(&gnd_VM,0);           //exits when middle sensor hits tape
1AE8 E4        5104            clr     a
1AE9 F528      5105            mov     _Find_Tape_PARM_2,a
1AEB F529      5106            mov     (_Find_Tape_PARM_2 + 1),a
1AED 90CD18    5107            mov     dptr,#_autonomous_prime_gnd_VM_1_162
1AF0 75F000    5108            mov     b,#0x00
1AF3 120100    5109            lcall   _Find_Tape
1AF6           5110   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:593: Rotate(&gnd_VL,&gnd_VR);                        //exits when middle sensor on tape, right and left not
1AF6 75D8C8    5111            mov     _Rotate_PARM_2,#_autonomous_prime_gnd_VR_1_162
1AF9 75D9CC    5112            mov     (_Rotate_PARM_2 + 1),#(_autonomous_prime_gnd_VR_1_162 >> 8)
1AFC 75DA00    5113            mov     (_Rotate_PARM_2 + 2),#0x00
1AFF 90CC78    5114            mov     dptr,#_autonomous_prime_gnd_VL_1_162
1B02 75F000    5115            mov     b,#0x00
1B05 120100    5116            lcall   _Rotate
1B08           5117   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:594: break_when_dir_found = 1;
1B08 D208      5118            setb    _break_when_dir_found
1B0A           5119   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:595: Follow_Tape(&gnd_VL,&gnd_VM,&gnd_VR);           //exits when direction is found
1B0A 75C818    5120            mov     _Follow_Tape_PARM_2,#_autonomous_prime_gnd_VM_1_162
1B0D 75C9CD    5121            mov     (_Follow_Tape_PARM_2 + 1),#(_autonomous_prime_gnd_VM_1_162 >> 8)
1B10 75CA00    5122            mov     (_Follow_Tape_PARM_2 + 2),#0x00
1B13 7578C8    5123            mov     _Follow_Tape_PARM_3,#_autonomous_prime_gnd_VR_1_162
1B16 7579CC    5124            mov     (_Follow_Tape_PARM_3 + 1),#(_autonomous_prime_gnd_VR_1_162 >> 8)
1B19 757A00    5125            mov     (_Follow_Tape_PARM_3 + 2),#0x00
1B1C 90CC78    5126            mov     dptr,#_autonomous_prime_gnd_VL_1_162
1B1F 75F000    5127            mov     b,#0x00
1B22 120100    5128            lcall   _Follow_Tape
1B25           5129   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:596: stop();
1B25 120100    5130            lcall   _stop
1B28           5131   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:597: Claw_Pos(10);
1B28 90000A    5132            mov     dptr,#0x000A
1B2B 120100    5133            lcall   _Claw_Pos
1B2E           5134   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:598: waitms(1000);                                                           //allow the claw to open before IR sensors scan
1B2E 9003E8    5135            mov     dptr,#0x03E8
1B31 120100    5136            lcall   _waitms
1B34           5137   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:599: Find_Object();                                                          //exits when an object is detected in front of IR or ultrasonic sensor
1B34 120100    5138            lcall   _Find_Object
1B37           5139   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:600: Track_Object();                                                                 //exits when claw has been closed on the object
1B37 120100    5140            lcall   _Track_Object
1B3A           5141   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:601: Calibrate_LSensors(&gnd_VL,&gnd_VM,&gnd_VR);                                                                                                                                                    //needed?
1B3A 756818    5142            mov     _Calibrate_LSensors_PARM_2,#_autonomous_prime_gnd_VM_1_162
1B3D 7569CD    5143            mov     (_Calibrate_LSensors_PARM_2 + 1),#(_autonomous_prime_gnd_VM_1_162 >> 8)
1B40 756A00    5144            mov     (_Calibrate_LSensors_PARM_2 + 2),#0x00
1B43 7518C8    5145            mov     _Calibrate_LSensors_PARM_3,#_autonomous_prime_gnd_VR_1_162
1B46 7519CC    5146            mov     (_Calibrate_LSensors_PARM_3 + 1),#(_autonomous_prime_gnd_VR_1_162 >> 8)
1B49 751A00    5147            mov     (_Calibrate_LSensors_PARM_3 + 2),#0x00
1B4C 90CC78    5148            mov     dptr,#_autonomous_prime_gnd_VL_1_162
1B4F 75F000    5149            mov     b,#0x00
1B52 120100    5150            lcall   _Calibrate_LSensors
1B55           5151   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:602: Find_Tape(&gnd_VM,1);           //exits when middle sensor hits tape (backwards)
1B55 752801    5152            mov     _Find_Tape_PARM_2,#0x01
1B58 E4        5153            clr     a
1B59 F529      5154            mov     (_Find_Tape_PARM_2 + 1),a
1B5B 90CD18    5155            mov     dptr,#_autonomous_prime_gnd_VM_1_162
1B5E 75F000    5156            mov     b,#0x00
1B61 120100    5157            lcall   _Find_Tape
1B64           5158   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:603: dir_count = 0;                                                          //reset direction counter to find new direction
1B64 904AA8    5159            mov     dptr,#_dir_count
1B67 E4        5160            clr     a
1B68 F0        5161            movx    @dptr,a
1B69 A3        5162            inc     dptr
1B6A F0        5163            movx    @dptr,a
1B6B           5164   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:604: Follow_Tape(&gnd_VL,&gnd_VM,&gnd_VR);           //exits when direction is found
1B6B 75C818    5165            mov     _Follow_Tape_PARM_2,#_autonomous_prime_gnd_VM_1_162
1B6E 75C9CD    5166            mov     (_Follow_Tape_PARM_2 + 1),#(_autonomous_prime_gnd_VM_1_162 >> 8)
1B71 75CA00    5167            mov     (_Follow_Tape_PARM_2 + 2),#0x00
1B74 7578C8    5168            mov     _Follow_Tape_PARM_3,#_autonomous_prime_gnd_VR_1_162
1B77 7579CC    5169            mov     (_Follow_Tape_PARM_3 + 1),#(_autonomous_prime_gnd_VR_1_162 >> 8)
1B7A 757A00    5170            mov     (_Follow_Tape_PARM_3 + 2),#0x00
1B7D 90CC78    5171            mov     dptr,#_autonomous_prime_gnd_VL_1_162
1B80 75F000    5172            mov     b,#0x00
1B83 120100    5173            lcall   _Follow_Tape
1B86           5174   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:605: find_bridge_flag = 1;                                           //tell follow_tape to find the bridge
1B86 D238      5175            setb    _find_bridge_flag
1B88           5176   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:606: circ2 = 1;                                                                      //looking for second circle
1B88 D2B8      5177            setb    _circ2
1B8A           5178   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:607: Follow_Tape(&gnd_VL,&gnd_VM,&gnd_VR);           //exits when it has dropped the object in the other circle
1B8A 75C818    5179            mov     _Follow_Tape_PARM_2,#_autonomous_prime_gnd_VM_1_162
1B8D 75C9CD    5180            mov     (_Follow_Tape_PARM_2 + 1),#(_autonomous_prime_gnd_VM_1_162 >> 8)
1B90 75CA00    5181            mov     (_Follow_Tape_PARM_2 + 2),#0x00
1B93 7578C8    5182            mov     _Follow_Tape_PARM_3,#_autonomous_prime_gnd_VR_1_162
1B96 7579CC    5183            mov     (_Follow_Tape_PARM_3 + 1),#(_autonomous_prime_gnd_VR_1_162 >> 8)
1B99 757A00    5184            mov     (_Follow_Tape_PARM_3 + 2),#0x00
1B9C 90CC78    5185            mov     dptr,#_autonomous_prime_gnd_VL_1_162
1B9F 75F000    5186            mov     b,#0x00
1BA2 120100    5187            lcall   _Follow_Tape
1BA5           5188   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:610: stop();
1BA5 120100    5189            lcall   _stop
1BA8           5190   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:611: waitms(500);
1BA8 9001F4    5191            mov     dptr,#0x01F4
1BAB 120100    5192            lcall   _waitms
1BAE           5193   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:612: Calibrate_LSensors(&gnd_VL,&gnd_VM,&gnd_VR);                                                                                                                                                    //needed?
1BAE 756818    5194            mov     _Calibrate_LSensors_PARM_2,#_autonomous_prime_gnd_VM_1_162
1BB1 7569CD    5195            mov     (_Calibrate_LSensors_PARM_2 + 1),#(_autonomous_prime_gnd_VM_1_162 >> 8)
1BB4 756A00    5196            mov     (_Calibrate_LSensors_PARM_2 + 2),#0x00
1BB7 7518C8    5197            mov     _Calibrate_LSensors_PARM_3,#_autonomous_prime_gnd_VR_1_162
1BBA 7519CC    5198            mov     (_Calibrate_LSensors_PARM_3 + 1),#(_autonomous_prime_gnd_VR_1_162 >> 8)
1BBD 751A00    5199            mov     (_Calibrate_LSensors_PARM_3 + 2),#0x00
1BC0 90CC78    5200            mov     dptr,#_autonomous_prime_gnd_VL_1_162
1BC3 75F000    5201            mov     b,#0x00
1BC6 120100    5202            lcall   _Calibrate_LSensors
1BC9           5203   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:613: Find_Tape(&gnd_VM,1);
1BC9 752801    5204            mov     _Find_Tape_PARM_2,#0x01
1BCC E4        5205            clr     a
1BCD F529      5206            mov     (_Find_Tape_PARM_2 + 1),a
1BCF 90CD18    5207            mov     dptr,#_autonomous_prime_gnd_VM_1_162
1BD2 75F000    5208            mov     b,#0x00
1BD5 120100    5209            lcall   _Find_Tape
1BD8           5210   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:614: Rotate(&gnd_VL,&gnd_VR);                        //exits when middle sensor on tape, right and left not
1BD8 75D8C8    5211            mov     _Rotate_PARM_2,#_autonomous_prime_gnd_VR_1_162
1BDB 75D9CC    5212            mov     (_Rotate_PARM_2 + 1),#(_autonomous_prime_gnd_VR_1_162 >> 8)
1BDE 75DA00    5213            mov     (_Rotate_PARM_2 + 2),#0x00
1BE1 90CC78    5214            mov     dptr,#_autonomous_prime_gnd_VL_1_162
1BE4 75F000    5215            mov     b,#0x00
1BE7 120100    5216            lcall   _Rotate
1BEA           5217   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:615: Claw_Pos(2);                                                            //close the claw
1BEA 900002    5218            mov     dptr,#0x0002
1BED 120100    5219            lcall   _Claw_Pos
1BF0           5220   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:616: dir_count = 0;
1BF0 904AA8    5221            mov     dptr,#_dir_count
1BF3 E4        5222            clr     a
1BF4 F0        5223            movx    @dptr,a
1BF5 A3        5224            inc     dptr
1BF6 F0        5225            movx    @dptr,a
1BF7           5226   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:617: break_when_dir_found = 1;
1BF7 D208      5227            setb    _break_when_dir_found
1BF9           5228   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:618: Follow_Tape(&gnd_VL,&gnd_VM,&gnd_VR);           //exits when direction is found
1BF9 75C818    5229            mov     _Follow_Tape_PARM_2,#_autonomous_prime_gnd_VM_1_162
1BFC 75C9CD    5230            mov     (_Follow_Tape_PARM_2 + 1),#(_autonomous_prime_gnd_VM_1_162 >> 8)
1BFF 75CA00    5231            mov     (_Follow_Tape_PARM_2 + 2),#0x00
1C02 7578C8    5232            mov     _Follow_Tape_PARM_3,#_autonomous_prime_gnd_VR_1_162
1C05 7579CC    5233            mov     (_Follow_Tape_PARM_3 + 1),#(_autonomous_prime_gnd_VR_1_162 >> 8)
1C08 757A00    5234            mov     (_Follow_Tape_PARM_3 + 2),#0x00
1C0B 90CC78    5235            mov     dptr,#_autonomous_prime_gnd_VL_1_162
1C0E 75F000    5236            mov     b,#0x00
1C11 120100    5237            lcall   _Follow_Tape
1C14           5238   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:619: find_bridge_flag = 1;                                           //tell follow_tape to find the bridge
1C14 D238      5239            setb    _find_bridge_flag
1C16           5240   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:620: circ2 = 0;                                                                      //looking for first circle
1C16 C2B8      5241            clr     _circ2
1C18           5242   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:621: Follow_Tape(&gnd_VL,&gnd_VM,&gnd_VR);           //exits when it has found the first circle (does not have an object)
1C18 75C818    5243            mov     _Follow_Tape_PARM_2,#_autonomous_prime_gnd_VM_1_162
1C1B 75C9CD    5244            mov     (_Follow_Tape_PARM_2 + 1),#(_autonomous_prime_gnd_VM_1_162 >> 8)
1C1E 75CA00    5245            mov     (_Follow_Tape_PARM_2 + 2),#0x00
1C21 7578C8    5246            mov     _Follow_Tape_PARM_3,#_autonomous_prime_gnd_VR_1_162
1C24 7579CC    5247            mov     (_Follow_Tape_PARM_3 + 1),#(_autonomous_prime_gnd_VR_1_162 >> 8)
1C27 757A00    5248            mov     (_Follow_Tape_PARM_3 + 2),#0x00
1C2A 90CC78    5249            mov     dptr,#_autonomous_prime_gnd_VL_1_162
1C2D 75F000    5250            mov     b,#0x00
1C30 120100    5251            lcall   _Follow_Tape
1C33           5252   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:623: stop();
1C33 120100    5253            lcall   _stop
1C36           5254   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:624: waitms(500);
1C36 9001F4    5255            mov     dptr,#0x01F4
1C39           5256   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:625: return;                                     //exit the program
1C39 020100    5257            ljmp    _waitms
1C3C           5258   ;------------------------------------------------------------
1C3C           5259   ;Allocation info for local variables in function '_c51_external_startup'
1C3C           5260   ;------------------------------------------------------------
1C3C           5261   ;------------------------------------------------------------
1C3C           5262   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:75: char _c51_external_startup (void)
1C3C           5263   ;        -----------------------------------------
1C3C           5264   ;         function _c51_external_startup
1C3C           5265   ;        -----------------------------------------
1C3C           5266   __c51_external_startup:
1C3C           5267   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:78: SFRPAGE = 0x00;
1C3C 75A700    5268            mov     _SFRPAGE,#0x00
1C3F           5269   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:79: WDTCN = 0xDE; //First key
1C3F 7597DE    5270            mov     _WDTCN,#0xDE
1C42           5271   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:80: WDTCN = 0xAD; //Second key
1C42 7597AD    5272            mov     _WDTCN,#0xAD
1C45           5273   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:82: VDM0CN=0x80;       // enable VDD monitor
1C45 75FF80    5274            mov     _VDM0CN,#0x80
1C48           5275   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:83: RSTSRC=0x02|0x04;  // Enable reset on missing clock detector and VDD
1C48 75EF06    5276            mov     _RSTSRC,#0x06
1C4B           5277   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:90: SFRPAGE = 0x10;
1C4B 75A710    5278            mov     _SFRPAGE,#0x10
1C4E           5279   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:91: PFE0CN  = 0x20; // SYSCLK < 75 MHz.
1C4E 75C120    5280            mov     _PFE0CN,#0x20
1C51           5281   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:92: SFRPAGE = 0x00;
1C51 75A700    5282            mov     _SFRPAGE,#0x00
1C54           5283   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:113: CLKSEL = 0x00;
1C54 75A900    5284            mov     _CLKSEL,#0x00
1C57           5285   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:114: CLKSEL = 0x00;
1C57 75A900    5286            mov     _CLKSEL,#0x00
1C5A           5287   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:115: while ((CLKSEL & 0x80) == 0);
1C5A           5288   L028001?:
1C5A E5A9      5289            mov     a,_CLKSEL
1C5C 30E788    5290            jnb     acc.7,L028001?
1C5F           5291   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:116: CLKSEL = 0x03;
1C5F 75A903    5292            mov     _CLKSEL,#0x03
1C62           5293   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:117: CLKSEL = 0x03;
1C62 75A903    5294            mov     _CLKSEL,#0x03
1C65           5295   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:118: while ((CLKSEL & 0x80) == 0);
1C65           5296   L028004?:
1C65 E5A9      5297            mov     a,_CLKSEL
1C67 30E7C8    5298            jnb     acc.7,L028004?
1C6A           5299   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:123: P0MDOUT |= 0x10; // Enable UART0 TX as push-pull output
1C6A 43A410    5300            orl     _P0MDOUT,#0x10
1C6D           5301   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:124: XBR0     = 0x01; // Enable UART0 on P0.4(TX) and P0.5(RX)                     
1C6D 75E101    5302            mov     _XBR0,#0x01
1C70           5303   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:125: XBR1     = 0X00;
1C70 75E200    5304            mov     _XBR1,#0x00
1C73           5305   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:126: XBR2     = 0x41; // Enable crossbar and uart 1
1C73 75E341    5306            mov     _XBR2,#0x41
1C76           5307   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:132: SCON0 = 0x10;
1C76 759810    5308            mov     _SCON0,#0x10
1C79           5309   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:133: TH1 = 0x100-((SYSCLK/BAUDRATE)/(2L*12L));
1C79 758DE6    5310            mov     _TH1,#0xE6
1C7C           5311   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:134: TL1 = TH1;      // Init Timer1
1C7C 858D8B    5312            mov     _TL1,_TH1
1C7F           5313   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:135: TMOD &= ~0xf0;  // TMOD: timer 1 in 8-bit auto-reload
1C7F 53890F    5314            anl     _TMOD,#0x0F
1C82           5315   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:136: TMOD |=  0x20;                       
1C82 438920    5316            orl     _TMOD,#0x20
1C85           5317   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:137: TR1 = 1; // START Timer1
1C85 D28E      5318            setb    _TR1
1C87           5319   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:138: TI = 1;  // Indicate TX0 ready
1C87 D299      5320            setb    _TI
1C89           5321   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:141: TMR2CN0=0x00;   // Stop Timer2; Clear TF2;
1C89 75C800    5322            mov     _TMR2CN0,#0x00
1C8C           5323   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:142: CKCON0|=0b_0001_0000; // Timer 2 uses the system clock
1C8C 438E10    5324            orl     _CKCON0,#0x10
1C8F           5325   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:143: TMR2RL=(0x10000L-(SYSCLK/10000L)); // Initialize reload value
1C8F 75CAE0    5326            mov     _TMR2RL,#0xE0
1C92 75CBE3    5327            mov     (_TMR2RL >> 8),#0xE3
1C95           5328   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:144: TMR2=0xffff;   // Set to reload immediately
1C95 75CEFF    5329            mov     _TMR2,#0xFF
1C98 75CFFF    5330            mov     (_TMR2 >> 8),#0xFF
1C9B           5331   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:145: ET2=1;         // Enable Timer2 interrupts
1C9B D2AD      5332            setb    _ET2
1C9D           5333   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:146: TR2=1;         // Start Timer2 (TMR2CN is bit addressable)
1C9D D2CA      5334            setb    _TR2
1C9F           5335   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:150: return 0;
1C9F 758200    5336            mov     dpl,#0x00
1CA2 22        5337            ret
1CA3           5338   ;------------------------------------------------------------
1CA3           5339   ;Allocation info for local variables in function 'UART1_Init'
1CA3           5340   ;------------------------------------------------------------
1CA3           5341   ;baudrate                  Allocated to registers r2 r3 r4 r5 
1CA3           5342   ;------------------------------------------------------------
1CA3           5343   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:153: void UART1_Init (unsigned long baudrate)
1CA3           5344   ;        -----------------------------------------
1CA3           5345   ;         function UART1_Init
1CA3           5346   ;        -----------------------------------------
1CA3           5347   _UART1_Init:
1CA3 AA82      5348            mov     r2,dpl
1CA5 AB83      5349            mov     r3,dph
1CA7 ACF0      5350            mov     r4,b
1CA9 FD        5351            mov     r5,a
1CAA           5352   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:155: SFRPAGE = 0x20;
1CAA 75A720    5353            mov     _SFRPAGE,#0x20
1CAD           5354   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:156: SMOD1 = 0x0C; // no parity, 8 data bits, 1 stop bit
1CAD 75930C    5355            mov     _SMOD1,#0x0C
1CB0           5356   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:157: SCON1 = 0x10;
1CB0 75C810    5357            mov     _SCON1,#0x10
1CB3           5358   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:158: SBCON1 =0x00;   // disable baud rate generator
1CB3 759400    5359            mov     _SBCON1,#0x00
1CB6           5360   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:159: SBRL1 = 0x10000L-((SYSCLK/baudrate)/(12L*2L));
1CB6 8A00      5361            mov     __divulong_PARM_2,r2
1CB8 8B01      5362            mov     (__divulong_PARM_2 + 1),r3
1CBA 8C02      5363            mov     (__divulong_PARM_2 + 2),r4
1CBC 8D03      5364            mov     (__divulong_PARM_2 + 3),r5
1CBE 90A200    5365            mov     dptr,#0xA200
1CC1 75F04A    5366            mov     b,#0x4A
1CC4 7404      5367            mov     a,#0x04
1CC6 120100    5368            lcall   __divulong
1CC9 AA82      5369            mov     r2,dpl
1CCB AB83      5370            mov     r3,dph
1CCD ACF0      5371            mov     r4,b
1CCF FD        5372            mov     r5,a
1CD0 750018    5373            mov     __divulong_PARM_2,#0x18
1CD3 E4        5374            clr     a
1CD4 F501      5375            mov     (__divulong_PARM_2 + 1),a
1CD6 F502      5376            mov     (__divulong_PARM_2 + 2),a
1CD8 F503      5377            mov     (__divulong_PARM_2 + 3),a
1CDA 8A82      5378            mov     dpl,r2
1CDC 8B83      5379            mov     dph,r3
1CDE 8CF0      5380            mov     b,r4
1CE0 ED        5381            mov     a,r5
1CE1 120100    5382            lcall   __divulong
1CE4 AA82      5383            mov     r2,dpl
1CE6 AB83      5384            mov     r3,dph
1CE8 ACF0      5385            mov     r4,b
1CEA FD        5386            mov     r5,a
1CEB E4        5387            clr     a
1CEC C3        5388            clr     c
1CED 9A        5389            subb    a,r2
1CEE FA        5390            mov     r2,a
1CEF E4        5391            clr     a
1CF0 9B        5392            subb    a,r3
1CF1 FB        5393            mov     r3,a
1CF2 7401      5394            mov     a,#0x01
1CF4 9C        5395            subb    a,r4
1CF5 E4        5396            clr     a
1CF6 9D        5397            subb    a,r5
1CF7 8A95      5398            mov     _SBRL1,r2
1CF9 8B96      5399            mov     (_SBRL1 >> 8),r3
1CFB           5400   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:160: TI1 = 1; // indicate ready for TX
1CFB D2C9      5401            setb    _TI1
1CFD           5402   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:161: SBCON1 |= 0x40;   // enable baud rate generator
1CFD 439440    5403            orl     _SBCON1,#0x40
1D00           5404   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:162: SFRPAGE = 0x00;
1D00 75A700    5405            mov     _SFRPAGE,#0x00
1D03 22        5406            ret
1D04           5407   ;------------------------------------------------------------
1D04           5408   ;Allocation info for local variables in function 'getchar1'
1D04           5409   ;------------------------------------------------------------
1D04           5410   ;c                         Allocated to registers 
1D04           5411   ;------------------------------------------------------------
1D04           5412   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:166: char getchar1 (void)
1D04           5413   ;        -----------------------------------------
1D04           5414   ;         function getchar1
1D04           5415   ;        -----------------------------------------
1D04           5416   _getchar1:
1D04           5417   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:169: SFRPAGE = 0x20;
1D04 75A720    5418            mov     _SFRPAGE,#0x20
1D07           5419   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:170: while (!RI1);
1D07           5420   L030001?:
1D07           5421   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:171: RI1=0;
1D07 10C8D8    5422            jbc     _RI1,L030008?
1D0A 8001      5423            sjmp    L030001?
1D0C           5424   L030008?:
1D0C           5425   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:173: SCON1&=0b_0011_1111;
1D0C 53C83F    5426            anl     _SCON1,#0x3F
1D0F           5427   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:174: c = SBUF1;
1D0F 859282    5428            mov     dpl,_SBUF1
1D12           5429   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:175: SFRPAGE = 0x00;
1D12 75A700    5430            mov     _SFRPAGE,#0x00
1D15           5431   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:176: return (c);
1D15 22        5432            ret
1D16           5433   ;------------------------------------------------------------
1D16           5434   ;Allocation info for local variables in function 'main'
1D16           5435   ;------------------------------------------------------------
1D16           5436   ;------------------------------------------------------------
1D16           5437   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:178: void main (void)
1D16           5438   ;        -----------------------------------------
1D16           5439   ;         function main
1D16           5440   ;        -----------------------------------------
1D16           5441   _main:
1D16           5442   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:190: UART1_Init(300);
1D16 90012C    5443            mov     dptr,#0x012C
1D19 E4        5444            clr     a
1D1A F5F0      5445            mov     b,a
1D1C 120100    5446            lcall   _UART1_Init
1D1F           5447   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:191: printf("%2X\n", UART1FCN1);
1D1F AAD8      5448            mov     r2,_UART1FCN1
1D21 7B00      5449            mov     r3,#0x00
1D23 C002      5450            push    ar2
1D25 C003      5451            push    ar3
1D27 7418      5452            mov     a,#__str_0
1D29 C0E0      5453            push    acc
1D2B 7403      5454            mov     a,#(__str_0 >> 8)
1D2D C0E0      5455            push    acc
1D2F 7480      5456            mov     a,#0x80
1D31 C0E0      5457            push    acc
1D33 120100    5458            lcall   _printf
1D36 E581      5459            mov     a,sp
1D38 24FB      5460            add     a,#0xfb
1D3A F581      5461            mov     sp,a
1D3C           5462   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:192: printf("%2X\n", EIE2);
1D3C AAF3      5463            mov     r2,_EIE2
1D3E 7B00      5464            mov     r3,#0x00
1D40 C002      5465            push    ar2
1D42 C003      5466            push    ar3
1D44 7418      5467            mov     a,#__str_0
1D46 C0E0      5468            push    acc
1D48 7403      5469            mov     a,#(__str_0 >> 8)
1D4A C0E0      5470            push    acc
1D4C 7480      5471            mov     a,#0x80
1D4E C0E0      5472            push    acc
1D50 120100    5473            lcall   _printf
1D53 E581      5474            mov     a,sp
1D55 24FB      5475            add     a,#0xfb
1D57 F581      5476            mov     sp,a
1D59           5477   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:193: while(1)
1D59           5478   L031005?:
1D59           5479   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:195: P3_1 = !P3_1;
1D59 B2B1      5480            cpl     _P3_1
1D5B           5481   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:197: getchar();
1D5B 120100    5482            lcall   _getchar
1D5E           5483   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:198: if(autocar)
1D5E 30F818    5484            jnb     _autocar,L031002?
1D61           5485   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:203: x_absolute = 0;
1D61 904BA8    5486            mov     dptr,#_x_absolute
1D64 E4        5487            clr     a
1D65 F0        5488            movx    @dptr,a
1D66 A3        5489            inc     dptr
1D67 F0        5490            movx    @dptr,a
1D68           5491   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:204: y_absolute = 0;
1D68 904B68    5492            mov     dptr,#_y_absolute
1D6B E4        5493            clr     a
1D6C F0        5494            movx    @dptr,a
1D6D A3        5495            inc     dptr
1D6E F0        5496            movx    @dptr,a
1D6F           5497   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:205: open = 0;
1D6F C278      5498            clr     _open
1D71           5499   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:206: close = 0;
1D71 C238      5500            clr     _close
1D73 8001      5501            sjmp    L031003?
1D75           5502   L031002?:
1D75           5503   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:211: manual_mode();
1D75 120100    5504            lcall   _manual_mode
1D78           5505   L031003?:
1D78           5506   ;        D:\School\Elec 291\Project 2\mcar\main\test.c:213: printf("%d %d", TI1, RI1);
1D78 A2C8      5507            mov     c,_RI1
1D7A E4        5508            clr     a
1D7B 33        5509            rlc     a
1D7C FA        5510            mov     r2,a
1D7D 7B00      5511            mov     r3,#0x00
1D7F A2C9      5512            mov     c,_TI1
1D81 E4        5513            clr     a
1D82 33        5514            rlc     a
1D83 FC        5515            mov     r4,a
1D84 7D00      5516            mov     r5,#0x00
1D86 C002      5517            push    ar2
1D88 C003      5518            push    ar3
1D8A C004      5519            push    ar4
1D8C C005      5520            push    ar5
1D8E 7498      5521            mov     a,#__str_1
1D90 C0E0      5522            push    acc
1D92 7404      5523            mov     a,#(__str_1 >> 8)
1D94 C0E0      5524            push    acc
1D96 7480      5525            mov     a,#0x80
1D98 C0E0      5526            push    acc
1D9A 120100    5527            lcall   _printf
1D9D E581      5528            mov     a,sp
1D9F 24F9      5529            add     a,#0xf9
1DA1 F581      5530            mov     sp,a
1DA3 8001      5531            sjmp    L031005?
1DA5           5532            rseg R_CSEG
1DA5           5533   
0000           5534            rseg R_XINIT
0000           5535   __xinit__x_absolute:
0000 0000      5536            db 0x00,0x00    ; 0
0002           5537   __xinit__y_absolute:
0002 0000      5538            db 0x00,0x00    ; 0
0004           5539   __xinit__no_signal_0:
0004 0000      5540            db 0x00,0x00    ; 0
0006           5541   __xinit__no_signal_1:
0006 0000      5542            db 0x00,0x00    ; 0
0008           5543   __xinit__dir_count:
0008 0000      5544            db 0x00,0x00    ;  0
000A           5545   __xinit__timer_count:
000A 0000      5546            db 0x00,0x00    ; 0
000C           5547   __xinit__sonar_count:
000C 0000      5548            db 0x00,0x00    ; 0
000E           5549   __xinit__sonar_count_2:
000E 0000      5550            db 0x00,0x00    ; 0
0010           5551   __xinit__claw_pos:
0010 0200      5552            db 0x02,0x00    ; 2
0012           5553   __xinit__pwm_count:
0012 00        5554            db 0x00         ; 0
0013           5555   
0000           5556            rseg R_CONST
0000           5557   __str_0:
0000 253258    5558            db '%2X'
0003 0A        5559            db 0x0A
0004 00        5560            db 0x00
0005           5561   __str_1:
0005 25642025  5562            db '%d %d'
     64
000A 00        5563            db 0x00
000B           5564   
002E           5565            CSEG
002E           5566   
002E           5567   end
