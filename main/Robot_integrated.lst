0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1069 (Apr 23 2015) (MSVC)
0000              4   ; This file was generated Tue Apr 03 13:07:39 2018
0000              5   ;--------------------------------------------------------
                  5   $name Robot_integrated
                  6   $optc51 --model-small
0000              8            R_DSEG    segment data
0000              9            R_CSEG    segment code
0000             10            R_BSEG    segment bit
0000             11            R_XSEG    segment xdata
0000             12            R_PSEG    segment xdata
0000             13            R_ISEG    segment idata
0000             14            R_OSEG    segment data overlay
0000             15            BIT_BANK  segment data overlay
0000             16            R_HOME    segment code
0000             17            R_GSINIT  segment code
0000             18            R_IXSEG   segment xdata
0000             19            R_CONST   segment code
0000             20            R_XINIT   segment code
0000             21            R_DINIT   segment code
0000             22   
0000             23   ;--------------------------------------------------------
0000             24   ; Public variables in this module
0000             25   ;--------------------------------------------------------
0000             26            public _mot_dir_PARM_2
0000             27            public _InitPinADC_PARM_2
0000             28            public _main
0000             29            public _prime_sequence
0000             30            public _getchar1
0000             31            public _manual_mode
0000             32            public _Timer2_ISR
0000             33            public _UART1_RI
0000             34            public _UART1_Init
0000             35            public __c51_external_startup
0000             36            public _autonomous_prime
0000             37            public _Find_Object
0000             38            public _Detect_Object
0000             39            public _Track_Object
0000             40            public _Follow_Tape
0000             41            public _Calibrate_LSensors
0000             42            public _sonar_op
0000             43            public _debug
0000             44            public _spin_right
0000             45            public _spin_left
0000             46            public _stop
0000             47            public _mot_dir
0000             48            public _Volts_at_Pin
0000             49            public _ADC_at_Pin
0000             50            public _InitPinADC
0000             51            public _waitms
0000             52            public _Timer3us
0000             53            public _InitADC
0000             54            public _pwm_count
0000             55            public _claw_pos
0000             56            public _sonar_count_2
0000             57            public _sonar_count
0000             58            public _timer_count
0000             59            public _dir_count
0000             60            public _no_signal_1
0000             61            public _no_signal_0
0000             62            public _y_absolute
0000             63            public _x_absolute
0000             64            public _main_int4
0000             65            public _main_int3
0000             66            public _main_int2
0000             67            public _main_int1
0000             68            public _main_short1
0000             69            public _pwmR
0000             70            public _pwmL
0000             71            public _sequence_state
0000             72            public _sequence_timer
0000             73            public _MR_dir
0000             74            public _ML_dir
0000             75            public _counter_above_100
0000             76            public _sonar_state
0000             77            public _circ2
0000             78            public _break_when_dir_found
0000             79            public _dir_flag
0000             80            public _find_circle2_flag
0000             81            public _find_circle1_flag
0000             82            public _find_bridge_flag
0000             83            public _dir
0000             84            public _prime_awaken
0000             85            public _sequence_timeout
0000             86            public _y_dir
0000             87            public _x_dir
0000             88            public _close
0000             89            public _open
0000             90            public _boost
0000             91            public _autocar
0000             92            public _no_signal
0000             93            public _parity
0000             94            public _Bridge_Rotate_PARM_3
0000             95            public _Bridge_Rotate_PARM_2
0000             96            public _Rotate_PARM_2
0000             97            public _Find_Tape_PARM_2
0000             98            public _Follow_Tape_PARM_3
0000             99            public _Follow_Tape_PARM_2
0000            100            public _Calibrate_LSensors_PARM_3
0000            101            public _Calibrate_LSensors_PARM_2
0000            102            public _claw_control
0000            103            public _Find_Tape
0000            104            public _Rotate
0000            105            public _Bridge_Rotate
0000            106            public _Claw_Pos
0000            107   ;--------------------------------------------------------
0000            108   ; Special Function Registers
0000            109   ;--------------------------------------------------------
0000            110   _ACC            DATA 0xe0
0000            111   _ADC0ASAH       DATA 0xb6
0000            112   _ADC0ASAL       DATA 0xb5
0000            113   _ADC0ASCF       DATA 0xa1
0000            114   _ADC0ASCT       DATA 0xc7
0000            115   _ADC0CF0        DATA 0xbc
0000            116   _ADC0CF1        DATA 0xb9
0000            117   _ADC0CF2        DATA 0xdf
0000            118   _ADC0CN0        DATA 0xe8
0000            119   _ADC0CN1        DATA 0xb2
0000            120   _ADC0CN2        DATA 0xb3
0000            121   _ADC0GTH        DATA 0xc4
0000            122   _ADC0GTL        DATA 0xc3
0000            123   _ADC0H          DATA 0xbe
0000            124   _ADC0L          DATA 0xbd
0000            125   _ADC0LTH        DATA 0xc6
0000            126   _ADC0LTL        DATA 0xc5
0000            127   _ADC0MX         DATA 0xbb
0000            128   _B              DATA 0xf0
0000            129   _CKCON0         DATA 0x8e
0000            130   _CKCON1         DATA 0xa6
0000            131   _CLEN0          DATA 0xc6
0000            132   _CLIE0          DATA 0xc7
0000            133   _CLIF0          DATA 0xe8
0000            134   _CLKSEL         DATA 0xa9
0000            135   _CLOUT0         DATA 0xd1
0000            136   _CLU0CF         DATA 0xb1
0000            137   _CLU0FN         DATA 0xaf
0000            138   _CLU0MX         DATA 0x84
0000            139   _CLU1CF         DATA 0xb3
0000            140   _CLU1FN         DATA 0xb2
0000            141   _CLU1MX         DATA 0x85
0000            142   _CLU2CF         DATA 0xb6
0000            143   _CLU2FN         DATA 0xb5
0000            144   _CLU2MX         DATA 0x91
0000            145   _CLU3CF         DATA 0xbf
0000            146   _CLU3FN         DATA 0xbe
0000            147   _CLU3MX         DATA 0xae
0000            148   _CMP0CN0        DATA 0x9b
0000            149   _CMP0CN1        DATA 0x99
0000            150   _CMP0MD         DATA 0x9d
0000            151   _CMP0MX         DATA 0x9f
0000            152   _CMP1CN0        DATA 0xbf
0000            153   _CMP1CN1        DATA 0xac
0000            154   _CMP1MD         DATA 0xab
0000            155   _CMP1MX         DATA 0xaa
0000            156   _CRC0CN0        DATA 0xce
0000            157   _CRC0CN1        DATA 0x86
0000            158   _CRC0CNT        DATA 0xd3
0000            159   _CRC0DAT        DATA 0xcb
0000            160   _CRC0FLIP       DATA 0xcf
0000            161   _CRC0IN         DATA 0xca
0000            162   _CRC0ST         DATA 0xd2
0000            163   _DAC0CF0        DATA 0x91
0000            164   _DAC0CF1        DATA 0x92
0000            165   _DAC0H          DATA 0x85
0000            166   _DAC0L          DATA 0x84
0000            167   _DAC1CF0        DATA 0x93
0000            168   _DAC1CF1        DATA 0x94
0000            169   _DAC1H          DATA 0x8a
0000            170   _DAC1L          DATA 0x89
0000            171   _DAC2CF0        DATA 0x95
0000            172   _DAC2CF1        DATA 0x96
0000            173   _DAC2H          DATA 0x8c
0000            174   _DAC2L          DATA 0x8b
0000            175   _DAC3CF0        DATA 0x9a
0000            176   _DAC3CF1        DATA 0x9c
0000            177   _DAC3H          DATA 0x8e
0000            178   _DAC3L          DATA 0x8d
0000            179   _DACGCF0        DATA 0x88
0000            180   _DACGCF1        DATA 0x98
0000            181   _DACGCF2        DATA 0xa2
0000            182   _DERIVID        DATA 0xad
0000            183   _DEVICEID       DATA 0xb5
0000            184   _DPH            DATA 0x83
0000            185   _DPL            DATA 0x82
0000            186   _EIE1           DATA 0xe6
0000            187   _EIE2           DATA 0xf3
0000            188   _EIP1           DATA 0xbb
0000            189   _EIP1H          DATA 0xee
0000            190   _EIP2           DATA 0xed
0000            191   _EIP2H          DATA 0xf6
0000            192   _EMI0CN         DATA 0xe7
0000            193   _FLKEY          DATA 0xb7
0000            194   _HFO0CAL        DATA 0xc7
0000            195   _HFO1CAL        DATA 0xd6
0000            196   _HFOCN          DATA 0xef
0000            197   _I2C0ADM        DATA 0xff
0000            198   _I2C0CN0        DATA 0xba
0000            199   _I2C0DIN        DATA 0xbc
0000            200   _I2C0DOUT       DATA 0xbb
0000            201   _I2C0FCN0       DATA 0xad
0000            202   _I2C0FCN1       DATA 0xab
0000            203   _I2C0FCT        DATA 0xf5
0000            204   _I2C0SLAD       DATA 0xbd
0000            205   _I2C0STAT       DATA 0xb9
0000            206   _IE             DATA 0xa8
0000            207   _IP             DATA 0xb8
0000            208   _IPH            DATA 0xf2
0000            209   _IT01CF         DATA 0xe4
0000            210   _LFO0CN         DATA 0xb1
0000            211   _P0             DATA 0x80
0000            212   _P0MASK         DATA 0xfe
0000            213   _P0MAT          DATA 0xfd
0000            214   _P0MDIN         DATA 0xf1
0000            215   _P0MDOUT        DATA 0xa4
0000            216   _P0SKIP         DATA 0xd4
0000            217   _P1             DATA 0x90
0000            218   _P1MASK         DATA 0xee
0000            219   _P1MAT          DATA 0xed
0000            220   _P1MDIN         DATA 0xf2
0000            221   _P1MDOUT        DATA 0xa5
0000            222   _P1SKIP         DATA 0xd5
0000            223   _P2             DATA 0xa0
0000            224   _P2MASK         DATA 0xfc
0000            225   _P2MAT          DATA 0xfb
0000            226   _P2MDIN         DATA 0xf3
0000            227   _P2MDOUT        DATA 0xa6
0000            228   _P2SKIP         DATA 0xcc
0000            229   _P3             DATA 0xb0
0000            230   _P3MDIN         DATA 0xf4
0000            231   _P3MDOUT        DATA 0x9c
0000            232   _PCA0CENT       DATA 0x9e
0000            233   _PCA0CLR        DATA 0x9c
0000            234   _PCA0CN0        DATA 0xd8
0000            235   _PCA0CPH0       DATA 0xfc
0000            236   _PCA0CPH1       DATA 0xea
0000            237   _PCA0CPH2       DATA 0xec
0000            238   _PCA0CPH3       DATA 0xf5
0000            239   _PCA0CPH4       DATA 0x85
0000            240   _PCA0CPH5       DATA 0xde
0000            241   _PCA0CPL0       DATA 0xfb
0000            242   _PCA0CPL1       DATA 0xe9
0000            243   _PCA0CPL2       DATA 0xeb
0000            244   _PCA0CPL3       DATA 0xf4
0000            245   _PCA0CPL4       DATA 0x84
0000            246   _PCA0CPL5       DATA 0xdd
0000            247   _PCA0CPM0       DATA 0xda
0000            248   _PCA0CPM1       DATA 0xdb
0000            249   _PCA0CPM2       DATA 0xdc
0000            250   _PCA0CPM3       DATA 0xae
0000            251   _PCA0CPM4       DATA 0xaf
0000            252   _PCA0CPM5       DATA 0xcc
0000            253   _PCA0H          DATA 0xfa
0000            254   _PCA0L          DATA 0xf9
0000            255   _PCA0MD         DATA 0xd9
0000            256   _PCA0POL        DATA 0x96
0000            257   _PCA0PWM        DATA 0xf7
0000            258   _PCON0          DATA 0x87
0000            259   _PCON1          DATA 0xcd
0000            260   _PFE0CN         DATA 0xc1
0000            261   _PRTDRV         DATA 0xf6
0000            262   _PSCTL          DATA 0x8f
0000            263   _PSTAT0         DATA 0xaa
0000            264   _PSW            DATA 0xd0
0000            265   _REF0CN         DATA 0xd1
0000            266   _REG0CN         DATA 0xc9
0000            267   _REVID          DATA 0xb6
0000            268   _RSTSRC         DATA 0xef
0000            269   _SBCON1         DATA 0x94
0000            270   _SBRLH1         DATA 0x96
0000            271   _SBRLL1         DATA 0x95
0000            272   _SBUF           DATA 0x99
0000            273   _SBUF0          DATA 0x99
0000            274   _SBUF1          DATA 0x92
0000            275   _SCON           DATA 0x98
0000            276   _SCON0          DATA 0x98
0000            277   _SCON1          DATA 0xc8
0000            278   _SFRPAGE        DATA 0xa7
0000            279   _SFRPGCN        DATA 0xbc
0000            280   _SFRSTACK       DATA 0xd7
0000            281   _SMB0ADM        DATA 0xd6
0000            282   _SMB0ADR        DATA 0xd7
0000            283   _SMB0CF         DATA 0xc1
0000            284   _SMB0CN0        DATA 0xc0
0000            285   _SMB0DAT        DATA 0xc2
0000            286   _SMB0FCN0       DATA 0xc3
0000            287   _SMB0FCN1       DATA 0xc4
0000            288   _SMB0FCT        DATA 0xef
0000            289   _SMB0RXLN       DATA 0xc5
0000            290   _SMB0TC         DATA 0xac
0000            291   _SMOD1          DATA 0x93
0000            292   _SP             DATA 0x81
0000            293   _SPI0CFG        DATA 0xa1
0000            294   _SPI0CKR        DATA 0xa2
0000            295   _SPI0CN0        DATA 0xf8
0000            296   _SPI0DAT        DATA 0xa3
0000            297   _SPI0FCN0       DATA 0x9a
0000            298   _SPI0FCN1       DATA 0x9b
0000            299   _SPI0FCT        DATA 0xf7
0000            300   _SPI0PCF        DATA 0xdf
0000            301   _TCON           DATA 0x88
0000            302   _TH0            DATA 0x8c
0000            303   _TH1            DATA 0x8d
0000            304   _TL0            DATA 0x8a
0000            305   _TL1            DATA 0x8b
0000            306   _TMOD           DATA 0x89
0000            307   _TMR2CN0        DATA 0xc8
0000            308   _TMR2CN1        DATA 0xfd
0000            309   _TMR2H          DATA 0xcf
0000            310   _TMR2L          DATA 0xce
0000            311   _TMR2RLH        DATA 0xcb
0000            312   _TMR2RLL        DATA 0xca
0000            313   _TMR3CN0        DATA 0x91
0000            314   _TMR3CN1        DATA 0xfe
0000            315   _TMR3H          DATA 0x95
0000            316   _TMR3L          DATA 0x94
0000            317   _TMR3RLH        DATA 0x93
0000            318   _TMR3RLL        DATA 0x92
0000            319   _TMR4CN0        DATA 0x98
0000            320   _TMR4CN1        DATA 0xff
0000            321   _TMR4H          DATA 0xa5
0000            322   _TMR4L          DATA 0xa4
0000            323   _TMR4RLH        DATA 0xa3
0000            324   _TMR4RLL        DATA 0xa2
0000            325   _TMR5CN0        DATA 0xc0
0000            326   _TMR5CN1        DATA 0xf1
0000            327   _TMR5H          DATA 0xd5
0000            328   _TMR5L          DATA 0xd4
0000            329   _TMR5RLH        DATA 0xd3
0000            330   _TMR5RLL        DATA 0xd2
0000            331   _UART0PCF       DATA 0xd9
0000            332   _UART1FCN0      DATA 0x9d
0000            333   _UART1FCN1      DATA 0xd8
0000            334   _UART1FCT       DATA 0xfa
0000            335   _UART1LIN       DATA 0x9e
0000            336   _UART1PCF       DATA 0xda
0000            337   _VDM0CN         DATA 0xff
0000            338   _WDTCN          DATA 0x97
0000            339   _XBR0           DATA 0xe1
0000            340   _XBR1           DATA 0xe2
0000            341   _XBR2           DATA 0xe3
0000            342   _XOSC0CN        DATA 0x86
0000            343   _DPTR           DATA 0x8382
0000            344   _TMR2RL         DATA 0xcbca
0000            345   _TMR3RL         DATA 0x9392
0000            346   _TMR4RL         DATA 0xa3a2
0000            347   _TMR5RL         DATA 0xd3d2
0000            348   _TMR0           DATA 0x8c8a
0000            349   _TMR1           DATA 0x8d8b
0000            350   _TMR2           DATA 0xcfce
0000            351   _TMR3           DATA 0x9594
0000            352   _TMR4           DATA 0xa5a4
0000            353   _TMR5           DATA 0xd5d4
0000            354   _SBRL1          DATA 0x9695
0000            355   _PCA0           DATA 0xfaf9
0000            356   _PCA0CP0        DATA 0xfcfb
0000            357   _PCA0CP1        DATA 0xeae9
0000            358   _PCA0CP2        DATA 0xeceb
0000            359   _PCA0CP3        DATA 0xf5f4
0000            360   _PCA0CP4        DATA 0x8584
0000            361   _PCA0CP5        DATA 0xdedd
0000            362   _ADC0ASA        DATA 0xb6b5
0000            363   _ADC0GT         DATA 0xc4c3
0000            364   _ADC0           DATA 0xbebd
0000            365   _ADC0LT         DATA 0xc6c5
0000            366   _DAC0           DATA 0x8584
0000            367   _DAC1           DATA 0x8a89
0000            368   _DAC2           DATA 0x8c8b
0000            369   _DAC3           DATA 0x8e8d
0000            370   ;--------------------------------------------------------
0000            371   ; special function bits
0000            372   ;--------------------------------------------------------
0000            373   _ACC_0          BIT 0xe0
0000            374   _ACC_1          BIT 0xe1
0000            375   _ACC_2          BIT 0xe2
0000            376   _ACC_3          BIT 0xe3
0000            377   _ACC_4          BIT 0xe4
0000            378   _ACC_5          BIT 0xe5
0000            379   _ACC_6          BIT 0xe6
0000            380   _ACC_7          BIT 0xe7
0000            381   _TEMPE          BIT 0xe8
0000            382   _ADGN0          BIT 0xe9
0000            383   _ADGN1          BIT 0xea
0000            384   _ADWINT         BIT 0xeb
0000            385   _ADBUSY         BIT 0xec
0000            386   _ADINT          BIT 0xed
0000            387   _IPOEN          BIT 0xee
0000            388   _ADEN           BIT 0xef
0000            389   _B_0            BIT 0xf0
0000            390   _B_1            BIT 0xf1
0000            391   _B_2            BIT 0xf2
0000            392   _B_3            BIT 0xf3
0000            393   _B_4            BIT 0xf4
0000            394   _B_5            BIT 0xf5
0000            395   _B_6            BIT 0xf6
0000            396   _B_7            BIT 0xf7
0000            397   _C0FIF          BIT 0xe8
0000            398   _C0RIF          BIT 0xe9
0000            399   _C1FIF          BIT 0xea
0000            400   _C1RIF          BIT 0xeb
0000            401   _C2FIF          BIT 0xec
0000            402   _C2RIF          BIT 0xed
0000            403   _C3FIF          BIT 0xee
0000            404   _C3RIF          BIT 0xef
0000            405   _D1SRC0         BIT 0x88
0000            406   _D1SRC1         BIT 0x89
0000            407   _D1AMEN         BIT 0x8a
0000            408   _D01REFSL       BIT 0x8b
0000            409   _D3SRC0         BIT 0x8c
0000            410   _D3SRC1         BIT 0x8d
0000            411   _D3AMEN         BIT 0x8e
0000            412   _D23REFSL       BIT 0x8f
0000            413   _D0UDIS         BIT 0x98
0000            414   _D1UDIS         BIT 0x99
0000            415   _D2UDIS         BIT 0x9a
0000            416   _D3UDIS         BIT 0x9b
0000            417   _EX0            BIT 0xa8
0000            418   _ET0            BIT 0xa9
0000            419   _EX1            BIT 0xaa
0000            420   _ET1            BIT 0xab
0000            421   _ES0            BIT 0xac
0000            422   _ET2            BIT 0xad
0000            423   _ESPI0          BIT 0xae
0000            424   _EA             BIT 0xaf
0000            425   _PX0            BIT 0xb8
0000            426   _PT0            BIT 0xb9
0000            427   _PX1            BIT 0xba
0000            428   _PT1            BIT 0xbb
0000            429   _PS0            BIT 0xbc
0000            430   _PT2            BIT 0xbd
0000            431   _PSPI0          BIT 0xbe
0000            432   _P0_0           BIT 0x80
0000            433   _P0_1           BIT 0x81
0000            434   _P0_2           BIT 0x82
0000            435   _P0_3           BIT 0x83
0000            436   _P0_4           BIT 0x84
0000            437   _P0_5           BIT 0x85
0000            438   _P0_6           BIT 0x86
0000            439   _P0_7           BIT 0x87
0000            440   _P1_0           BIT 0x90
0000            441   _P1_1           BIT 0x91
0000            442   _P1_2           BIT 0x92
0000            443   _P1_3           BIT 0x93
0000            444   _P1_4           BIT 0x94
0000            445   _P1_5           BIT 0x95
0000            446   _P1_6           BIT 0x96
0000            447   _P1_7           BIT 0x97
0000            448   _P2_0           BIT 0xa0
0000            449   _P2_1           BIT 0xa1
0000            450   _P2_2           BIT 0xa2
0000            451   _P2_3           BIT 0xa3
0000            452   _P2_4           BIT 0xa4
0000            453   _P2_5           BIT 0xa5
0000            454   _P2_6           BIT 0xa6
0000            455   _P3_0           BIT 0xb0
0000            456   _P3_1           BIT 0xb1
0000            457   _P3_2           BIT 0xb2
0000            458   _P3_3           BIT 0xb3
0000            459   _P3_4           BIT 0xb4
0000            460   _P3_7           BIT 0xb7
0000            461   _CCF0           BIT 0xd8
0000            462   _CCF1           BIT 0xd9
0000            463   _CCF2           BIT 0xda
0000            464   _CCF3           BIT 0xdb
0000            465   _CCF4           BIT 0xdc
0000            466   _CCF5           BIT 0xdd
0000            467   _CR             BIT 0xde
0000            468   _CF             BIT 0xdf
0000            469   _PARITY         BIT 0xd0
0000            470   _F1             BIT 0xd1
0000            471   _OV             BIT 0xd2
0000            472   _RS0            BIT 0xd3
0000            473   _RS1            BIT 0xd4
0000            474   _F0             BIT 0xd5
0000            475   _AC             BIT 0xd6
0000            476   _CY             BIT 0xd7
0000            477   _RI             BIT 0x98
0000            478   _TI             BIT 0x99
0000            479   _RB8            BIT 0x9a
0000            480   _TB8            BIT 0x9b
0000            481   _REN            BIT 0x9c
0000            482   _CE             BIT 0x9d
0000            483   _SMODE          BIT 0x9e
0000            484   _RI1            BIT 0xc8
0000            485   _TI1            BIT 0xc9
0000            486   _RBX1           BIT 0xca
0000            487   _TBX1           BIT 0xcb
0000            488   _REN1           BIT 0xcc
0000            489   _PERR1          BIT 0xcd
0000            490   _OVR1           BIT 0xce
0000            491   _SI             BIT 0xc0
0000            492   _ACK            BIT 0xc1
0000            493   _ARBLOST        BIT 0xc2
0000            494   _ACKRQ          BIT 0xc3
0000            495   _STO            BIT 0xc4
0000            496   _STA            BIT 0xc5
0000            497   _TXMODE         BIT 0xc6
0000            498   _MASTER         BIT 0xc7
0000            499   _SPIEN          BIT 0xf8
0000            500   _TXNF           BIT 0xf9
0000            501   _NSSMD0         BIT 0xfa
0000            502   _NSSMD1         BIT 0xfb
0000            503   _RXOVRN         BIT 0xfc
0000            504   _MODF           BIT 0xfd
0000            505   _WCOL           BIT 0xfe
0000            506   _SPIF           BIT 0xff
0000            507   _IT0            BIT 0x88
0000            508   _IE0            BIT 0x89
0000            509   _IT1            BIT 0x8a
0000            510   _IE1            BIT 0x8b
0000            511   _TR0            BIT 0x8c
0000            512   _TF0            BIT 0x8d
0000            513   _TR1            BIT 0x8e
0000            514   _TF1            BIT 0x8f
0000            515   _T2XCLK0        BIT 0xc8
0000            516   _T2XCLK1        BIT 0xc9
0000            517   _TR2            BIT 0xca
0000            518   _T2SPLIT        BIT 0xcb
0000            519   _TF2CEN         BIT 0xcc
0000            520   _TF2LEN         BIT 0xcd
0000            521   _TF2L           BIT 0xce
0000            522   _TF2H           BIT 0xcf
0000            523   _T4XCLK0        BIT 0x98
0000            524   _T4XCLK1        BIT 0x99
0000            525   _TR4            BIT 0x9a
0000            526   _T4SPLIT        BIT 0x9b
0000            527   _TF4CEN         BIT 0x9c
0000            528   _TF4LEN         BIT 0x9d
0000            529   _TF4L           BIT 0x9e
0000            530   _TF4H           BIT 0x9f
0000            531   _T5XCLK0        BIT 0xc0
0000            532   _T5XCLK1        BIT 0xc1
0000            533   _TR5            BIT 0xc2
0000            534   _T5SPLIT        BIT 0xc3
0000            535   _TF5CEN         BIT 0xc4
0000            536   _TF5LEN         BIT 0xc5
0000            537   _TF5L           BIT 0xc6
0000            538   _TF5H           BIT 0xc7
0000            539   _RIE            BIT 0xd8
0000            540   _RXTO0          BIT 0xd9
0000            541   _RXTO1          BIT 0xda
0000            542   _RFRQ           BIT 0xdb
0000            543   _TIE            BIT 0xdc
0000            544   _TXHOLD         BIT 0xdd
0000            545   _TXNF1          BIT 0xde
0000            546   _TFRQ           BIT 0xdf
0000            547   ;--------------------------------------------------------
0000            548   ; overlayable register banks
0000            549   ;--------------------------------------------------------
0000            550            rbank0 segment data overlay
0000            551            rbank2 segment data overlay
0000            552            rbank3 segment data overlay
0000            553   ;--------------------------------------------------------
0000            554   ; overlayable bit register bank
0000            555   ;--------------------------------------------------------
0000            556            rseg BIT_BANK
0000            557   bits:
0000            558            ds 1
0001            559            b0 equ  bits.0 
0001            560            b1 equ  bits.1 
0001            561            b2 equ  bits.2 
0001            562            b3 equ  bits.3 
0001            563            b4 equ  bits.4 
0001            564            b5 equ  bits.5 
0001            565            b6 equ  bits.6 
0001            566            b7 equ  bits.7 
0001            567   ;--------------------------------------------------------
0001            568   ; internal ram data
0001            569   ;--------------------------------------------------------
0000            570            rseg R_DSEG
0000            571   _Calibrate_LSensors_PARM_2:
0000            572            ds 3
0003            573   _Calibrate_LSensors_PARM_3:
0003            574            ds 3
0006            575   _Calibrate_LSensors_VL_1_81:
0006            576            ds 3
0009            577   _Follow_Tape_PARM_2:
0009            578            ds 3
000C            579   _Follow_Tape_PARM_3:
000C            580            ds 3
000F            581   _Follow_Tape_gnd_VL_1_93:
000F            582            ds 3
0012            583   _Follow_Tape_sloc0_1_0:
0012            584            ds 3
0015            585   _Follow_Tape_sloc1_1_0:
0015            586            ds 3
0018            587   _Follow_Tape_sloc2_1_0:
0018            588            ds 4
001C            589   _Follow_Tape_sloc3_1_0:
001C            590            ds 4
0020            591   _Follow_Tape_sloc4_1_0:
0020            592            ds 4
0024            593   _Find_Tape_PARM_2:
0024            594            ds 2
0026            595   _Find_Tape_gnd_VM_1_118:
0026            596            ds 3
0029            597   _Rotate_PARM_2:
0029            598            ds 3
002C            599   _Rotate_gnd_VL_1_123:
002C            600            ds 3
002F            601   _Rotate_sloc0_1_0:
002F            602            ds 3
0032            603   _Bridge_Rotate_PARM_2:
0032            604            ds 3
0035            605   _Bridge_Rotate_PARM_3:
0035            606            ds 3
0038            607   _Bridge_Rotate_gnd_VL_1_133:
0038            608            ds 3
003B            609   _Bridge_Rotate_sloc0_1_0:
003B            610            ds 3
003E            611   _Bridge_Rotate_sloc1_1_0:
003E            612            ds 3
0041            613   _Bridge_Rotate_sloc2_1_0:
0041            614            ds 4
0045            615   ;--------------------------------------------------------
0045            616   ; overlayable items in internal ram 
0045            617   ;--------------------------------------------------------
0000            618            rseg    R_OSEG
0000            619            rseg    R_OSEG
0000            620   _InitPinADC_PARM_2:
0000            621            ds 1
0001            622            rseg    R_OSEG
0001            623            rseg    R_OSEG
0001            624   _mot_dir_PARM_2:
0001            625            ds 2
0003            626            rseg    R_OSEG
0003            627            rseg    R_OSEG
0003            628   ;--------------------------------------------------------
0003            629   ; indirectly addressable internal ram data
0003            630   ;--------------------------------------------------------
0000            631            rseg R_ISEG
0000            632   ;--------------------------------------------------------
0000            633   ; absolute internal ram data
0000            634   ;--------------------------------------------------------
0000            635            DSEG
0000            636   ;--------------------------------------------------------
0000            637   ; bit data
0000            638   ;--------------------------------------------------------
0000            639            rseg R_BSEG
0000            640   _parity:
0000            641            DBIT    1
0001            642   _no_signal:
0001            643            DBIT    1
0002            644   _autocar:
0002            645            DBIT    1
0003            646   _boost:
0003            647            DBIT    1
0004            648   _open:
0004            649            DBIT    1
0005            650   _close:
0005            651            DBIT    1
0006            652   _x_dir:
0006            653            DBIT    1
0007            654   _y_dir:
0007            655            DBIT    1
0008            656   _sequence_timeout:
0008            657            DBIT    1
0009            658   _prime_awaken:
0009            659            DBIT    1
000A            660   _dir:
000A            661            DBIT    1
000B            662   _find_bridge_flag:
000B            663            DBIT    1
000C            664   _find_circle1_flag:
000C            665            DBIT    1
000D            666   _find_circle2_flag:
000D            667            DBIT    1
000E            668   _dir_flag:
000E            669            DBIT    1
000F            670   _break_when_dir_found:
000F            671            DBIT    1
0010            672   _circ2:
0010            673            DBIT    1
0011            674   _sonar_state:
0011            675            DBIT    1
0012            676   _counter_above_100:
0012            677            DBIT    1
0013            678   _ML_dir:
0013            679            DBIT    1
0014            680   _MR_dir:
0014            681            DBIT    1
0015            682   _Track_Object_flag_1_110:
0015            683            DBIT    1
0016            684   _Find_Tape_flag_1_119:
0016            685            DBIT    1
0017            686   _autonomous_prime_temp_1_138:
0017            687            DBIT    1
0018            688   ;--------------------------------------------------------
0018            689   ; paged external ram data
0018            690   ;--------------------------------------------------------
0000            691            rseg R_PSEG
0000            692   ;--------------------------------------------------------
0000            693   ; external ram data
0000            694   ;--------------------------------------------------------
0000            695            rseg R_XSEG
0000            696   _sequence_timer:
0000            697            ds 2
0002            698   _sequence_state:
0002            699            ds 2
0004            700   _pwmL:
0004            701            ds 2
0006            702   _pwmR:
0006            703            ds 2
0008            704   _main_short1:
0008            705            ds 2
000A            706   _main_int1:
000A            707            ds 2
000C            708   _main_int2:
000C            709            ds 2
000E            710   _main_int3:
000E            711            ds 2
0010            712   _main_int4:
0010            713            ds 2
0012            714   _Calibrate_LSensors_countL_1_82:
0012            715            ds 2
0014            716   _Calibrate_LSensors_countM_1_82:
0014            717            ds 2
0016            718   _Calibrate_LSensors_countR_1_82:
0016            719            ds 2
0018            720   _Calibrate_LSensors_flags_1_82:
0018            721            ds 2
001A            722   _autonomous_prime_gnd_VL_1_138:
001A            723            ds 2
001C            724   _autonomous_prime_gnd_VR_1_138:
001C            725            ds 2
001E            726   _autonomous_prime_gnd_VM_1_138:
001E            727            ds 2
0020            728   ;--------------------------------------------------------
0020            729   ; absolute external ram data
0020            730   ;--------------------------------------------------------
0000            731            XSEG
0000            732   ;--------------------------------------------------------
0000            733   ; external initialized ram data
0000            734   ;--------------------------------------------------------
0000            735            rseg R_IXSEG
0000            736   _x_absolute:
0000            737            ds 2
0002            738   _y_absolute:
0002            739            ds 2
0004            740   _no_signal_0:
0004            741            ds 2
0006            742   _no_signal_1:
0006            743            ds 2
0008            744   _dir_count:
0008            745            ds 2
000A            746   _timer_count:
000A            747            ds 2
000C            748   _sonar_count:
000C            749            ds 2
000E            750   _sonar_count_2:
000E            751            ds 2
0010            752   _claw_pos:
0010            753            ds 2
0012            754   _pwm_count:
0012            755            ds 1
0000            756            rseg R_HOME
0000            757            rseg R_GSINIT
0000            758            rseg R_CSEG
0000            759   ;--------------------------------------------------------
0000            760   ; Reset entry point and interrupt vectors
0000            761   ;--------------------------------------------------------
0000            762            CSEG at 0x0000
0000 020100     763            ljmp    _crt0
002B            764            CSEG at 0x002b
002B 020100     765            ljmp    _Timer2_ISR
002E            766   ;--------------------------------------------------------
002E            767   ; global & static initialisations
002E            768   ;--------------------------------------------------------
0000            769            rseg R_HOME
0000            770            rseg R_GSINIT
0000            771            rseg R_GSINIT
0000            772   ;--------------------------------------------------------
0000            773   ; data variables initialization
0000            774   ;--------------------------------------------------------
0000            775            rseg R_DINIT
0000            776   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:47: volatile bit find_bridge_flag = 0;
0000 C2F8       777            clr     _find_bridge_flag
0002            778   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:48: volatile bit find_circle1_flag = 0;
0002 C2A8       779            clr     _find_circle1_flag
0004            780   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:49: volatile bit find_circle2_flag = 0;
0004 C258       781            clr     _find_circle2_flag
0006            782   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:50: volatile bit dir_flag=0;            //set high to indicate that the dir_count has been incremented, wait for flag low
0006 C208       783            clr     _dir_flag
0008            784   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:51: volatile bit break_when_dir_found = 0;
0008 C2C8       785            clr     _break_when_dir_found
000A            786   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:52: volatile bit circ2 = 0;
000A C278       787            clr     _circ2
000C            788   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:53: volatile bit sonar_state = 0;
000C C238       789            clr     _sonar_state
000E            790   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:57: volatile bit counter_above_100 = 0;
000E C2F8       791            clr     _counter_above_100
0010            792            ; The linker places a 'ret' at the end of segment R_DINIT.
0010            793   ;--------------------------------------------------------
0010            794   ; code
0010            795   ;--------------------------------------------------------
0000            796            rseg R_CSEG
0000            797   ;------------------------------------------------------------
0000            798   ;Allocation info for local variables in function 'InitADC'
0000            799   ;------------------------------------------------------------
0000            800   ;------------------------------------------------------------
0000            801   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:2: void InitADC (void)
0000            802   ;        -----------------------------------------
0000            803   ;         function InitADC
0000            804   ;        -----------------------------------------
0000            805   _InitADC:
0000            806            using   0
0000            807   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:4: SFRPAGE = 0x00;
0000 75A700     808            mov     _SFRPAGE,#0x00
0003            809   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:5: ADC0CN1 = 0b_10_000_000; //14-bit,  Right justified no shifting applied, perform and Accumulate 1 conversion.
0003 75B280     810            mov     _ADC0CN1,#0x80
0006            811   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:6: ADC0CF0 = 0b_11111_0_00; // SYSCLK/32
0006 75BCF8     812            mov     _ADC0CF0,#0xF8
0009            813   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:7: ADC0CF1 = 0b_0_0_011110; // Same as default for now
0009 75B91E     814            mov     _ADC0CF1,#0x1E
000C            815   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:8: ADC0CN0 = 0b_0_0_0_0_0_00_0; // Same as default for now
000C 75E800     816            mov     _ADC0CN0,#0x00
000F            817   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:9: ADC0CF2 = 0b_0_01_11111 ; // GND pin, Vref=VDD
000F 75DF3F     818            mov     _ADC0CF2,#0x3F
0012            819   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:10: ADC0CN2 = 0b_0_000_0000;  // Same as default for now. ADC0 conversion initiated on write of 1 to ADBUSY.
0012 75B300     820            mov     _ADC0CN2,#0x00
0015            821   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:11: ADEN=1; // Enable ADC
0015 D2EF       822            setb    _ADEN
0017 22         823            ret
0018            824   ;------------------------------------------------------------
0018            825   ;Allocation info for local variables in function 'Timer3us'
0018            826   ;------------------------------------------------------------
0018            827   ;us                        Allocated to registers r2 
0018            828   ;i                         Allocated to registers r3 
0018            829   ;------------------------------------------------------------
0018            830   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:15: void Timer3us(unsigned char us)
0018            831   ;        -----------------------------------------
0018            832   ;         function Timer3us
0018            833   ;        -----------------------------------------
0018            834   _Timer3us:
0018 AA82       835            mov     r2,dpl
001A            836   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:20: CKCON0|=0b_0100_0000;
001A 438E40     837            orl     _CKCON0,#0x40
001D            838   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:22: TMR3RL = (-(SYSCLK)/1000000L); // Set Timer3 to overflow in 1us.
001D 7592B8     839            mov     _TMR3RL,#0xB8
0020 7593FF     840            mov     (_TMR3RL >> 8),#0xFF
0023            841   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:23: TMR3 = TMR3RL;                 // Initialize Timer3 for first overflow
0023 859294     842            mov     _TMR3,_TMR3RL
0026 859395     843            mov     (_TMR3 >> 8),(_TMR3RL >> 8)
0029            844   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:25: TMR3CN0 = 0x04;                 // Sart Timer3 and clear overflow flag
0029 759104     845            mov     _TMR3CN0,#0x04
002C            846   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:26: for (i = 0; i < us; i++)       // Count <us> overflows
002C 7B00       847            mov     r3,#0x00
002E            848   L003004?:
002E C3         849            clr     c
002F EB         850            mov     a,r3
0030 9A         851            subb    a,r2
0031 5001       852            jnc     L003007?
0033            853   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:28: while (!(TMR3CN0 & 0x80));  // Wait for overflow
0033            854   L003001?:
0033 E591       855            mov     a,_TMR3CN0
0035 30E780     856            jnb     acc.7,L003001?
0038            857   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:29: TMR3CN0 &= ~(0x80);         // Clear overflow indicator
0038 53917F     858            anl     _TMR3CN0,#0x7F
003B            859   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:26: for (i = 0; i < us; i++)       // Count <us> overflows
003B 0B         860            inc     r3
003C 8001       861            sjmp    L003004?
003E            862   L003007?:
003E            863   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:31: TMR3CN0 = 0 ;                   // Stop Timer3 and clear overflow flag
003E 759100     864            mov     _TMR3CN0,#0x00
0041 22         865            ret
0042            866   ;------------------------------------------------------------
0042            867   ;Allocation info for local variables in function 'waitms'
0042            868   ;------------------------------------------------------------
0042            869   ;ms                        Allocated to registers r2 r3 
0042            870   ;j                         Allocated to registers r4 r5 
0042            871   ;k                         Allocated to registers r6 
0042            872   ;------------------------------------------------------------
0042            873   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:34: void waitms (unsigned int ms)
0042            874   ;        -----------------------------------------
0042            875   ;         function waitms
0042            876   ;        -----------------------------------------
0042            877   _waitms:
0042 AA82       878            mov     r2,dpl
0044 AB83       879            mov     r3,dph
0046            880   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:38: for(j=0; j<ms; j++)
0046 7C00       881            mov     r4,#0x00
0048 7D00       882            mov     r5,#0x00
004A            883   L004005?:
004A C3         884            clr     c
004B EC         885            mov     a,r4
004C 9A         886            subb    a,r2
004D ED         887            mov     a,r5
004E 9B         888            subb    a,r3
004F 5001       889            jnc     L004009?
0051            890   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:39: for (k=0; k<4; k++) Timer3us(250);
0051 7E00       891            mov     r6,#0x00
0053            892   L004001?:
0053 BE0400     893            cjne    r6,#0x04,L004018?
0056            894   L004018?:
0056 5001       895            jnc     L004007?
0058 7582FA     896            mov     dpl,#0xFA
005B C002       897            push    ar2
005D C003       898            push    ar3
005F C004       899            push    ar4
0061 C005       900            push    ar5
0063 C006       901            push    ar6
0065 120100     902            lcall   _Timer3us
0068 D006       903            pop     ar6
006A D005       904            pop     ar5
006C D004       905            pop     ar4
006E D003       906            pop     ar3
0070 D002       907            pop     ar2
0072 0E         908            inc     r6
0073 8001       909            sjmp    L004001?
0075            910   L004007?:
0075            911   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:38: for(j=0; j<ms; j++)
0075 0C         912            inc     r4
0076 BC0040     913            cjne    r4,#0x00,L004005?
0079 0D         914            inc     r5
007A 8001       915            sjmp    L004005?
007C            916   L004009?:
007C 22         917            ret
007D            918   ;------------------------------------------------------------
007D            919   ;Allocation info for local variables in function 'InitPinADC'
007D            920   ;------------------------------------------------------------
007D            921   ;pinno                     Allocated with name '_InitPinADC_PARM_2'
007D            922   ;portno                    Allocated to registers r2 
007D            923   ;mask                      Allocated to registers r3 
007D            924   ;------------------------------------------------------------
007D            925   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:44: void InitPinADC (unsigned char portno, unsigned char pinno)
007D            926   ;        -----------------------------------------
007D            927   ;         function InitPinADC
007D            928   ;        -----------------------------------------
007D            929   _InitPinADC:
007D AA82       930            mov     r2,dpl
007F            931   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:48: mask=1<<pinno;
007F 8590F0     932            mov     b,_InitPinADC_PARM_2
0082 05F0       933            inc     b
0084 7401       934            mov     a,#0x01
0086 8001       935            sjmp    L005013?
0088            936   L005011?:
0088 25E0       937            add     a,acc
008A            938   L005013?:
008A D5F000     939            djnz    b,L005011?
008D FB         940            mov     r3,a
008E            941   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:50: SFRPAGE = 0x20;
008E 75A720     942            mov     _SFRPAGE,#0x20
0091            943   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:51: switch (portno)
0091 BA0040     944            cjne    r2,#0x00,L005014?
0094 8001       945            sjmp    L005001?
0096            946   L005014?:
0096 BA01C0     947            cjne    r2,#0x01,L005015?
0099 8001       948            sjmp    L005002?
009B            949   L005015?:
009B            950   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:53: case 0:
009B BA0240     951            cjne    r2,#0x02,L005005?
009E 8001       952            sjmp    L005003?
00A0            953   L005001?:
00A0            954   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:54: P0MDIN &= (~mask); // Set pin as analog input
00A0 EB         955            mov     a,r3
00A1 F4         956            cpl     a
00A2 FA         957            mov     r2,a
00A3 52F1       958            anl     _P0MDIN,a
00A5            959   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:55: P0SKIP |= mask; // Skip Crossbar decoding for this pin
00A5 EB         960            mov     a,r3
00A6 42D4       961            orl     _P0SKIP,a
00A8            962   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:56: break;
00A8            963   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:57: case 1:
00A8 8001       964            sjmp    L005005?
00AA            965   L005002?:
00AA            966   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:58: P1MDIN &= (~mask); // Set pin as analog input
00AA EB         967            mov     a,r3
00AB F4         968            cpl     a
00AC FA         969            mov     r2,a
00AD 52F2       970            anl     _P1MDIN,a
00AF            971   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:59: P1SKIP |= mask; // Skip Crossbar decoding for this pin
00AF EB         972            mov     a,r3
00B0 42D5       973            orl     _P1SKIP,a
00B2            974   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:60: break;
00B2            975   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:61: case 2:
00B2 8001       976            sjmp    L005005?
00B4            977   L005003?:
00B4            978   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:62: P2MDIN &= (~mask); // Set pin as analog input
00B4 EB         979            mov     a,r3
00B5 F4         980            cpl     a
00B6 FA         981            mov     r2,a
00B7 52F3       982            anl     _P2MDIN,a
00B9            983   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:63: P2SKIP |= mask; // Skip Crossbar decoding for this pin
00B9 EB         984            mov     a,r3
00BA 42CC       985            orl     _P2SKIP,a
00BC            986   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:67: }
00BC            987   L005005?:
00BC            988   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:68: SFRPAGE = 0x00;
00BC 75A700     989            mov     _SFRPAGE,#0x00
00BF 22         990            ret
00C0            991   ;------------------------------------------------------------
00C0            992   ;Allocation info for local variables in function 'ADC_at_Pin'
00C0            993   ;------------------------------------------------------------
00C0            994   ;pin                       Allocated to registers 
00C0            995   ;------------------------------------------------------------
00C0            996   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:71: unsigned int ADC_at_Pin(unsigned char pin)
00C0            997   ;        -----------------------------------------
00C0            998   ;         function ADC_at_Pin
00C0            999   ;        -----------------------------------------
00C0           1000   _ADC_at_Pin:
00C0 8582BB    1001            mov     _ADC0MX,dpl
00C3           1002   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:74: ADBUSY=1;       // Dummy conversion first to select new pin
00C3 D2EC      1003            setb    _ADBUSY
00C5           1004   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:75: while (ADBUSY); // Wait for dummy conversion to finish
00C5           1005   L006001?:
00C5 20ECC0    1006            jb      _ADBUSY,L006001?
00C8           1007   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:76: ADBUSY = 1;     // Convert voltage at the pin
00C8 D2EC      1008            setb    _ADBUSY
00CA           1009   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:77: while (ADBUSY); // Wait for conversion to complete
00CA           1010   L006004?:
00CA 20EC00    1011            jb      _ADBUSY,L006004?
00CD           1012   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:78: return (ADC0);
00CD 85BD82    1013            mov     dpl,_ADC0
00D0 85BE83    1014            mov     dph,(_ADC0 >> 8)
00D3 22        1015            ret
00D4           1016   ;------------------------------------------------------------
00D4           1017   ;Allocation info for local variables in function 'Volts_at_Pin'
00D4           1018   ;------------------------------------------------------------
00D4           1019   ;pin                       Allocated to registers r2 
00D4           1020   ;------------------------------------------------------------
00D4           1021   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:81: float Volts_at_Pin(unsigned char pin)
00D4           1022   ;        -----------------------------------------
00D4           1023   ;         function Volts_at_Pin
00D4           1024   ;        -----------------------------------------
00D4           1025   _Volts_at_Pin:
00D4           1026   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:83: return ((ADC_at_Pin(pin)*VDD)/0b_0011_1111_1111_1111);
00D4 120100    1027            lcall   _ADC_at_Pin
00D7 120100    1028            lcall   ___uint2fs
00DA AA82      1029            mov     r2,dpl
00DC AB83      1030            mov     r3,dph
00DE ACF0      1031            mov     r4,b
00E0 FD        1032            mov     r5,a
00E1 C002      1033            push    ar2
00E3 C003      1034            push    ar3
00E5 C004      1035            push    ar4
00E7 C005      1036            push    ar5
00E9 906C8B    1037            mov     dptr,#0x6C8B
00EC 75F053    1038            mov     b,#0x53
00EF 7440      1039            mov     a,#0x40
00F1 120100    1040            lcall   ___fsmul
00F4 AA82      1041            mov     r2,dpl
00F6 AB83      1042            mov     r3,dph
00F8 ACF0      1043            mov     r4,b
00FA FD        1044            mov     r5,a
00FB E581      1045            mov     a,sp
00FD 24FC      1046            add     a,#0xfc
00FF F581      1047            mov     sp,a
0101 E4        1048            clr     a
0102 C0E0      1049            push    acc
0104 74FC      1050            mov     a,#0xFC
0106 C0E0      1051            push    acc
0108 747F      1052            mov     a,#0x7F
010A C0E0      1053            push    acc
010C 7446      1054            mov     a,#0x46
010E C0E0      1055            push    acc
0110 8A82      1056            mov     dpl,r2
0112 8B83      1057            mov     dph,r3
0114 8CF0      1058            mov     b,r4
0116 ED        1059            mov     a,r5
0117 120100    1060            lcall   ___fsdiv
011A AA82      1061            mov     r2,dpl
011C AB83      1062            mov     r3,dph
011E ACF0      1063            mov     r4,b
0120 FD        1064            mov     r5,a
0121 E581      1065            mov     a,sp
0123 24FC      1066            add     a,#0xfc
0125 F581      1067            mov     sp,a
0127 8A82      1068            mov     dpl,r2
0129 8B83      1069            mov     dph,r3
012B 8CF0      1070            mov     b,r4
012D ED        1071            mov     a,r5
012E 22        1072            ret
012F           1073   ;------------------------------------------------------------
012F           1074   ;Allocation info for local variables in function 'mot_dir'
012F           1075   ;------------------------------------------------------------
012F           1076   ;MR                        Allocated with name '_mot_dir_PARM_2'
012F           1077   ;ML                        Allocated to registers r2 r3 
012F           1078   ;------------------------------------------------------------
012F           1079   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:86: void mot_dir(int ML, int MR)
012F           1080   ;        -----------------------------------------
012F           1081   ;         function mot_dir
012F           1082   ;        -----------------------------------------
012F           1083   _mot_dir:
012F AA82      1084            mov     r2,dpl
0131 AB83      1085            mov     r3,dph
0133           1086   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:88: ML_dir = ML;
0133 EA        1087            mov     a,r2
0134 4B        1088            orl     a,r3
0135 24FF      1089            add     a,#0xff
0137 92A8      1090            mov     _ML_dir,c
0139           1091   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:89: MR_dir = MR;
0139 E540      1092            mov     a,_mot_dir_PARM_2
013B 4541      1093            orl     a,(_mot_dir_PARM_2 + 1)
013D 24FF      1094            add     a,#0xff
013F 9268      1095            mov     _MR_dir,c
0141 22        1096            ret
0142           1097   ;------------------------------------------------------------
0142           1098   ;Allocation info for local variables in function 'stop'
0142           1099   ;------------------------------------------------------------
0142           1100   ;------------------------------------------------------------
0142           1101   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:92: void stop(void){
0142           1102   ;        -----------------------------------------
0142           1103   ;         function stop
0142           1104   ;        -----------------------------------------
0142           1105   _stop:
0142           1106   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:93: pwmL=0;
0142 904DA8    1107            mov     dptr,#_pwmL
0145 E4        1108            clr     a
0146 F0        1109            movx    @dptr,a
0147 A3        1110            inc     dptr
0148 F0        1111            movx    @dptr,a
0149           1112   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:94: pwmR=0;  
0149 904D68    1113            mov     dptr,#_pwmR
014C E4        1114            clr     a
014D F0        1115            movx    @dptr,a
014E A3        1116            inc     dptr
014F F0        1117            movx    @dptr,a
0150           1118   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:95: waitms(100);
0150 900064    1119            mov     dptr,#0x0064
0153 020100    1120            ljmp    _waitms
0156           1121   ;------------------------------------------------------------
0156           1122   ;Allocation info for local variables in function 'spin_left'
0156           1123   ;------------------------------------------------------------
0156           1124   ;offset                    Allocated to registers r2 r3 
0156           1125   ;------------------------------------------------------------
0156           1126   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:98: void spin_left(int offset)
0156           1127   ;        -----------------------------------------
0156           1128   ;         function spin_left
0156           1129   ;        -----------------------------------------
0156           1130   _spin_left:
0156 AA82      1131            mov     r2,dpl
0158 AB83      1132            mov     r3,dph
015A           1133   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:100: mot_dir(1,0);
015A E4        1134            clr     a
015B F540      1135            mov     _mot_dir_PARM_2,a
015D F541      1136            mov     (_mot_dir_PARM_2 + 1),a
015F 900001    1137            mov     dptr,#0x0001
0162 C002      1138            push    ar2
0164 C003      1139            push    ar3
0166 120100    1140            lcall   _mot_dir
0169 D003      1141            pop     ar3
016B D002      1142            pop     ar2
016D           1143   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:101: pwmR = BOOSTPWM+offset;
016D 904D68    1144            mov     dptr,#_pwmR
0170 742D      1145            mov     a,#0x2D
0172 2A        1146            add     a,r2
0173 F0        1147            movx    @dptr,a
0174 E4        1148            clr     a
0175 3B        1149            addc    a,r3
0176 A3        1150            inc     dptr
0177 F0        1151            movx    @dptr,a
0178           1152   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:102: pwmL = BASEPWM+offset;
0178 904DA8    1153            mov     dptr,#_pwmL
017B 7419      1154            mov     a,#0x19
017D 2A        1155            add     a,r2
017E F0        1156            movx    @dptr,a
017F E4        1157            clr     a
0180 3B        1158            addc    a,r3
0181 A3        1159            inc     dptr
0182 F0        1160            movx    @dptr,a
0183 22        1161            ret
0184           1162   ;------------------------------------------------------------
0184           1163   ;Allocation info for local variables in function 'spin_right'
0184           1164   ;------------------------------------------------------------
0184           1165   ;offset                    Allocated to registers r2 r3 
0184           1166   ;------------------------------------------------------------
0184           1167   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:106: void spin_right(int offset)
0184           1168   ;        -----------------------------------------
0184           1169   ;         function spin_right
0184           1170   ;        -----------------------------------------
0184           1171   _spin_right:
0184 AA82      1172            mov     r2,dpl
0186 AB83      1173            mov     r3,dph
0188           1174   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:108: mot_dir(0,1);
0188 754001    1175            mov     _mot_dir_PARM_2,#0x01
018B E4        1176            clr     a
018C F541      1177            mov     (_mot_dir_PARM_2 + 1),a
018E 900000    1178            mov     dptr,#0x0000
0191 C002      1179            push    ar2
0193 C003      1180            push    ar3
0195 120100    1181            lcall   _mot_dir
0198 D003      1182            pop     ar3
019A D002      1183            pop     ar2
019C           1184   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:109: pwmL = BOOSTPWM+offset;
019C 904DA8    1185            mov     dptr,#_pwmL
019F 742D      1186            mov     a,#0x2D
01A1 2A        1187            add     a,r2
01A2 F0        1188            movx    @dptr,a
01A3 E4        1189            clr     a
01A4 3B        1190            addc    a,r3
01A5 A3        1191            inc     dptr
01A6 F0        1192            movx    @dptr,a
01A7           1193   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:110: pwmR = BASEPWM+offset;  
01A7 904D68    1194            mov     dptr,#_pwmR
01AA 7419      1195            mov     a,#0x19
01AC 2A        1196            add     a,r2
01AD F0        1197            movx    @dptr,a
01AE E4        1198            clr     a
01AF 3B        1199            addc    a,r3
01B0 A3        1200            inc     dptr
01B1 F0        1201            movx    @dptr,a
01B2 22        1202            ret
01B3           1203   ;------------------------------------------------------------
01B3           1204   ;Allocation info for local variables in function 'debug'
01B3           1205   ;------------------------------------------------------------
01B3           1206   ;------------------------------------------------------------
01B3           1207   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:113: void debug( void )
01B3           1208   ;        -----------------------------------------
01B3           1209   ;         function debug
01B3           1210   ;        -----------------------------------------
01B3           1211   _debug:
01B3           1212   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:116: stop();
01B3 120100    1213            lcall   _stop
01B6           1214   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:117: while(1);
01B6           1215   L012002?:
01B6 8001      1216            sjmp    L012002?
01B8           1217   ;------------------------------------------------------------
01B8           1218   ;Allocation info for local variables in function 'claw_control'
01B8           1219   ;------------------------------------------------------------
01B8           1220   ;------------------------------------------------------------
01B8           1221   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:121: void claw_control(void)
01B8           1222   ;        -----------------------------------------
01B8           1223   ;         function claw_control
01B8           1224   ;        -----------------------------------------
01B8           1225   _claw_control:
01B8           1226   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:123: if (pwm_count >= 22) {
01B8 901880    1227            mov     dptr,#_pwm_count
01BB E0        1228            movx    a,@dptr
01BC FA        1229            mov     r2,a
01BD BA1680    1230            cjne    r2,#0x16,L013007?
01C0           1231   L013007?:
01C0 4001      1232            jc      L013002?
01C2           1233   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:124: CLAW_L = 0;
01C2 C297      1234            clr     _P1_7
01C4           1235   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:125: CLAW_R = 0;
01C4 C2A0      1236            clr     _P2_0
01C6 22        1237            ret
01C7           1238   L013002?:
01C7           1239   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:127: CLAW_L = (pwm_count < claw_pos) ? 1 : 0;
01C7 901880    1240            mov     dptr,#_pwm_count
01CA E0        1241            movx    a,@dptr
01CB FA        1242            mov     r2,a
01CC 9018C0    1243            mov     dptr,#_claw_pos
01CF E0        1244            movx    a,@dptr
01D0 FB        1245            mov     r3,a
01D1 A3        1246            inc     dptr
01D2 E0        1247            movx    a,@dptr
01D3 FC        1248            mov     r4,a
01D4 7D00      1249            mov     r5,#0x00
01D6 C3        1250            clr     c
01D7 EA        1251            mov     a,r2
01D8 9B        1252            subb    a,r3
01D9 ED        1253            mov     a,r5
01DA 9C        1254            subb    a,r4
01DB 9297      1255            mov     _P1_7,c
01DD           1256   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:128: CLAW_R = (pwm_count < 27 - claw_pos) ? 1 : 0;
01DD 9018C0    1257            mov     dptr,#_claw_pos
01E0 E0        1258            movx    a,@dptr
01E1 FA        1259            mov     r2,a
01E2 A3        1260            inc     dptr
01E3 E0        1261            movx    a,@dptr
01E4 FB        1262            mov     r3,a
01E5 741B      1263            mov     a,#0x1B
01E7 C3        1264            clr     c
01E8 9A        1265            subb    a,r2
01E9 FA        1266            mov     r2,a
01EA E4        1267            clr     a
01EB 9B        1268            subb    a,r3
01EC FB        1269            mov     r3,a
01ED 901880    1270            mov     dptr,#_pwm_count
01F0 E0        1271            movx    a,@dptr
01F1 FC        1272            mov     r4,a
01F2 7D00      1273            mov     r5,#0x00
01F4 C3        1274            clr     c
01F5 EC        1275            mov     a,r4
01F6 9A        1276            subb    a,r2
01F7 ED        1277            mov     a,r5
01F8 9B        1278            subb    a,r3
01F9 92A0      1279            mov     _P2_0,c
01FB 22        1280            ret
01FC           1281   ;------------------------------------------------------------
01FC           1282   ;Allocation info for local variables in function 'sonar_op'
01FC           1283   ;------------------------------------------------------------
01FC           1284   ;------------------------------------------------------------
01FC           1285   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:133: void sonar_op(void)
01FC           1286   ;        -----------------------------------------
01FC           1287   ;         function sonar_op
01FC           1288   ;        -----------------------------------------
01FC           1289   _sonar_op:
01FC           1290   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:136: Trig = pwm_count >= 50?0:1;
01FC 901880    1291            mov     dptr,#_pwm_count
01FF E0        1292            movx    a,@dptr
0200 FA        1293            mov     r2,a
0201 BA3200    1294            cjne    r2,#0x32,L014014?
0204           1295   L014014?:
0204 9290      1296            mov     _P1_0,c
0206           1297   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:139: if (!sonar_state) {
0206 203840    1298            jb      _sonar_state,L014007?
0209           1299   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:140: if (P0_7) {
0209 308780    1300            jnb     _P0_7,L014009?
020C           1301   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:141: sonar_state = 1;
020C D238      1302            setb    _sonar_state
020E           1303   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:142: sonar_count = 0;
020E 901940    1304            mov     dptr,#_sonar_count
0211 E4        1305            clr     a
0212 F0        1306            movx    @dptr,a
0213 A3        1307            inc     dptr
0214 F0        1308            movx    @dptr,a
0215 22        1309            ret
0216           1310   L014007?:
0216           1311   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:144: } else if (P0_7) {
0216 3087C0    1312            jnb     _P0_7,L014004?
0219           1313   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:145: sonar_count++;
0219 901940    1314            mov     dptr,#_sonar_count
021C E0        1315            movx    a,@dptr
021D 2401      1316            add     a,#0x01
021F F0        1317            movx    @dptr,a
0220 A3        1318            inc     dptr
0221 E0        1319            movx    a,@dptr
0222 3400      1320            addc    a,#0x00
0224 F0        1321            movx    @dptr,a
0225 22        1322            ret
0226           1323   L014004?:
0226           1324   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:148: sonar_count_2 = sonar_count;
0226 901940    1325            mov     dptr,#_sonar_count
0229 E0        1326            movx    a,@dptr
022A FA        1327            mov     r2,a
022B A3        1328            inc     dptr
022C E0        1329            movx    a,@dptr
022D FB        1330            mov     r3,a
022E 901900    1331            mov     dptr,#_sonar_count_2
0231 EA        1332            mov     a,r2
0232 F0        1333            movx    @dptr,a
0233 A3        1334            inc     dptr
0234 EB        1335            mov     a,r3
0235 F0        1336            movx    @dptr,a
0236           1337   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:150: sonar_state = 0;
0236 C238      1338            clr     _sonar_state
0238           1339   L014009?:
0238 22        1340            ret
0239           1341   ;------------------------------------------------------------
0239           1342   ;Allocation info for local variables in function 'Calibrate_LSensors'
0239           1343   ;------------------------------------------------------------
0239           1344   ;VM                        Allocated with name '_Calibrate_LSensors_PARM_2'
0239           1345   ;VR                        Allocated with name '_Calibrate_LSensors_PARM_3'
0239           1346   ;VL                        Allocated with name '_Calibrate_LSensors_VL_1_81'
0239           1347   ;countL                    Allocated with name '_Calibrate_LSensors_countL_1_82'
0239           1348   ;countM                    Allocated with name '_Calibrate_LSensors_countM_1_82'
0239           1349   ;countR                    Allocated with name '_Calibrate_LSensors_countR_1_82'
0239           1350   ;flags                     Allocated with name '_Calibrate_LSensors_flags_1_82'
0239           1351   ;------------------------------------------------------------
0239           1352   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:156: void Calibrate_LSensors(int *VL, int *VM, int *VR)
0239           1353   ;        -----------------------------------------
0239           1354   ;         function Calibrate_LSensors
0239           1355   ;        -----------------------------------------
0239           1356   _Calibrate_LSensors:
0239 858210    1357            mov     _Calibrate_LSensors_VL_1_81,dpl
023C 858311    1358            mov     (_Calibrate_LSensors_VL_1_81 + 1),dph
023F 85F012    1359            mov     (_Calibrate_LSensors_VL_1_81 + 2),b
0242           1360   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:158: xdata short countL=0;
0242 90CD60    1361            mov     dptr,#_Calibrate_LSensors_countL_1_82
0245 E4        1362            clr     a
0246 F0        1363            movx    @dptr,a
0247 A3        1364            inc     dptr
0248 F0        1365            movx    @dptr,a
0249           1366   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:159: xdata short countM=0;
0249 90CDB0    1367            mov     dptr,#_Calibrate_LSensors_countM_1_82
024C E4        1368            clr     a
024D F0        1369            movx    @dptr,a
024E A3        1370            inc     dptr
024F F0        1371            movx    @dptr,a
0250           1372   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:160: xdata short countR=0;
0250 90CE00    1373            mov     dptr,#_Calibrate_LSensors_countR_1_82
0253 E4        1374            clr     a
0254 F0        1375            movx    @dptr,a
0255 A3        1376            inc     dptr
0256 F0        1377            movx    @dptr,a
0257           1378   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:161: xdata short flags =0;
0257 90CE50    1379            mov     dptr,#_Calibrate_LSensors_flags_1_82
025A E4        1380            clr     a
025B F0        1381            movx    @dptr,a
025C A3        1382            inc     dptr
025D F0        1383            movx    @dptr,a
025E           1384   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:163: main_int1 = 0;
025E 904CE8    1385            mov     dptr,#_main_int1
0261 E4        1386            clr     a
0262 F0        1387            movx    @dptr,a
0263 A3        1388            inc     dptr
0264 F0        1389            movx    @dptr,a
0265           1390   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:165: while (flags != 7) {
0265           1391   L015022?:
0265 90CE50    1392            mov     dptr,#_Calibrate_LSensors_flags_1_82
0268 E0        1393            movx    a,@dptr
0269 FD        1394            mov     r5,a
026A A3        1395            inc     dptr
026B E0        1396            movx    a,@dptr
026C FE        1397            mov     r6,a
026D BD0740    1398            cjne    r5,#0x07,L015038?
0270 BE0040    1399            cjne    r6,#0x00,L015038?
0273 020100    1400            ljmp    L015024?
0276           1401   L015038?:
0276           1402   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:167: if ((flags & 2) != 2) {
0276 530502    1403            anl     ar5,#0x02
0279 7E00      1404            mov     r6,#0x00
027B BD02C0    1405            cjne    r5,#0x02,L015039?
027E BE00C0    1406            cjne    r6,#0x00,L015039?
0281 020100    1407            ljmp    L015007?
0284           1408   L015039?:
0284           1409   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:168: main_int1 = Volts_at_Pin(QFP32_MUX_P1_6)*1000;
0284 75820C    1410            mov     dpl,#0x0C
0287 120100    1411            lcall   _Volts_at_Pin
028A AD82      1412            mov     r5,dpl
028C AE83      1413            mov     r6,dph
028E AFF0      1414            mov     r7,b
0290 F8        1415            mov     r0,a
0291 C005      1416            push    ar5
0293 C006      1417            push    ar6
0295 C007      1418            push    ar7
0297 C000      1419            push    ar0
0299 900000    1420            mov     dptr,#0x0000
029C 75F07A    1421            mov     b,#0x7A
029F 7444      1422            mov     a,#0x44
02A1 120100    1423            lcall   ___fsmul
02A4 AD82      1424            mov     r5,dpl
02A6 AE83      1425            mov     r6,dph
02A8 AFF0      1426            mov     r7,b
02AA F8        1427            mov     r0,a
02AB E581      1428            mov     a,sp
02AD 24FC      1429            add     a,#0xfc
02AF F581      1430            mov     sp,a
02B1 8D82      1431            mov     dpl,r5
02B3 8E83      1432            mov     dph,r6
02B5 8FF0      1433            mov     b,r7
02B7 E8        1434            mov     a,r0
02B8 120100    1435            lcall   ___fs2uint
02BB E582      1436            mov     a,dpl
02BD 8583F0    1437            mov     b,dph
02C0 904CE8    1438            mov     dptr,#_main_int1
02C3 F0        1439            movx    @dptr,a
02C4 A3        1440            inc     dptr
02C5 E5F0      1441            mov     a,b
02C7 F0        1442            movx    @dptr,a
02C8           1443   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:170: if (abs(*VL - main_int1) <= 50) {
02C8 851082    1444            mov     dpl,_Calibrate_LSensors_VL_1_81
02CB 851183    1445            mov     dph,(_Calibrate_LSensors_VL_1_81 + 1)
02CE 8512F0    1446            mov     b,(_Calibrate_LSensors_VL_1_81 + 2)
02D1 120100    1447            lcall   __gptrget
02D4 FD        1448            mov     r5,a
02D5 A3        1449            inc     dptr
02D6 120100    1450            lcall   __gptrget
02D9 FE        1451            mov     r6,a
02DA 904CE8    1452            mov     dptr,#_main_int1
02DD E0        1453            movx    a,@dptr
02DE FF        1454            mov     r7,a
02DF A3        1455            inc     dptr
02E0 E0        1456            movx    a,@dptr
02E1 F8        1457            mov     r0,a
02E2 ED        1458            mov     a,r5
02E3 C3        1459            clr     c
02E4 9F        1460            subb    a,r7
02E5 F582      1461            mov     dpl,a
02E7 EE        1462            mov     a,r6
02E8 98        1463            subb    a,r0
02E9 F583      1464            mov     dph,a
02EB 120100    1465            lcall   _abs
02EE AD82      1466            mov     r5,dpl
02F0 AE83      1467            mov     r6,dph
02F2 C3        1468            clr     c
02F3 7432      1469            mov     a,#0x32
02F5 9D        1470            subb    a,r5
02F6 E4        1471            clr     a
02F7 6480      1472            xrl     a,#0x80
02F9 8EF0      1473            mov     b,r6
02FB 63F080    1474            xrl     b,#0x80
02FE 95F0      1475            subb    a,b
0300 4001      1476            jc      L015002?
0302           1477   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:171: countL++;
0302 90CD60    1478            mov     dptr,#_Calibrate_LSensors_countL_1_82
0305 E0        1479            movx    a,@dptr
0306 2401      1480            add     a,#0x01
0308 F0        1481            movx    @dptr,a
0309 A3        1482            inc     dptr
030A E0        1483            movx    a,@dptr
030B 3400      1484            addc    a,#0x00
030D F0        1485            movx    @dptr,a
030E 8001      1486            sjmp    L015003?
0310           1487   L015002?:
0310           1488   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:173: countL = 0;
0310 90CD60    1489            mov     dptr,#_Calibrate_LSensors_countL_1_82
0313 E4        1490            clr     a
0314 F0        1491            movx    @dptr,a
0315 A3        1492            inc     dptr
0316 F0        1493            movx    @dptr,a
0317           1494   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:174: *VL = main_int1;
0317 904CE8    1495            mov     dptr,#_main_int1
031A E0        1496            movx    a,@dptr
031B FD        1497            mov     r5,a
031C A3        1498            inc     dptr
031D E0        1499            movx    a,@dptr
031E FE        1500            mov     r6,a
031F 851082    1501            mov     dpl,_Calibrate_LSensors_VL_1_81
0322 851183    1502            mov     dph,(_Calibrate_LSensors_VL_1_81 + 1)
0325 8512F0    1503            mov     b,(_Calibrate_LSensors_VL_1_81 + 2)
0328 ED        1504            mov     a,r5
0329 120100    1505            lcall   __gptrput
032C A3        1506            inc     dptr
032D EE        1507            mov     a,r6
032E 120100    1508            lcall   __gptrput
0331           1509   L015003?:
0331           1510   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:177: if (countL == 10)
0331 90CD60    1511            mov     dptr,#_Calibrate_LSensors_countL_1_82
0334 E0        1512            movx    a,@dptr
0335 FD        1513            mov     r5,a
0336 A3        1514            inc     dptr
0337 E0        1515            movx    a,@dptr
0338 FE        1516            mov     r6,a
0339 BD0A00    1517            cjne    r5,#0x0A,L015007?
033C BE0000    1518            cjne    r6,#0x00,L015007?
033F           1519   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:178: flags |= 2;
033F 90CE50    1520            mov     dptr,#_Calibrate_LSensors_flags_1_82
0342 E0        1521            movx    a,@dptr
0343 FD        1522            mov     r5,a
0344 A3        1523            inc     dptr
0345 E0        1524            movx    a,@dptr
0346 FE        1525            mov     r6,a
0347 90CE50    1526            mov     dptr,#_Calibrate_LSensors_flags_1_82
034A 7402      1527            mov     a,#0x02
034C 4D        1528            orl     a,r5
034D F0        1529            movx    @dptr,a
034E A3        1530            inc     dptr
034F EE        1531            mov     a,r6
0350 F0        1532            movx    @dptr,a
0351           1533   L015007?:
0351           1534   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:181: if ((flags & 1) != 1) {
0351 90CE50    1535            mov     dptr,#_Calibrate_LSensors_flags_1_82
0354 E0        1536            movx    a,@dptr
0355 FD        1537            mov     r5,a
0356 A3        1538            inc     dptr
0357 E0        1539            movx    a,@dptr
0358 530501    1540            anl     ar5,#0x01
035B 7E00      1541            mov     r6,#0x00
035D BD01C0    1542            cjne    r5,#0x01,L015043?
0360 BE00C0    1543            cjne    r6,#0x00,L015043?
0363 020100    1544            ljmp    L015014?
0366           1545   L015043?:
0366           1546   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:182: main_int1 = Volts_at_Pin(QFP32_MUX_P1_4)*1000;
0366 75820A    1547            mov     dpl,#0x0A
0369 120100    1548            lcall   _Volts_at_Pin
036C AD82      1549            mov     r5,dpl
036E AE83      1550            mov     r6,dph
0370 AFF0      1551            mov     r7,b
0372 F8        1552            mov     r0,a
0373 C005      1553            push    ar5
0375 C006      1554            push    ar6
0377 C007      1555            push    ar7
0379 C000      1556            push    ar0
037B 900000    1557            mov     dptr,#0x0000
037E 75F07A    1558            mov     b,#0x7A
0381 7444      1559            mov     a,#0x44
0383 120100    1560            lcall   ___fsmul
0386 AD82      1561            mov     r5,dpl
0388 AE83      1562            mov     r6,dph
038A AFF0      1563            mov     r7,b
038C F8        1564            mov     r0,a
038D E581      1565            mov     a,sp
038F 24FC      1566            add     a,#0xfc
0391 F581      1567            mov     sp,a
0393 8D82      1568            mov     dpl,r5
0395 8E83      1569            mov     dph,r6
0397 8FF0      1570            mov     b,r7
0399 E8        1571            mov     a,r0
039A 120100    1572            lcall   ___fs2uint
039D E582      1573            mov     a,dpl
039F 8583F0    1574            mov     b,dph
03A2 904CE8    1575            mov     dptr,#_main_int1
03A5 F0        1576            movx    @dptr,a
03A6 A3        1577            inc     dptr
03A7 E5F0      1578            mov     a,b
03A9 F0        1579            movx    @dptr,a
03AA           1580   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:184: if (abs(*VR-main_int1) <= 50) {
03AA ADE8      1581            mov     r5,_Calibrate_LSensors_PARM_3
03AC AEE9      1582            mov     r6,(_Calibrate_LSensors_PARM_3 + 1)
03AE AFEA      1583            mov     r7,(_Calibrate_LSensors_PARM_3 + 2)
03B0 8D82      1584            mov     dpl,r5
03B2 8E83      1585            mov     dph,r6
03B4 8FF0      1586            mov     b,r7
03B6 120100    1587            lcall   __gptrget
03B9 F8        1588            mov     r0,a
03BA A3        1589            inc     dptr
03BB 120100    1590            lcall   __gptrget
03BE F9        1591            mov     r1,a
03BF 904CE8    1592            mov     dptr,#_main_int1
03C2 E0        1593            movx    a,@dptr
03C3 FA        1594            mov     r2,a
03C4 A3        1595            inc     dptr
03C5 E0        1596            movx    a,@dptr
03C6 FB        1597            mov     r3,a
03C7 E8        1598            mov     a,r0
03C8 C3        1599            clr     c
03C9 9A        1600            subb    a,r2
03CA F582      1601            mov     dpl,a
03CC E9        1602            mov     a,r1
03CD 9B        1603            subb    a,r3
03CE F583      1604            mov     dph,a
03D0 C005      1605            push    ar5
03D2 C006      1606            push    ar6
03D4 C007      1607            push    ar7
03D6 120100    1608            lcall   _abs
03D9 AA82      1609            mov     r2,dpl
03DB AB83      1610            mov     r3,dph
03DD D007      1611            pop     ar7
03DF D006      1612            pop     ar6
03E1 D005      1613            pop     ar5
03E3 C3        1614            clr     c
03E4 7432      1615            mov     a,#0x32
03E6 9A        1616            subb    a,r2
03E7 E4        1617            clr     a
03E8 6480      1618            xrl     a,#0x80
03EA 8BF0      1619            mov     b,r3
03EC 63F080    1620            xrl     b,#0x80
03EF 95F0      1621            subb    a,b
03F1 4001      1622            jc      L015009?
03F3           1623   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:185: countR++;
03F3 90CE00    1624            mov     dptr,#_Calibrate_LSensors_countR_1_82
03F6 E0        1625            movx    a,@dptr
03F7 2401      1626            add     a,#0x01
03F9 F0        1627            movx    @dptr,a
03FA A3        1628            inc     dptr
03FB E0        1629            movx    a,@dptr
03FC 3400      1630            addc    a,#0x00
03FE F0        1631            movx    @dptr,a
03FF 8001      1632            sjmp    L015010?
0401           1633   L015009?:
0401           1634   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:187: countR =0;
0401 90CE00    1635            mov     dptr,#_Calibrate_LSensors_countR_1_82
0404 E4        1636            clr     a
0405 F0        1637            movx    @dptr,a
0406 A3        1638            inc     dptr
0407 F0        1639            movx    @dptr,a
0408           1640   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:188: *VR = main_int1;
0408 904CE8    1641            mov     dptr,#_main_int1
040B E0        1642            movx    a,@dptr
040C FA        1643            mov     r2,a
040D A3        1644            inc     dptr
040E E0        1645            movx    a,@dptr
040F FB        1646            mov     r3,a
0410 8D82      1647            mov     dpl,r5
0412 8E83      1648            mov     dph,r6
0414 8FF0      1649            mov     b,r7
0416 EA        1650            mov     a,r2
0417 120100    1651            lcall   __gptrput
041A A3        1652            inc     dptr
041B EB        1653            mov     a,r3
041C 120100    1654            lcall   __gptrput
041F           1655   L015010?:
041F           1656   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:191: if (countR == 10)
041F 90CE00    1657            mov     dptr,#_Calibrate_LSensors_countR_1_82
0422 E0        1658            movx    a,@dptr
0423 FA        1659            mov     r2,a
0424 A3        1660            inc     dptr
0425 E0        1661            movx    a,@dptr
0426 FB        1662            mov     r3,a
0427 BA0A00    1663            cjne    r2,#0x0A,L015014?
042A BB0000    1664            cjne    r3,#0x00,L015014?
042D           1665   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:192: flags |= 1;
042D 90CE50    1666            mov     dptr,#_Calibrate_LSensors_flags_1_82
0430 E0        1667            movx    a,@dptr
0431 FA        1668            mov     r2,a
0432 A3        1669            inc     dptr
0433 E0        1670            movx    a,@dptr
0434 FB        1671            mov     r3,a
0435 90CE50    1672            mov     dptr,#_Calibrate_LSensors_flags_1_82
0438 7401      1673            mov     a,#0x01
043A 4A        1674            orl     a,r2
043B F0        1675            movx    @dptr,a
043C A3        1676            inc     dptr
043D EB        1677            mov     a,r3
043E F0        1678            movx    @dptr,a
043F           1679   L015014?:
043F           1680   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:195: if ((flags & 4) != 4) {
043F 90CE50    1681            mov     dptr,#_Calibrate_LSensors_flags_1_82
0442 E0        1682            movx    a,@dptr
0443 FA        1683            mov     r2,a
0444 A3        1684            inc     dptr
0445 E0        1685            movx    a,@dptr
0446 530204    1686            anl     ar2,#0x04
0449 7B00      1687            mov     r3,#0x00
044B BA04C0    1688            cjne    r2,#0x04,L015047?
044E BB00C0    1689            cjne    r3,#0x00,L015047?
0451 020100    1690            ljmp    L015022?
0454           1691   L015047?:
0454           1692   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:196: main_int1 = Volts_at_Pin(QFP32_MUX_P1_5)*1000;
0454 75820B    1693            mov     dpl,#0x0B
0457 120100    1694            lcall   _Volts_at_Pin
045A AA82      1695            mov     r2,dpl
045C AB83      1696            mov     r3,dph
045E ACF0      1697            mov     r4,b
0460 FD        1698            mov     r5,a
0461 C002      1699            push    ar2
0463 C003      1700            push    ar3
0465 C004      1701            push    ar4
0467 C005      1702            push    ar5
0469 900000    1703            mov     dptr,#0x0000
046C 75F07A    1704            mov     b,#0x7A
046F 7444      1705            mov     a,#0x44
0471 120100    1706            lcall   ___fsmul
0474 AA82      1707            mov     r2,dpl
0476 AB83      1708            mov     r3,dph
0478 ACF0      1709            mov     r4,b
047A FD        1710            mov     r5,a
047B E581      1711            mov     a,sp
047D 24FC      1712            add     a,#0xfc
047F F581      1713            mov     sp,a
0481 8A82      1714            mov     dpl,r2
0483 8B83      1715            mov     dph,r3
0485 8CF0      1716            mov     b,r4
0487 ED        1717            mov     a,r5
0488 120100    1718            lcall   ___fs2uint
048B E582      1719            mov     a,dpl
048D 8583F0    1720            mov     b,dph
0490 904CE8    1721            mov     dptr,#_main_int1
0493 F0        1722            movx    @dptr,a
0494 A3        1723            inc     dptr
0495 E5F0      1724            mov     a,b
0497 F0        1725            movx    @dptr,a
0498           1726   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:198: if (abs(*VM-main_int1) <= 50){
0498 AA38      1727            mov     r2,_Calibrate_LSensors_PARM_2
049A AB39      1728            mov     r3,(_Calibrate_LSensors_PARM_2 + 1)
049C AC3A      1729            mov     r4,(_Calibrate_LSensors_PARM_2 + 2)
049E 8A82      1730            mov     dpl,r2
04A0 8B83      1731            mov     dph,r3
04A2 8CF0      1732            mov     b,r4
04A4 120100    1733            lcall   __gptrget
04A7 FD        1734            mov     r5,a
04A8 A3        1735            inc     dptr
04A9 120100    1736            lcall   __gptrget
04AC FE        1737            mov     r6,a
04AD 904CE8    1738            mov     dptr,#_main_int1
04B0 E0        1739            movx    a,@dptr
04B1 FF        1740            mov     r7,a
04B2 A3        1741            inc     dptr
04B3 E0        1742            movx    a,@dptr
04B4 F8        1743            mov     r0,a
04B5 ED        1744            mov     a,r5
04B6 C3        1745            clr     c
04B7 9F        1746            subb    a,r7
04B8 F582      1747            mov     dpl,a
04BA EE        1748            mov     a,r6
04BB 98        1749            subb    a,r0
04BC F583      1750            mov     dph,a
04BE C002      1751            push    ar2
04C0 C003      1752            push    ar3
04C2 C004      1753            push    ar4
04C4 120100    1754            lcall   _abs
04C7 AD82      1755            mov     r5,dpl
04C9 AE83      1756            mov     r6,dph
04CB D004      1757            pop     ar4
04CD D003      1758            pop     ar3
04CF D002      1759            pop     ar2
04D1 C3        1760            clr     c
04D2 7432      1761            mov     a,#0x32
04D4 9D        1762            subb    a,r5
04D5 E4        1763            clr     a
04D6 6480      1764            xrl     a,#0x80
04D8 8EF0      1765            mov     b,r6
04DA 63F080    1766            xrl     b,#0x80
04DD 95F0      1767            subb    a,b
04DF 4001      1768            jc      L015016?
04E1           1769   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:199: countM++;
04E1 90CDB0    1770            mov     dptr,#_Calibrate_LSensors_countM_1_82
04E4 E0        1771            movx    a,@dptr
04E5 2401      1772            add     a,#0x01
04E7 F0        1773            movx    @dptr,a
04E8 A3        1774            inc     dptr
04E9 E0        1775            movx    a,@dptr
04EA 3400      1776            addc    a,#0x00
04EC F0        1777            movx    @dptr,a
04ED 8001      1778            sjmp    L015017?
04EF           1779   L015016?:
04EF           1780   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:201: countM =0;
04EF 90CDB0    1781            mov     dptr,#_Calibrate_LSensors_countM_1_82
04F2 E4        1782            clr     a
04F3 F0        1783            movx    @dptr,a
04F4 A3        1784            inc     dptr
04F5 F0        1785            movx    @dptr,a
04F6           1786   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:202: *VM = main_int1;
04F6 904CE8    1787            mov     dptr,#_main_int1
04F9 E0        1788            movx    a,@dptr
04FA FD        1789            mov     r5,a
04FB A3        1790            inc     dptr
04FC E0        1791            movx    a,@dptr
04FD FE        1792            mov     r6,a
04FE 8A82      1793            mov     dpl,r2
0500 8B83      1794            mov     dph,r3
0502 8CF0      1795            mov     b,r4
0504 ED        1796            mov     a,r5
0505 120100    1797            lcall   __gptrput
0508 A3        1798            inc     dptr
0509 EE        1799            mov     a,r6
050A 120100    1800            lcall   __gptrput
050D           1801   L015017?:
050D           1802   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:205: if (countM == 10)
050D 90CDB0    1803            mov     dptr,#_Calibrate_LSensors_countM_1_82
0510 E0        1804            movx    a,@dptr
0511 FA        1805            mov     r2,a
0512 A3        1806            inc     dptr
0513 E0        1807            movx    a,@dptr
0514 FB        1808            mov     r3,a
0515 BA0A80    1809            cjne    r2,#0x0A,L015049?
0518 BB0080    1810            cjne    r3,#0x00,L015049?
051B 8001      1811            sjmp    L015050?
051D           1812   L015049?:
051D 020100    1813            ljmp    L015022?
0520           1814   L015050?:
0520           1815   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:206: flags |= 4;
0520 90CE50    1816            mov     dptr,#_Calibrate_LSensors_flags_1_82
0523 E0        1817            movx    a,@dptr
0524 FA        1818            mov     r2,a
0525 A3        1819            inc     dptr
0526 E0        1820            movx    a,@dptr
0527 FB        1821            mov     r3,a
0528 90CE50    1822            mov     dptr,#_Calibrate_LSensors_flags_1_82
052B 7404      1823            mov     a,#0x04
052D 4A        1824            orl     a,r2
052E F0        1825            movx    @dptr,a
052F A3        1826            inc     dptr
0530 EB        1827            mov     a,r3
0531 F0        1828            movx    @dptr,a
0532 020100    1829            ljmp    L015022?
0535           1830   L015024?:
0535           1831   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:209: return;         
0535 22        1832            ret
0536           1833   ;------------------------------------------------------------
0536           1834   ;Allocation info for local variables in function 'Follow_Tape'
0536           1835   ;------------------------------------------------------------
0536           1836   ;gnd_VM                    Allocated with name '_Follow_Tape_PARM_2'
0536           1837   ;gnd_VR                    Allocated with name '_Follow_Tape_PARM_3'
0536           1838   ;gnd_VL                    Allocated with name '_Follow_Tape_gnd_VL_1_93'
0536           1839   ;sloc0                     Allocated with name '_Follow_Tape_sloc0_1_0'
0536           1840   ;sloc1                     Allocated with name '_Follow_Tape_sloc1_1_0'
0536           1841   ;sloc2                     Allocated with name '_Follow_Tape_sloc2_1_0'
0536           1842   ;sloc3                     Allocated with name '_Follow_Tape_sloc3_1_0'
0536           1843   ;sloc4                     Allocated with name '_Follow_Tape_sloc4_1_0'
0536           1844   ;tp_VL                     Allocated with name '_Follow_Tape_tp_VL_1_94'
0536           1845   ;tp_VR                     Allocated with name '_Follow_Tape_tp_VR_1_94'
0536           1846   ;tp_VM                     Allocated with name '_Follow_Tape_tp_VM_1_94'
0536           1847   ;------------------------------------------------------------
0536           1848   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:213: void Follow_Tape(unsigned int *gnd_VL, unsigned int *gnd_VM, unsigned int *gnd_VR)
0536           1849   ;        -----------------------------------------
0536           1850   ;         function Follow_Tape
0536           1851   ;        -----------------------------------------
0536           1852   _Follow_Tape:
0536           1853   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:216: xdata unsigned int tp_VL = *gnd_VL-TAPEOFFSET;
0536 858260    1854            mov     _Follow_Tape_gnd_VL_1_93,dpl
0539 858361    1855            mov     (_Follow_Tape_gnd_VL_1_93 + 1),dph
053C 85F062    1856            mov     (_Follow_Tape_gnd_VL_1_93 + 2),b
053F 120100    1857            lcall   __gptrget
0542 FD        1858            mov     r5,a
0543 A3        1859            inc     dptr
0544 120100    1860            lcall   __gptrget
0547 FE        1861            mov     r6,a
0548 ED        1862            mov     a,r5
0549 2470      1863            add     a,#0x70
054B FD        1864            mov     r5,a
054C EE        1865            mov     a,r6
054D 34FE      1866            addc    a,#0xfe
054F FE        1867            mov     r6,a
0550           1868   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:217: xdata unsigned int tp_VR = *gnd_VR-TAPEOFFSET;
0550 854800    1869            mov     _Follow_Tape_sloc1_1_0,_Follow_Tape_PARM_3
0553 854901    1870            mov     (_Follow_Tape_sloc1_1_0 + 1),(_Follow_Tape_PARM_3 + 1)
0556 854A02    1871            mov     (_Follow_Tape_sloc1_1_0 + 2),(_Follow_Tape_PARM_3 + 2)
0559 850082    1872            mov     dpl,_Follow_Tape_sloc1_1_0
055C 850183    1873            mov     dph,(_Follow_Tape_sloc1_1_0 + 1)
055F 8502F0    1874            mov     b,(_Follow_Tape_sloc1_1_0 + 2)
0562 120100    1875            lcall   __gptrget
0565 FA        1876            mov     r2,a
0566 A3        1877            inc     dptr
0567 120100    1878            lcall   __gptrget
056A FB        1879            mov     r3,a
056B EA        1880            mov     a,r2
056C 2470      1881            add     a,#0x70
056E FA        1882            mov     r2,a
056F EB        1883            mov     a,r3
0570 34FE      1884            addc    a,#0xfe
0572 FB        1885            mov     r3,a
0573           1886   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:218: xdata unsigned int tp_VM = *gnd_VM-TAPEOFFSET;
0573 8598B0    1887            mov     _Follow_Tape_sloc0_1_0,_Follow_Tape_PARM_2
0576 8599B1    1888            mov     (_Follow_Tape_sloc0_1_0 + 1),(_Follow_Tape_PARM_2 + 1)
0579 859AB2    1889            mov     (_Follow_Tape_sloc0_1_0 + 2),(_Follow_Tape_PARM_2 + 2)
057C 85B082    1890            mov     dpl,_Follow_Tape_sloc0_1_0
057F 85B183    1891            mov     dph,(_Follow_Tape_sloc0_1_0 + 1)
0582 85B2F0    1892            mov     b,(_Follow_Tape_sloc0_1_0 + 2)
0585 120100    1893            lcall   __gptrget
0588 FC        1894            mov     r4,a
0589 A3        1895            inc     dptr
058A 120100    1896            lcall   __gptrget
058D FF        1897            mov     r7,a
058E EC        1898            mov     a,r4
058F 2470      1899            add     a,#0x70
0591 FC        1900            mov     r4,a
0592 EF        1901            mov     a,r7
0593 34FE      1902            addc    a,#0xfe
0595 FF        1903            mov     r7,a
0596           1904   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:221: pwmL = BASEPWM;
0596 904DA8    1905            mov     dptr,#_pwmL
0599 7419      1906            mov     a,#0x19
059B F0        1907            movx    @dptr,a
059C E4        1908            clr     a
059D A3        1909            inc     dptr
059E F0        1910            movx    @dptr,a
059F           1911   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:222: pwmR = BASEPWM;
059F 904D68    1912            mov     dptr,#_pwmR
05A2 7419      1913            mov     a,#0x19
05A4 F0        1914            movx    @dptr,a
05A5 E4        1915            clr     a
05A6 A3        1916            inc     dptr
05A7 F0        1917            movx    @dptr,a
05A8           1918   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:225: mot_dir(0,0);
05A8 E4        1919            clr     a
05A9 F540      1920            mov     _mot_dir_PARM_2,a
05AB F541      1921            mov     (_mot_dir_PARM_2 + 1),a
05AD F582      1922            mov     dpl,a
05AF F583      1923            mov     dph,a
05B1 C002      1924            push    ar2
05B3 C003      1925            push    ar3
05B5 C004      1926            push    ar4
05B7 C005      1927            push    ar5
05B9 C006      1928            push    ar6
05BB C007      1929            push    ar7
05BD 120100    1930            lcall   _mot_dir
05C0 D007      1931            pop     ar7
05C2 D006      1932            pop     ar6
05C4 D005      1933            pop     ar5
05C6 D004      1934            pop     ar4
05C8 D003      1935            pop     ar3
05CA D002      1936            pop     ar2
05CC           1937   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:226: dir_flag = 1;
05CC D208      1938            setb    _dir_flag
05CE           1939   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:227: dir_count = 0;
05CE 904AE8    1940            mov     dptr,#_dir_count
05D1 E4        1941            clr     a
05D2 F0        1942            movx    @dptr,a
05D3 A3        1943            inc     dptr
05D4 F0        1944            movx    @dptr,a
05D5           1945   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:229: while (1) {
05D5           1946   L016058?:
05D5           1947   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:230: if (Volts_at_Pin(QFP32_MUX_P1_5) * 1000 > tp_VM) {                      //if M not on tape
05D5 C005      1948            push    ar5
05D7 C006      1949            push    ar6
05D9 75820B    1950            mov     dpl,#0x0B
05DC C002      1951            push    ar2
05DE C003      1952            push    ar3
05E0 C004      1953            push    ar4
05E2 C007      1954            push    ar7
05E4 120100    1955            lcall   _Volts_at_Pin
05E7 A882      1956            mov     r0,dpl
05E9 A983      1957            mov     r1,dph
05EB ADF0      1958            mov     r5,b
05ED FE        1959            mov     r6,a
05EE C000      1960            push    ar0
05F0 C001      1961            push    ar1
05F2 C005      1962            push    ar5
05F4 C006      1963            push    ar6
05F6 900000    1964            mov     dptr,#0x0000
05F9 75F07A    1965            mov     b,#0x7A
05FC 7444      1966            mov     a,#0x44
05FE 120100    1967            lcall   ___fsmul
0601 AD82      1968            mov     r5,dpl
0603 AE83      1969            mov     r6,dph
0605 A8F0      1970            mov     r0,b
0607 F9        1971            mov     r1,a
0608 E581      1972            mov     a,sp
060A 24FC      1973            add     a,#0xfc
060C F581      1974            mov     sp,a
060E D007      1975            pop     ar7
0610 D004      1976            pop     ar4
0612 8C82      1977            mov     dpl,r4
0614 8F83      1978            mov     dph,r7
0616 C004      1979            push    ar4
0618 C005      1980            push    ar5
061A C006      1981            push    ar6
061C C007      1982            push    ar7
061E C000      1983            push    ar0
0620 C001      1984            push    ar1
0622 120100    1985            lcall   ___uint2fs
0625 858250    1986            mov     _Follow_Tape_sloc2_1_0,dpl
0628 858351    1987            mov     (_Follow_Tape_sloc2_1_0 + 1),dph
062B 85F052    1988            mov     (_Follow_Tape_sloc2_1_0 + 2),b
062E F553      1989            mov     (_Follow_Tape_sloc2_1_0 + 3),a
0630 D001      1990            pop     ar1
0632 D000      1991            pop     ar0
0634 D007      1992            pop     ar7
0636 D006      1993            pop     ar6
0638 D005      1994            pop     ar5
063A C006      1995            push    ar6
063C C007      1996            push    ar7
063E C050      1997            push    _Follow_Tape_sloc2_1_0
0640 C051      1998            push    (_Follow_Tape_sloc2_1_0 + 1)
0642 C052      1999            push    (_Follow_Tape_sloc2_1_0 + 2)
0644 C053      2000            push    (_Follow_Tape_sloc2_1_0 + 3)
0646 8D82      2001            mov     dpl,r5
0648 8E83      2002            mov     dph,r6
064A 88F0      2003            mov     b,r0
064C E9        2004            mov     a,r1
064D 120100    2005            lcall   ___fsgt
0650 AD82      2006            mov     r5,dpl
0652 E581      2007            mov     a,sp
0654 24FC      2008            add     a,#0xfc
0656 F581      2009            mov     sp,a
0658 D007      2010            pop     ar7
065A D006      2011            pop     ar6
065C D004      2012            pop     ar4
065E D003      2013            pop     ar3
0660 D002      2014            pop     ar2
0662 ED        2015            mov     a,r5
0663 D006      2016            pop     ar6
0665 D005      2017            pop     ar5
0667 7001      2018            jnz     L016091?
0669 020100    2019            ljmp    L016030?
066C           2020   L016091?:
066C           2021   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:232: if (Volts_at_Pin(QFP32_MUX_P1_6) * 1000 < tp_VL) {              //if L on tape
066C C004      2022            push    ar4
066E C007      2023            push    ar7
0670 75820C    2024            mov     dpl,#0x0C
0673 C002      2025            push    ar2
0675 C003      2026            push    ar3
0677 C005      2027            push    ar5
0679 C006      2028            push    ar6
067B 120100    2029            lcall   _Volts_at_Pin
067E A882      2030            mov     r0,dpl
0680 A983      2031            mov     r1,dph
0682 ACF0      2032            mov     r4,b
0684 FF        2033            mov     r7,a
0685 D006      2034            pop     ar6
0687 D005      2035            pop     ar5
0689 C004      2036            push    ar4
068B C005      2037            push    ar5
068D C006      2038            push    ar6
068F C007      2039            push    ar7
0691 C000      2040            push    ar0
0693 C001      2041            push    ar1
0695 C004      2042            push    ar4
0697 C007      2043            push    ar7
0699 900000    2044            mov     dptr,#0x0000
069C 75F07A    2045            mov     b,#0x7A
069F 7444      2046            mov     a,#0x44
06A1 120100    2047            lcall   ___fsmul
06A4 8582A0    2048            mov     _Follow_Tape_sloc3_1_0,dpl
06A7 8583A1    2049            mov     (_Follow_Tape_sloc3_1_0 + 1),dph
06AA 85F0A2    2050            mov     (_Follow_Tape_sloc3_1_0 + 2),b
06AD F5A3      2051            mov     (_Follow_Tape_sloc3_1_0 + 3),a
06AF E581      2052            mov     a,sp
06B1 24FC      2053            add     a,#0xfc
06B3 F581      2054            mov     sp,a
06B5 D007      2055            pop     ar7
06B7 D006      2056            pop     ar6
06B9 D005      2057            pop     ar5
06BB D004      2058            pop     ar4
06BD 8D82      2059            mov     dpl,r5
06BF 8E83      2060            mov     dph,r6
06C1 C005      2061            push    ar5
06C3 C006      2062            push    ar6
06C5 120100    2063            lcall   ___uint2fs
06C8 AC82      2064            mov     r4,dpl
06CA AF83      2065            mov     r7,dph
06CC A8F0      2066            mov     r0,b
06CE F9        2067            mov     r1,a
06CF C007      2068            push    ar7
06D1 C004      2069            push    ar4
06D3 C007      2070            push    ar7
06D5 C000      2071            push    ar0
06D7 C001      2072            push    ar1
06D9 85A082    2073            mov     dpl,_Follow_Tape_sloc3_1_0
06DC 85A183    2074            mov     dph,(_Follow_Tape_sloc3_1_0 + 1)
06DF 85A2F0    2075            mov     b,(_Follow_Tape_sloc3_1_0 + 2)
06E2 E5A3      2076            mov     a,(_Follow_Tape_sloc3_1_0 + 3)
06E4 120100    2077            lcall   ___fslt
06E7 AC82      2078            mov     r4,dpl
06E9 E581      2079            mov     a,sp
06EB 24FC      2080            add     a,#0xfc
06ED F581      2081            mov     sp,a
06EF D007      2082            pop     ar7
06F1 D006      2083            pop     ar6
06F3 D005      2084            pop     ar5
06F5 D003      2085            pop     ar3
06F7 D002      2086            pop     ar2
06F9 EC        2087            mov     a,r4
06FA D007      2088            pop     ar7
06FC D004      2089            pop     ar4
06FE 6001      2090            jz      L016015?
0700           2091   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:233: mot_dir(1,0);
0700 E4        2092            clr     a
0701 F540      2093            mov     _mot_dir_PARM_2,a
0703 F541      2094            mov     (_mot_dir_PARM_2 + 1),a
0705 900001    2095            mov     dptr,#0x0001
0708 C002      2096            push    ar2
070A C003      2097            push    ar3
070C C004      2098            push    ar4
070E C005      2099            push    ar5
0710 C006      2100            push    ar6
0712 C007      2101            push    ar7
0714 120100    2102            lcall   _mot_dir
0717 D007      2103            pop     ar7
0719 D006      2104            pop     ar6
071B D005      2105            pop     ar5
071D D004      2106            pop     ar4
071F D003      2107            pop     ar3
0721 D002      2108            pop     ar2
0723           2109   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:234: pwmR = BOOSTPWM; // this main way
0723 904D68    2110            mov     dptr,#_pwmR
0726 742D      2111            mov     a,#0x2D
0728 F0        2112            movx    @dptr,a
0729 E4        2113            clr     a
072A A3        2114            inc     dptr
072B F0        2115            movx    @dptr,a
072C           2116   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:235: pwmL = BOOSTPWM;
072C 904DA8    2117            mov     dptr,#_pwmL
072F 742D      2118            mov     a,#0x2D
0731 F0        2119            movx    @dptr,a
0732 E4        2120            clr     a
0733 A3        2121            inc     dptr
0734 F0        2122            movx    @dptr,a
0735           2123   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:238: if (dir_flag == 0) {
0735 300880    2124            jnb     _dir_flag,L016093?
0738 020100    2125            ljmp    L016031?
073B           2126   L016093?:
073B           2127   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:239: if (dir_count < 0) dir_count = 1;
073B 904AE8    2128            mov     dptr,#_dir_count
073E E0        2129            movx    a,@dptr
073F F8        2130            mov     r0,a
0740 A3        2131            inc     dptr
0741 E0        2132            movx    a,@dptr
0742 F9        2133            mov     r1,a
0743 30E700    2134            jnb     acc.7,L016002?
0746 904AE8    2135            mov     dptr,#_dir_count
0749 7401      2136            mov     a,#0x01
074B F0        2137            movx    @dptr,a
074C E4        2138            clr     a
074D A3        2139            inc     dptr
074E F0        2140            movx    @dptr,a
074F 8001      2141            sjmp    L016003?
0751           2142   L016002?:
0751           2143   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:240: else dir_count++;
0751 904AE8    2144            mov     dptr,#_dir_count
0754 E0        2145            movx    a,@dptr
0755 2401      2146            add     a,#0x01
0757 F0        2147            movx    @dptr,a
0758 A3        2148            inc     dptr
0759 E0        2149            movx    a,@dptr
075A 3400      2150            addc    a,#0x00
075C F0        2151            movx    @dptr,a
075D           2152   L016003?:
075D           2153   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:241: dir_flag = 1;
075D D208      2154            setb    _dir_flag
075F 020100    2155            ljmp    L016031?
0762           2156   L016015?:
0762           2157   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:243: } else if (Volts_at_Pin(QFP32_MUX_P1_4) * 1000 < tp_VR) { //if R on tape
0762 C004      2158            push    ar4
0764 C007      2159            push    ar7
0766 75820A    2160            mov     dpl,#0x0A
0769 C002      2161            push    ar2
076B C003      2162            push    ar3
076D C005      2163            push    ar5
076F C006      2164            push    ar6
0771 120100    2165            lcall   _Volts_at_Pin
0774 A882      2166            mov     r0,dpl
0776 A983      2167            mov     r1,dph
0778 ACF0      2168            mov     r4,b
077A FF        2169            mov     r7,a
077B D006      2170            pop     ar6
077D D005      2171            pop     ar5
077F C004      2172            push    ar4
0781 C005      2173            push    ar5
0783 C006      2174            push    ar6
0785 C007      2175            push    ar7
0787 C000      2176            push    ar0
0789 C001      2177            push    ar1
078B C004      2178            push    ar4
078D C007      2179            push    ar7
078F 900000    2180            mov     dptr,#0x0000
0792 75F07A    2181            mov     b,#0x7A
0795 7444      2182            mov     a,#0x44
0797 120100    2183            lcall   ___fsmul
079A 8582A0    2184            mov     _Follow_Tape_sloc3_1_0,dpl
079D 8583A1    2185            mov     (_Follow_Tape_sloc3_1_0 + 1),dph
07A0 85F0A2    2186            mov     (_Follow_Tape_sloc3_1_0 + 2),b
07A3 F5A3      2187            mov     (_Follow_Tape_sloc3_1_0 + 3),a
07A5 E581      2188            mov     a,sp
07A7 24FC      2189            add     a,#0xfc
07A9 F581      2190            mov     sp,a
07AB D007      2191            pop     ar7
07AD D006      2192            pop     ar6
07AF D005      2193            pop     ar5
07B1 D004      2194            pop     ar4
07B3 D003      2195            pop     ar3
07B5 D002      2196            pop     ar2
07B7 8A82      2197            mov     dpl,r2
07B9 8B83      2198            mov     dph,r3
07BB C002      2199            push    ar2
07BD C003      2200            push    ar3
07BF C005      2201            push    ar5
07C1 C006      2202            push    ar6
07C3 120100    2203            lcall   ___uint2fs
07C6 AC82      2204            mov     r4,dpl
07C8 AF83      2205            mov     r7,dph
07CA A8F0      2206            mov     r0,b
07CC F9        2207            mov     r1,a
07CD C007      2208            push    ar7
07CF C004      2209            push    ar4
07D1 C007      2210            push    ar7
07D3 C000      2211            push    ar0
07D5 C001      2212            push    ar1
07D7 85A082    2213            mov     dpl,_Follow_Tape_sloc3_1_0
07DA 85A183    2214            mov     dph,(_Follow_Tape_sloc3_1_0 + 1)
07DD 85A2F0    2215            mov     b,(_Follow_Tape_sloc3_1_0 + 2)
07E0 E5A3      2216            mov     a,(_Follow_Tape_sloc3_1_0 + 3)
07E2 120100    2217            lcall   ___fslt
07E5 AC82      2218            mov     r4,dpl
07E7 E581      2219            mov     a,sp
07E9 24FC      2220            add     a,#0xfc
07EB F581      2221            mov     sp,a
07ED D007      2222            pop     ar7
07EF D006      2223            pop     ar6
07F1 D005      2224            pop     ar5
07F3 D003      2225            pop     ar3
07F5 D002      2226            pop     ar2
07F7 EC        2227            mov     a,r4
07F8 D007      2228            pop     ar7
07FA D004      2229            pop     ar4
07FC 6001      2230            jz      L016012?
07FE           2231   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:244: mot_dir(0,1);
07FE 754001    2232            mov     _mot_dir_PARM_2,#0x01
0801 E4        2233            clr     a
0802 F541      2234            mov     (_mot_dir_PARM_2 + 1),a
0804 900000    2235            mov     dptr,#0x0000
0807 C002      2236            push    ar2
0809 C003      2237            push    ar3
080B C004      2238            push    ar4
080D C005      2239            push    ar5
080F C006      2240            push    ar6
0811 C007      2241            push    ar7
0813 120100    2242            lcall   _mot_dir
0816 D007      2243            pop     ar7
0818 D006      2244            pop     ar6
081A D005      2245            pop     ar5
081C D004      2246            pop     ar4
081E D003      2247            pop     ar3
0820 D002      2248            pop     ar2
0822           2249   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:245: pwmL = BOOSTPWM; // this main way
0822 904DA8    2250            mov     dptr,#_pwmL
0825 742D      2251            mov     a,#0x2D
0827 F0        2252            movx    @dptr,a
0828 E4        2253            clr     a
0829 A3        2254            inc     dptr
082A F0        2255            movx    @dptr,a
082B           2256   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:246: pwmR = BOOSTPWM;        
082B 904D68    2257            mov     dptr,#_pwmR
082E 742D      2258            mov     a,#0x2D
0830 F0        2259            movx    @dptr,a
0831 E4        2260            clr     a
0832 A3        2261            inc     dptr
0833 F0        2262            movx    @dptr,a
0834           2263   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:249: if (dir_flag == 0) {
0834 3008C0    2264            jnb     _dir_flag,L016096?
0837 020100    2265            ljmp    L016031?
083A           2266   L016096?:
083A           2267   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:250: if (dir_count > 0) dir_count = -1;
083A 904AE8    2268            mov     dptr,#_dir_count
083D E0        2269            movx    a,@dptr
083E F8        2270            mov     r0,a
083F A3        2271            inc     dptr
0840 E0        2272            movx    a,@dptr
0841 F9        2273            mov     r1,a
0842 C3        2274            clr     c
0843 E4        2275            clr     a
0844 98        2276            subb    a,r0
0845 E4        2277            clr     a
0846 6480      2278            xrl     a,#0x80
0848 89F0      2279            mov     b,r1
084A 63F080    2280            xrl     b,#0x80
084D 95F0      2281            subb    a,b
084F 5001      2282            jnc     L016007?
0851 904AE8    2283            mov     dptr,#_dir_count
0854 74FF      2284            mov     a,#0xFF
0856 F0        2285            movx    @dptr,a
0857 A3        2286            inc     dptr
0858 F0        2287            movx    @dptr,a
0859 8001      2288            sjmp    L016008?
085B           2289   L016007?:
085B           2290   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:251: else dir_count--;
085B 904AE8    2291            mov     dptr,#_dir_count
085E E0        2292            movx    a,@dptr
085F 24FF      2293            add     a,#0xff
0861 F8        2294            mov     r0,a
0862 A3        2295            inc     dptr
0863 E0        2296            movx    a,@dptr
0864 34FF      2297            addc    a,#0xff
0866 F9        2298            mov     r1,a
0867 904AE8    2299            mov     dptr,#_dir_count
086A E8        2300            mov     a,r0
086B F0        2301            movx    @dptr,a
086C A3        2302            inc     dptr
086D E9        2303            mov     a,r1
086E F0        2304            movx    @dptr,a
086F           2305   L016008?:
086F           2306   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:252: dir_flag = 1;
086F D208      2307            setb    _dir_flag
0871 020100    2308            ljmp    L016031?
0874           2309   L016012?:
0874           2310   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:255: mot_dir(0,0);
0874 E4        2311            clr     a
0875 F540      2312            mov     _mot_dir_PARM_2,a
0877 F541      2313            mov     (_mot_dir_PARM_2 + 1),a
0879 F582      2314            mov     dpl,a
087B F583      2315            mov     dph,a
087D C002      2316            push    ar2
087F C003      2317            push    ar3
0881 C004      2318            push    ar4
0883 C005      2319            push    ar5
0885 C006      2320            push    ar6
0887 C007      2321            push    ar7
0889 120100    2322            lcall   _mot_dir
088C D007      2323            pop     ar7
088E D006      2324            pop     ar6
0890 D005      2325            pop     ar5
0892 D004      2326            pop     ar4
0894 D003      2327            pop     ar3
0896 D002      2328            pop     ar2
0898           2329   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:256: pwmL = BASEPWM;
0898 904DA8    2330            mov     dptr,#_pwmL
089B 7419      2331            mov     a,#0x19
089D F0        2332            movx    @dptr,a
089E E4        2333            clr     a
089F A3        2334            inc     dptr
08A0 F0        2335            movx    @dptr,a
08A1           2336   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:257: pwmR = BASEPWM;         
08A1 904D68    2337            mov     dptr,#_pwmR
08A4 7419      2338            mov     a,#0x19
08A6 F0        2339            movx    @dptr,a
08A7 E4        2340            clr     a
08A8 A3        2341            inc     dptr
08A9 F0        2342            movx    @dptr,a
08AA 020100    2343            ljmp    L016031?
08AD           2344   L016030?:
08AD           2345   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:261: } else if ((Volts_at_Pin(QFP32_MUX_P1_6) * 1000 < tp_VL) && (Volts_at_Pin(QFP32_MUX_P1_4) * 1000 < tp_VR) && (Volts_at_Pin(QFP32_MUX_P1_5) * 1000 < tp_VM) && find_circle2_flag) {
08AD C004      2346            push    ar4
08AF C007      2347            push    ar7
08B1 75820C    2348            mov     dpl,#0x0C
08B4 C002      2349            push    ar2
08B6 C003      2350            push    ar3
08B8 C005      2351            push    ar5
08BA C006      2352            push    ar6
08BC 120100    2353            lcall   _Volts_at_Pin
08BF A882      2354            mov     r0,dpl
08C1 A983      2355            mov     r1,dph
08C3 ACF0      2356            mov     r4,b
08C5 FF        2357            mov     r7,a
08C6 C000      2358            push    ar0
08C8 C001      2359            push    ar1
08CA C004      2360            push    ar4
08CC C007      2361            push    ar7
08CE 900000    2362            mov     dptr,#0x0000
08D1 75F07A    2363            mov     b,#0x7A
08D4 7444      2364            mov     a,#0x44
08D6 120100    2365            lcall   ___fsmul
08D9 AC82      2366            mov     r4,dpl
08DB AF83      2367            mov     r7,dph
08DD A8F0      2368            mov     r0,b
08DF F9        2369            mov     r1,a
08E0 E581      2370            mov     a,sp
08E2 24FC      2371            add     a,#0xfc
08E4 F581      2372            mov     sp,a
08E6 D006      2373            pop     ar6
08E8 D005      2374            pop     ar5
08EA 8D82      2375            mov     dpl,r5
08EC 8E83      2376            mov     dph,r6
08EE C004      2377            push    ar4
08F0 C005      2378            push    ar5
08F2 C006      2379            push    ar6
08F4 C007      2380            push    ar7
08F6 C000      2381            push    ar0
08F8 C001      2382            push    ar1
08FA 120100    2383            lcall   ___uint2fs
08FD 8582A0    2384            mov     _Follow_Tape_sloc3_1_0,dpl
0900 8583A1    2385            mov     (_Follow_Tape_sloc3_1_0 + 1),dph
0903 85F0A2    2386            mov     (_Follow_Tape_sloc3_1_0 + 2),b
0906 F5A3      2387            mov     (_Follow_Tape_sloc3_1_0 + 3),a
0908 D001      2388            pop     ar1
090A D000      2389            pop     ar0
090C D007      2390            pop     ar7
090E D006      2391            pop     ar6
0910 D005      2392            pop     ar5
0912 D004      2393            pop     ar4
0914 C005      2394            push    ar5
0916 C006      2395            push    ar6
0918 C007      2396            push    ar7
091A C0A0      2397            push    _Follow_Tape_sloc3_1_0
091C C0A1      2398            push    (_Follow_Tape_sloc3_1_0 + 1)
091E C0A2      2399            push    (_Follow_Tape_sloc3_1_0 + 2)
0920 C0A3      2400            push    (_Follow_Tape_sloc3_1_0 + 3)
0922 8C82      2401            mov     dpl,r4
0924 8F83      2402            mov     dph,r7
0926 88F0      2403            mov     b,r0
0928 E9        2404            mov     a,r1
0929 120100    2405            lcall   ___fslt
092C AC82      2406            mov     r4,dpl
092E E581      2407            mov     a,sp
0930 24FC      2408            add     a,#0xfc
0932 F581      2409            mov     sp,a
0934 D007      2410            pop     ar7
0936 D006      2411            pop     ar6
0938 D005      2412            pop     ar5
093A D003      2413            pop     ar3
093C D002      2414            pop     ar2
093E EC        2415            mov     a,r4
093F D007      2416            pop     ar7
0941 D004      2417            pop     ar4
0943 7001      2418            jnz     L016098?
0945 020100    2419            ljmp    L016024?
0948           2420   L016098?:
0948 C004      2421            push    ar4
094A C007      2422            push    ar7
094C 75820A    2423            mov     dpl,#0x0A
094F C002      2424            push    ar2
0951 C003      2425            push    ar3
0953 C005      2426            push    ar5
0955 C006      2427            push    ar6
0957 120100    2428            lcall   _Volts_at_Pin
095A A882      2429            mov     r0,dpl
095C A983      2430            mov     r1,dph
095E ACF0      2431            mov     r4,b
0960 FF        2432            mov     r7,a
0961 D006      2433            pop     ar6
0963 D005      2434            pop     ar5
0965 C004      2435            push    ar4
0967 C005      2436            push    ar5
0969 C006      2437            push    ar6
096B C007      2438            push    ar7
096D C000      2439            push    ar0
096F C001      2440            push    ar1
0971 C004      2441            push    ar4
0973 C007      2442            push    ar7
0975 900000    2443            mov     dptr,#0x0000
0978 75F07A    2444            mov     b,#0x7A
097B 7444      2445            mov     a,#0x44
097D 120100    2446            lcall   ___fsmul
0980 8582F0    2447            mov     _Follow_Tape_sloc4_1_0,dpl
0983 8583F1    2448            mov     (_Follow_Tape_sloc4_1_0 + 1),dph
0986 85F0F2    2449            mov     (_Follow_Tape_sloc4_1_0 + 2),b
0989 F5F3      2450            mov     (_Follow_Tape_sloc4_1_0 + 3),a
098B E581      2451            mov     a,sp
098D 24FC      2452            add     a,#0xfc
098F F581      2453            mov     sp,a
0991 D007      2454            pop     ar7
0993 D006      2455            pop     ar6
0995 D005      2456            pop     ar5
0997 D004      2457            pop     ar4
0999 D003      2458            pop     ar3
099B D002      2459            pop     ar2
099D 8A82      2460            mov     dpl,r2
099F 8B83      2461            mov     dph,r3
09A1 C002      2462            push    ar2
09A3 C003      2463            push    ar3
09A5 C005      2464            push    ar5
09A7 C006      2465            push    ar6
09A9 120100    2466            lcall   ___uint2fs
09AC AC82      2467            mov     r4,dpl
09AE AF83      2468            mov     r7,dph
09B0 A8F0      2469            mov     r0,b
09B2 F9        2470            mov     r1,a
09B3 C007      2471            push    ar7
09B5 C004      2472            push    ar4
09B7 C007      2473            push    ar7
09B9 C000      2474            push    ar0
09BB C001      2475            push    ar1
09BD 85F082    2476            mov     dpl,_Follow_Tape_sloc4_1_0
09C0 85F183    2477            mov     dph,(_Follow_Tape_sloc4_1_0 + 1)
09C3 85F2F0    2478            mov     b,(_Follow_Tape_sloc4_1_0 + 2)
09C6 E5F3      2479            mov     a,(_Follow_Tape_sloc4_1_0 + 3)
09C8 120100    2480            lcall   ___fslt
09CB AC82      2481            mov     r4,dpl
09CD E581      2482            mov     a,sp
09CF 24FC      2483            add     a,#0xfc
09D1 F581      2484            mov     sp,a
09D3 D007      2485            pop     ar7
09D5 D006      2486            pop     ar6
09D7 D005      2487            pop     ar5
09D9 D003      2488            pop     ar3
09DB D002      2489            pop     ar2
09DD EC        2490            mov     a,r4
09DE D007      2491            pop     ar7
09E0 D004      2492            pop     ar4
09E2 7001      2493            jnz     L016099?
09E4 020100    2494            ljmp    L016024?
09E7           2495   L016099?:
09E7 C004      2496            push    ar4
09E9 C007      2497            push    ar7
09EB 75820B    2498            mov     dpl,#0x0B
09EE C002      2499            push    ar2
09F0 C003      2500            push    ar3
09F2 C005      2501            push    ar5
09F4 C006      2502            push    ar6
09F6 120100    2503            lcall   _Volts_at_Pin
09F9 A882      2504            mov     r0,dpl
09FB A983      2505            mov     r1,dph
09FD ACF0      2506            mov     r4,b
09FF FF        2507            mov     r7,a
0A00 C000      2508            push    ar0
0A02 C001      2509            push    ar1
0A04 C004      2510            push    ar4
0A06 C007      2511            push    ar7
0A08 900000    2512            mov     dptr,#0x0000
0A0B 75F07A    2513            mov     b,#0x7A
0A0E 7444      2514            mov     a,#0x44
0A10 120100    2515            lcall   ___fsmul
0A13 AC82      2516            mov     r4,dpl
0A15 AF83      2517            mov     r7,dph
0A17 A8F0      2518            mov     r0,b
0A19 F9        2519            mov     r1,a
0A1A E581      2520            mov     a,sp
0A1C 24FC      2521            add     a,#0xfc
0A1E F581      2522            mov     sp,a
0A20 C007      2523            push    ar7
0A22 C050      2524            push    _Follow_Tape_sloc2_1_0
0A24 C051      2525            push    (_Follow_Tape_sloc2_1_0 + 1)
0A26 C052      2526            push    (_Follow_Tape_sloc2_1_0 + 2)
0A28 C053      2527            push    (_Follow_Tape_sloc2_1_0 + 3)
0A2A 8C82      2528            mov     dpl,r4
0A2C 8F83      2529            mov     dph,r7
0A2E 88F0      2530            mov     b,r0
0A30 E9        2531            mov     a,r1
0A31 120100    2532            lcall   ___fslt
0A34 AC82      2533            mov     r4,dpl
0A36 E581      2534            mov     a,sp
0A38 24FC      2535            add     a,#0xfc
0A3A F581      2536            mov     sp,a
0A3C D007      2537            pop     ar7
0A3E D006      2538            pop     ar6
0A40 D005      2539            pop     ar5
0A42 D003      2540            pop     ar3
0A44 D002      2541            pop     ar2
0A46 EC        2542            mov     a,r4
0A47 D007      2543            pop     ar7
0A49 D004      2544            pop     ar4
0A4B 6001      2545            jz      L016024?
0A4D           2546   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:262: find_circle2_flag = 0;
0A4D 105840    2547            jbc     _find_circle2_flag,L016101?
0A50 8001      2548            sjmp    L016024?
0A52           2549   L016101?:
0A52           2550   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:263: find_circle1_flag = 0;
0A52 C2A8      2551            clr     _find_circle1_flag
0A54           2552   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:264: waitms(2000);           //move towards the middle of the circle
0A54 9007D0    2553            mov     dptr,#0x07D0
0A57 120100    2554            lcall   _waitms
0A5A           2555   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:265: stop();
0A5A 120100    2556            lcall   _stop
0A5D           2557   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:266: Claw_Pos(10);
0A5D 90000A    2558            mov     dptr,#0x000A
0A60 120100    2559            lcall   _Claw_Pos
0A63           2560   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:267: waitms(500);
0A63 9001F4    2561            mov     dptr,#0x01F4
0A66           2562   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:268: break;                          //we break so that the program can find the tape again (travel back to the main circle)
0A66 020100    2563            ljmp    _waitms
0A69           2564   L016024?:
0A69           2565   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:270: } else if ((Volts_at_Pin(QFP32_MUX_P1_6) * 1000 < tp_VL) && (Volts_at_Pin(QFP32_MUX_P1_4) * 1000 < tp_VR) && (Volts_at_Pin(QFP32_MUX_P1_5) * 1000 < tp_VM) && find_circle1_flag) {
0A69 C004      2566            push    ar4
0A6B C007      2567            push    ar7
0A6D 75820C    2568            mov     dpl,#0x0C
0A70 C002      2569            push    ar2
0A72 C003      2570            push    ar3
0A74 C005      2571            push    ar5
0A76 C006      2572            push    ar6
0A78 120100    2573            lcall   _Volts_at_Pin
0A7B A882      2574            mov     r0,dpl
0A7D A983      2575            mov     r1,dph
0A7F ACF0      2576            mov     r4,b
0A81 FF        2577            mov     r7,a
0A82 C000      2578            push    ar0
0A84 C001      2579            push    ar1
0A86 C004      2580            push    ar4
0A88 C007      2581            push    ar7
0A8A 900000    2582            mov     dptr,#0x0000
0A8D 75F07A    2583            mov     b,#0x7A
0A90 7444      2584            mov     a,#0x44
0A92 120100    2585            lcall   ___fsmul
0A95 AC82      2586            mov     r4,dpl
0A97 AF83      2587            mov     r7,dph
0A99 A8F0      2588            mov     r0,b
0A9B F9        2589            mov     r1,a
0A9C E581      2590            mov     a,sp
0A9E 24FC      2591            add     a,#0xfc
0AA0 F581      2592            mov     sp,a
0AA2 C007      2593            push    ar7
0AA4 C0A0      2594            push    _Follow_Tape_sloc3_1_0
0AA6 C0A1      2595            push    (_Follow_Tape_sloc3_1_0 + 1)
0AA8 C0A2      2596            push    (_Follow_Tape_sloc3_1_0 + 2)
0AAA C0A3      2597            push    (_Follow_Tape_sloc3_1_0 + 3)
0AAC 8C82      2598            mov     dpl,r4
0AAE 8F83      2599            mov     dph,r7
0AB0 88F0      2600            mov     b,r0
0AB2 E9        2601            mov     a,r1
0AB3 120100    2602            lcall   ___fslt
0AB6 AC82      2603            mov     r4,dpl
0AB8 E581      2604            mov     a,sp
0ABA 24FC      2605            add     a,#0xfc
0ABC F581      2606            mov     sp,a
0ABE D007      2607            pop     ar7
0AC0 D006      2608            pop     ar6
0AC2 D005      2609            pop     ar5
0AC4 D003      2610            pop     ar3
0AC6 D002      2611            pop     ar2
0AC8 EC        2612            mov     a,r4
0AC9 D007      2613            pop     ar7
0ACB D004      2614            pop     ar4
0ACD 7001      2615            jnz     L016102?
0ACF 020100    2616            ljmp    L016018?
0AD2           2617   L016102?:
0AD2 C004      2618            push    ar4
0AD4 C007      2619            push    ar7
0AD6 75820A    2620            mov     dpl,#0x0A
0AD9 C002      2621            push    ar2
0ADB C003      2622            push    ar3
0ADD C005      2623            push    ar5
0ADF C006      2624            push    ar6
0AE1 120100    2625            lcall   _Volts_at_Pin
0AE4 A882      2626            mov     r0,dpl
0AE6 A983      2627            mov     r1,dph
0AE8 ACF0      2628            mov     r4,b
0AEA FF        2629            mov     r7,a
0AEB D006      2630            pop     ar6
0AED D005      2631            pop     ar5
0AEF C004      2632            push    ar4
0AF1 C005      2633            push    ar5
0AF3 C006      2634            push    ar6
0AF5 C007      2635            push    ar7
0AF7 C000      2636            push    ar0
0AF9 C001      2637            push    ar1
0AFB C004      2638            push    ar4
0AFD C007      2639            push    ar7
0AFF 900000    2640            mov     dptr,#0x0000
0B02 75F07A    2641            mov     b,#0x7A
0B05 7444      2642            mov     a,#0x44
0B07 120100    2643            lcall   ___fsmul
0B0A 8582F0    2644            mov     _Follow_Tape_sloc4_1_0,dpl
0B0D 8583F1    2645            mov     (_Follow_Tape_sloc4_1_0 + 1),dph
0B10 85F0F2    2646            mov     (_Follow_Tape_sloc4_1_0 + 2),b
0B13 F5F3      2647            mov     (_Follow_Tape_sloc4_1_0 + 3),a
0B15 E581      2648            mov     a,sp
0B17 24FC      2649            add     a,#0xfc
0B19 F581      2650            mov     sp,a
0B1B D007      2651            pop     ar7
0B1D D006      2652            pop     ar6
0B1F D005      2653            pop     ar5
0B21 D004      2654            pop     ar4
0B23 D003      2655            pop     ar3
0B25 D002      2656            pop     ar2
0B27 8A82      2657            mov     dpl,r2
0B29 8B83      2658            mov     dph,r3
0B2B C002      2659            push    ar2
0B2D C003      2660            push    ar3
0B2F C005      2661            push    ar5
0B31 C006      2662            push    ar6
0B33 120100    2663            lcall   ___uint2fs
0B36 AC82      2664            mov     r4,dpl
0B38 AF83      2665            mov     r7,dph
0B3A A8F0      2666            mov     r0,b
0B3C F9        2667            mov     r1,a
0B3D C007      2668            push    ar7
0B3F C004      2669            push    ar4
0B41 C007      2670            push    ar7
0B43 C000      2671            push    ar0
0B45 C001      2672            push    ar1
0B47 85F082    2673            mov     dpl,_Follow_Tape_sloc4_1_0
0B4A 85F183    2674            mov     dph,(_Follow_Tape_sloc4_1_0 + 1)
0B4D 85F2F0    2675            mov     b,(_Follow_Tape_sloc4_1_0 + 2)
0B50 E5F3      2676            mov     a,(_Follow_Tape_sloc4_1_0 + 3)
0B52 120100    2677            lcall   ___fslt
0B55 AC82      2678            mov     r4,dpl
0B57 E581      2679            mov     a,sp
0B59 24FC      2680            add     a,#0xfc
0B5B F581      2681            mov     sp,a
0B5D D007      2682            pop     ar7
0B5F D006      2683            pop     ar6
0B61 D005      2684            pop     ar5
0B63 D003      2685            pop     ar3
0B65 D002      2686            pop     ar2
0B67 EC        2687            mov     a,r4
0B68 D007      2688            pop     ar7
0B6A D004      2689            pop     ar4
0B6C 6001      2690            jz      L016018?
0B6E C004      2691            push    ar4
0B70 C007      2692            push    ar7
0B72 75820B    2693            mov     dpl,#0x0B
0B75 C002      2694            push    ar2
0B77 C003      2695            push    ar3
0B79 C005      2696            push    ar5
0B7B C006      2697            push    ar6
0B7D 120100    2698            lcall   _Volts_at_Pin
0B80 A882      2699            mov     r0,dpl
0B82 A983      2700            mov     r1,dph
0B84 ACF0      2701            mov     r4,b
0B86 FF        2702            mov     r7,a
0B87 C000      2703            push    ar0
0B89 C001      2704            push    ar1
0B8B C004      2705            push    ar4
0B8D C007      2706            push    ar7
0B8F 900000    2707            mov     dptr,#0x0000
0B92 75F07A    2708            mov     b,#0x7A
0B95 7444      2709            mov     a,#0x44
0B97 120100    2710            lcall   ___fsmul
0B9A AC82      2711            mov     r4,dpl
0B9C AF83      2712            mov     r7,dph
0B9E A8F0      2713            mov     r0,b
0BA0 F9        2714            mov     r1,a
0BA1 E581      2715            mov     a,sp
0BA3 24FC      2716            add     a,#0xfc
0BA5 F581      2717            mov     sp,a
0BA7 C007      2718            push    ar7
0BA9 C050      2719            push    _Follow_Tape_sloc2_1_0
0BAB C051      2720            push    (_Follow_Tape_sloc2_1_0 + 1)
0BAD C052      2721            push    (_Follow_Tape_sloc2_1_0 + 2)
0BAF C053      2722            push    (_Follow_Tape_sloc2_1_0 + 3)
0BB1 8C82      2723            mov     dpl,r4
0BB3 8F83      2724            mov     dph,r7
0BB5 88F0      2725            mov     b,r0
0BB7 E9        2726            mov     a,r1
0BB8 120100    2727            lcall   ___fslt
0BBB AC82      2728            mov     r4,dpl
0BBD E581      2729            mov     a,sp
0BBF 24FC      2730            add     a,#0xfc
0BC1 F581      2731            mov     sp,a
0BC3 D007      2732            pop     ar7
0BC5 D006      2733            pop     ar6
0BC7 D005      2734            pop     ar5
0BC9 D003      2735            pop     ar3
0BCB D002      2736            pop     ar2
0BCD EC        2737            mov     a,r4
0BCE D007      2738            pop     ar7
0BD0 D004      2739            pop     ar4
0BD2 6001      2740            jz      L016018?
0BD4           2741   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:271: find_circle1_flag = 0;
0BD4 10A800    2742            jbc     _find_circle1_flag,L016105?
0BD7 8001      2743            sjmp    L016018?
0BD9           2744   L016105?:
0BD9           2745   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:272: find_circle2_flag = 0;
0BD9 C258      2746            clr     _find_circle2_flag
0BDB           2747   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:274: break;          
0BDB 22        2748            ret
0BDC           2749   L016018?:
0BDC           2750   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:276: mot_dir(0,0);
0BDC E4        2751            clr     a
0BDD F540      2752            mov     _mot_dir_PARM_2,a
0BDF F541      2753            mov     (_mot_dir_PARM_2 + 1),a
0BE1 F582      2754            mov     dpl,a
0BE3 F583      2755            mov     dph,a
0BE5 C002      2756            push    ar2
0BE7 C003      2757            push    ar3
0BE9 C004      2758            push    ar4
0BEB C005      2759            push    ar5
0BED C006      2760            push    ar6
0BEF C007      2761            push    ar7
0BF1 120100    2762            lcall   _mot_dir
0BF4 D007      2763            pop     ar7
0BF6 D006      2764            pop     ar6
0BF8 D005      2765            pop     ar5
0BFA D004      2766            pop     ar4
0BFC D003      2767            pop     ar3
0BFE D002      2768            pop     ar2
0C00           2769   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:277: pwmL = BASEPWM;
0C00 904DA8    2770            mov     dptr,#_pwmL
0C03 7419      2771            mov     a,#0x19
0C05 F0        2772            movx    @dptr,a
0C06 E4        2773            clr     a
0C07 A3        2774            inc     dptr
0C08 F0        2775            movx    @dptr,a
0C09           2776   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:278: pwmR = BASEPWM;         
0C09 904D68    2777            mov     dptr,#_pwmR
0C0C 7419      2778            mov     a,#0x19
0C0E F0        2779            movx    @dptr,a
0C0F E4        2780            clr     a
0C10 A3        2781            inc     dptr
0C11 F0        2782            movx    @dptr,a
0C12           2783   L016031?:
0C12           2784   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:282: if (dir_count >= 10) dir =1;     //ccw
0C12 904AE8    2785            mov     dptr,#_dir_count
0C15 E0        2786            movx    a,@dptr
0C16 F8        2787            mov     r0,a
0C17 A3        2788            inc     dptr
0C18 E0        2789            movx    a,@dptr
0C19 F9        2790            mov     r1,a
0C1A C3        2791            clr     c
0C1B E8        2792            mov     a,r0
0C1C 940A      2793            subb    a,#0x0A
0C1E E9        2794            mov     a,r1
0C1F 6480      2795            xrl     a,#0x80
0C21 9480      2796            subb    a,#0x80
0C23 4001      2797            jc      L016033?
0C25 D238      2798            setb    _dir
0C27           2799   L016033?:
0C27           2800   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:283: if (dir_count <= -10) dir =0; //cw
0C27 904AE8    2801            mov     dptr,#_dir_count
0C2A E0        2802            movx    a,@dptr
0C2B F8        2803            mov     r0,a
0C2C A3        2804            inc     dptr
0C2D E0        2805            movx    a,@dptr
0C2E F9        2806            mov     r1,a
0C2F C3        2807            clr     c
0C30 74F6      2808            mov     a,#0xF6
0C32 98        2809            subb    a,r0
0C33 747F      2810            mov     a,#(0xFF ^ 0x80)
0C35 89F0      2811            mov     b,r1
0C37 63F080    2812            xrl     b,#0x80
0C3A 95F0      2813            subb    a,b
0C3C 4001      2814            jc      L016035?
0C3E C238      2815            clr     _dir
0C40           2816   L016035?:
0C40           2817   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:286: if (find_bridge_flag == 1) {
0C40 20F8C0    2818            jb      _find_bridge_flag,L016108?
0C43 020100    2819            ljmp    L016055?
0C46           2820   L016108?:
0C46           2821   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:287: if (dir && (Volts_at_Pin(QFP32_MUX_P1_4) * 1000 < tp_VR) && (Volts_at_Pin(QFP32_MUX_P1_5) * 1000 < tp_VM)) {
0C46 203840    2822            jb      _dir,L016109?
0C49 020100    2823            ljmp    L016040?
0C4C           2824   L016109?:
0C4C C004      2825            push    ar4
0C4E C007      2826            push    ar7
0C50 75820A    2827            mov     dpl,#0x0A
0C53 C002      2828            push    ar2
0C55 C003      2829            push    ar3
0C57 C005      2830            push    ar5
0C59 C006      2831            push    ar6
0C5B 120100    2832            lcall   _Volts_at_Pin
0C5E A882      2833            mov     r0,dpl
0C60 A983      2834            mov     r1,dph
0C62 ACF0      2835            mov     r4,b
0C64 FF        2836            mov     r7,a
0C65 D006      2837            pop     ar6
0C67 D005      2838            pop     ar5
0C69 C004      2839            push    ar4
0C6B C005      2840            push    ar5
0C6D C006      2841            push    ar6
0C6F C007      2842            push    ar7
0C71 C000      2843            push    ar0
0C73 C001      2844            push    ar1
0C75 C004      2845            push    ar4
0C77 C007      2846            push    ar7
0C79 900000    2847            mov     dptr,#0x0000
0C7C 75F07A    2848            mov     b,#0x7A
0C7F 7444      2849            mov     a,#0x44
0C81 120100    2850            lcall   ___fsmul
0C84 8582F0    2851            mov     _Follow_Tape_sloc4_1_0,dpl
0C87 8583F1    2852            mov     (_Follow_Tape_sloc4_1_0 + 1),dph
0C8A 85F0F2    2853            mov     (_Follow_Tape_sloc4_1_0 + 2),b
0C8D F5F3      2854            mov     (_Follow_Tape_sloc4_1_0 + 3),a
0C8F E581      2855            mov     a,sp
0C91 24FC      2856            add     a,#0xfc
0C93 F581      2857            mov     sp,a
0C95 D007      2858            pop     ar7
0C97 D006      2859            pop     ar6
0C99 D005      2860            pop     ar5
0C9B D004      2861            pop     ar4
0C9D D003      2862            pop     ar3
0C9F D002      2863            pop     ar2
0CA1 8A82      2864            mov     dpl,r2
0CA3 8B83      2865            mov     dph,r3
0CA5 C002      2866            push    ar2
0CA7 C003      2867            push    ar3
0CA9 C005      2868            push    ar5
0CAB C006      2869            push    ar6
0CAD 120100    2870            lcall   ___uint2fs
0CB0 AC82      2871            mov     r4,dpl
0CB2 AF83      2872            mov     r7,dph
0CB4 A8F0      2873            mov     r0,b
0CB6 F9        2874            mov     r1,a
0CB7 C007      2875            push    ar7
0CB9 C004      2876            push    ar4
0CBB C007      2877            push    ar7
0CBD C000      2878            push    ar0
0CBF C001      2879            push    ar1
0CC1 85F082    2880            mov     dpl,_Follow_Tape_sloc4_1_0
0CC4 85F183    2881            mov     dph,(_Follow_Tape_sloc4_1_0 + 1)
0CC7 85F2F0    2882            mov     b,(_Follow_Tape_sloc4_1_0 + 2)
0CCA E5F3      2883            mov     a,(_Follow_Tape_sloc4_1_0 + 3)
0CCC 120100    2884            lcall   ___fslt
0CCF AC82      2885            mov     r4,dpl
0CD1 E581      2886            mov     a,sp
0CD3 24FC      2887            add     a,#0xfc
0CD5 F581      2888            mov     sp,a
0CD7 D007      2889            pop     ar7
0CD9 D006      2890            pop     ar6
0CDB D005      2891            pop     ar5
0CDD D003      2892            pop     ar3
0CDF D002      2893            pop     ar2
0CE1 EC        2894            mov     a,r4
0CE2 D007      2895            pop     ar7
0CE4 D004      2896            pop     ar4
0CE6 7001      2897            jnz     L016110?
0CE8 020100    2898            ljmp    L016040?
0CEB           2899   L016110?:
0CEB C004      2900            push    ar4
0CED C007      2901            push    ar7
0CEF 75820B    2902            mov     dpl,#0x0B
0CF2 C002      2903            push    ar2
0CF4 C003      2904            push    ar3
0CF6 C005      2905            push    ar5
0CF8 C006      2906            push    ar6
0CFA 120100    2907            lcall   _Volts_at_Pin
0CFD A882      2908            mov     r0,dpl
0CFF A983      2909            mov     r1,dph
0D01 ACF0      2910            mov     r4,b
0D03 FF        2911            mov     r7,a
0D04 C000      2912            push    ar0
0D06 C001      2913            push    ar1
0D08 C004      2914            push    ar4
0D0A C007      2915            push    ar7
0D0C 900000    2916            mov     dptr,#0x0000
0D0F 75F07A    2917            mov     b,#0x7A
0D12 7444      2918            mov     a,#0x44
0D14 120100    2919            lcall   ___fsmul
0D17 AC82      2920            mov     r4,dpl
0D19 AF83      2921            mov     r7,dph
0D1B A8F0      2922            mov     r0,b
0D1D F9        2923            mov     r1,a
0D1E E581      2924            mov     a,sp
0D20 24FC      2925            add     a,#0xfc
0D22 F581      2926            mov     sp,a
0D24 C007      2927            push    ar7
0D26 C050      2928            push    _Follow_Tape_sloc2_1_0
0D28 C051      2929            push    (_Follow_Tape_sloc2_1_0 + 1)
0D2A C052      2930            push    (_Follow_Tape_sloc2_1_0 + 2)
0D2C C053      2931            push    (_Follow_Tape_sloc2_1_0 + 3)
0D2E 8C82      2932            mov     dpl,r4
0D30 8F83      2933            mov     dph,r7
0D32 88F0      2934            mov     b,r0
0D34 E9        2935            mov     a,r1
0D35 120100    2936            lcall   ___fslt
0D38 AC82      2937            mov     r4,dpl
0D3A E581      2938            mov     a,sp
0D3C 24FC      2939            add     a,#0xfc
0D3E F581      2940            mov     sp,a
0D40 D007      2941            pop     ar7
0D42 D006      2942            pop     ar6
0D44 D005      2943            pop     ar5
0D46 D003      2944            pop     ar3
0D48 D002      2945            pop     ar2
0D4A EC        2946            mov     a,r4
0D4B D007      2947            pop     ar7
0D4D D004      2948            pop     ar4
0D4F 6001      2949            jz      L016040?
0D51           2950   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:288: find_bridge_flag = 0;
0D51 C2F8      2951            clr     _find_bridge_flag
0D53           2952   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:289: Bridge_Rotate(gnd_VL,gnd_VM,gnd_VR);    //rotate on to the bridge
0D53 85B068    2953            mov     _Bridge_Rotate_PARM_2,_Follow_Tape_sloc0_1_0
0D56 85B169    2954            mov     (_Bridge_Rotate_PARM_2 + 1),(_Follow_Tape_sloc0_1_0 + 1)
0D59 85B26A    2955            mov     (_Bridge_Rotate_PARM_2 + 2),(_Follow_Tape_sloc0_1_0 + 2)
0D5C 850018    2956            mov     _Bridge_Rotate_PARM_3,_Follow_Tape_sloc1_1_0
0D5F 850119    2957            mov     (_Bridge_Rotate_PARM_3 + 1),(_Follow_Tape_sloc1_1_0 + 1)
0D62 85021A    2958            mov     (_Bridge_Rotate_PARM_3 + 2),(_Follow_Tape_sloc1_1_0 + 2)
0D65 856082    2959            mov     dpl,_Follow_Tape_gnd_VL_1_93
0D68 856183    2960            mov     dph,(_Follow_Tape_gnd_VL_1_93 + 1)
0D6B 8562F0    2961            mov     b,(_Follow_Tape_gnd_VL_1_93 + 2)
0D6E C002      2962            push    ar2
0D70 C003      2963            push    ar3
0D72 C004      2964            push    ar4
0D74 C005      2965            push    ar5
0D76 C006      2966            push    ar6
0D78 C007      2967            push    ar7
0D7A 120100    2968            lcall   _Bridge_Rotate
0D7D D007      2969            pop     ar7
0D7F D006      2970            pop     ar6
0D81 D005      2971            pop     ar5
0D83 D004      2972            pop     ar4
0D85 D003      2973            pop     ar3
0D87 D002      2974            pop     ar2
0D89           2975   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:292: if (circ2) find_circle2_flag = 1;       
0D89 307800    2976            jnb     _circ2,L016037?
0D8C D258      2977            setb    _find_circle2_flag
0D8E 8001      2978            sjmp    L016040?
0D90           2979   L016037?:
0D90           2980   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:293: else find_circle1_flag = 1;
0D90 D2A8      2981            setb    _find_circle1_flag
0D92           2982   L016040?:
0D92           2983   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:296: if (!dir && (Volts_at_Pin(QFP32_MUX_P1_6) * 1000 < tp_VL) && (Volts_at_Pin(QFP32_MUX_P1_5) * 1000 < tp_VM)) {
0D92 303840    2984            jnb     _dir,L016113?
0D95 020100    2985            ljmp    L016058?
0D98           2986   L016113?:
0D98 C004      2987            push    ar4
0D9A C007      2988            push    ar7
0D9C 75820C    2989            mov     dpl,#0x0C
0D9F C002      2990            push    ar2
0DA1 C003      2991            push    ar3
0DA3 C005      2992            push    ar5
0DA5 C006      2993            push    ar6
0DA7 120100    2994            lcall   _Volts_at_Pin
0DAA A882      2995            mov     r0,dpl
0DAC A983      2996            mov     r1,dph
0DAE ACF0      2997            mov     r4,b
0DB0 FF        2998            mov     r7,a
0DB1 D006      2999            pop     ar6
0DB3 D005      3000            pop     ar5
0DB5 C004      3001            push    ar4
0DB7 C005      3002            push    ar5
0DB9 C006      3003            push    ar6
0DBB C007      3004            push    ar7
0DBD C000      3005            push    ar0
0DBF C001      3006            push    ar1
0DC1 C004      3007            push    ar4
0DC3 C007      3008            push    ar7
0DC5 900000    3009            mov     dptr,#0x0000
0DC8 75F07A    3010            mov     b,#0x7A
0DCB 7444      3011            mov     a,#0x44
0DCD 120100    3012            lcall   ___fsmul
0DD0 8582F0    3013            mov     _Follow_Tape_sloc4_1_0,dpl
0DD3 8583F1    3014            mov     (_Follow_Tape_sloc4_1_0 + 1),dph
0DD6 85F0F2    3015            mov     (_Follow_Tape_sloc4_1_0 + 2),b
0DD9 F5F3      3016            mov     (_Follow_Tape_sloc4_1_0 + 3),a
0DDB E581      3017            mov     a,sp
0DDD 24FC      3018            add     a,#0xfc
0DDF F581      3019            mov     sp,a
0DE1 D007      3020            pop     ar7
0DE3 D006      3021            pop     ar6
0DE5 D005      3022            pop     ar5
0DE7 D004      3023            pop     ar4
0DE9 8D82      3024            mov     dpl,r5
0DEB 8E83      3025            mov     dph,r6
0DED C005      3026            push    ar5
0DEF C006      3027            push    ar6
0DF1 120100    3028            lcall   ___uint2fs
0DF4 AC82      3029            mov     r4,dpl
0DF6 AF83      3030            mov     r7,dph
0DF8 A8F0      3031            mov     r0,b
0DFA F9        3032            mov     r1,a
0DFB C007      3033            push    ar7
0DFD C004      3034            push    ar4
0DFF C007      3035            push    ar7
0E01 C000      3036            push    ar0
0E03 C001      3037            push    ar1
0E05 85F082    3038            mov     dpl,_Follow_Tape_sloc4_1_0
0E08 85F183    3039            mov     dph,(_Follow_Tape_sloc4_1_0 + 1)
0E0B 85F2F0    3040            mov     b,(_Follow_Tape_sloc4_1_0 + 2)
0E0E E5F3      3041            mov     a,(_Follow_Tape_sloc4_1_0 + 3)
0E10 120100    3042            lcall   ___fslt
0E13 AC82      3043            mov     r4,dpl
0E15 E581      3044            mov     a,sp
0E17 24FC      3045            add     a,#0xfc
0E19 F581      3046            mov     sp,a
0E1B D007      3047            pop     ar7
0E1D D006      3048            pop     ar6
0E1F D005      3049            pop     ar5
0E21 D003      3050            pop     ar3
0E23 D002      3051            pop     ar2
0E25 EC        3052            mov     a,r4
0E26 D007      3053            pop     ar7
0E28 D004      3054            pop     ar4
0E2A 7001      3055            jnz     L016114?
0E2C 020100    3056            ljmp    L016058?
0E2F           3057   L016114?:
0E2F C004      3058            push    ar4
0E31 C007      3059            push    ar7
0E33 75820B    3060            mov     dpl,#0x0B
0E36 C002      3061            push    ar2
0E38 C003      3062            push    ar3
0E3A C005      3063            push    ar5
0E3C C006      3064            push    ar6
0E3E 120100    3065            lcall   _Volts_at_Pin
0E41 A882      3066            mov     r0,dpl
0E43 A983      3067            mov     r1,dph
0E45 ACF0      3068            mov     r4,b
0E47 FF        3069            mov     r7,a
0E48 C000      3070            push    ar0
0E4A C001      3071            push    ar1
0E4C C004      3072            push    ar4
0E4E C007      3073            push    ar7
0E50 900000    3074            mov     dptr,#0x0000
0E53 75F07A    3075            mov     b,#0x7A
0E56 7444      3076            mov     a,#0x44
0E58 120100    3077            lcall   ___fsmul
0E5B AC82      3078            mov     r4,dpl
0E5D AF83      3079            mov     r7,dph
0E5F A8F0      3080            mov     r0,b
0E61 F9        3081            mov     r1,a
0E62 E581      3082            mov     a,sp
0E64 24FC      3083            add     a,#0xfc
0E66 F581      3084            mov     sp,a
0E68 C007      3085            push    ar7
0E6A C050      3086            push    _Follow_Tape_sloc2_1_0
0E6C C051      3087            push    (_Follow_Tape_sloc2_1_0 + 1)
0E6E C052      3088            push    (_Follow_Tape_sloc2_1_0 + 2)
0E70 C053      3089            push    (_Follow_Tape_sloc2_1_0 + 3)
0E72 8C82      3090            mov     dpl,r4
0E74 8F83      3091            mov     dph,r7
0E76 88F0      3092            mov     b,r0
0E78 E9        3093            mov     a,r1
0E79 120100    3094            lcall   ___fslt
0E7C AC82      3095            mov     r4,dpl
0E7E E581      3096            mov     a,sp
0E80 24FC      3097            add     a,#0xfc
0E82 F581      3098            mov     sp,a
0E84 D007      3099            pop     ar7
0E86 D006      3100            pop     ar6
0E88 D005      3101            pop     ar5
0E8A D003      3102            pop     ar3
0E8C D002      3103            pop     ar2
0E8E EC        3104            mov     a,r4
0E8F D007      3105            pop     ar7
0E91 D004      3106            pop     ar4
0E93 7001      3107            jnz     L016115?
0E95 020100    3108            ljmp    L016058?
0E98           3109   L016115?:
0E98           3110   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:297: find_bridge_flag = 0;
0E98 C2F8      3111            clr     _find_bridge_flag
0E9A           3112   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:298: Bridge_Rotate(gnd_VL,gnd_VM,gnd_VR);    //rotate on to the bridge
0E9A 85B068    3113            mov     _Bridge_Rotate_PARM_2,_Follow_Tape_sloc0_1_0
0E9D 85B169    3114            mov     (_Bridge_Rotate_PARM_2 + 1),(_Follow_Tape_sloc0_1_0 + 1)
0EA0 85B26A    3115            mov     (_Bridge_Rotate_PARM_2 + 2),(_Follow_Tape_sloc0_1_0 + 2)
0EA3 850018    3116            mov     _Bridge_Rotate_PARM_3,_Follow_Tape_sloc1_1_0
0EA6 850119    3117            mov     (_Bridge_Rotate_PARM_3 + 1),(_Follow_Tape_sloc1_1_0 + 1)
0EA9 85021A    3118            mov     (_Bridge_Rotate_PARM_3 + 2),(_Follow_Tape_sloc1_1_0 + 2)
0EAC 856082    3119            mov     dpl,_Follow_Tape_gnd_VL_1_93
0EAF 856183    3120            mov     dph,(_Follow_Tape_gnd_VL_1_93 + 1)
0EB2 8562F0    3121            mov     b,(_Follow_Tape_gnd_VL_1_93 + 2)
0EB5 C002      3122            push    ar2
0EB7 C003      3123            push    ar3
0EB9 C004      3124            push    ar4
0EBB C005      3125            push    ar5
0EBD C006      3126            push    ar6
0EBF C007      3127            push    ar7
0EC1 120100    3128            lcall   _Bridge_Rotate
0EC4 D007      3129            pop     ar7
0EC6 D006      3130            pop     ar6
0EC8 D005      3131            pop     ar5
0ECA D004      3132            pop     ar4
0ECC D003      3133            pop     ar3
0ECE D002      3134            pop     ar2
0ED0           3135   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:301: if (circ2) find_circle2_flag = 1;
0ED0 307800    3136            jnb     _circ2,L016044?
0ED3 D258      3137            setb    _find_circle2_flag
0ED5 020100    3138            ljmp    L016058?
0ED8           3139   L016044?:
0ED8           3140   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:302: else find_circle1_flag = 1;
0ED8 D2A8      3141            setb    _find_circle1_flag
0EDA 020100    3142            ljmp    L016058?
0EDD           3143   L016055?:
0EDD           3144   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:305: } else if ((dir_count >= 10) || (dir_count <= -10) && break_when_dir_found) {
0EDD 904AE8    3145            mov     dptr,#_dir_count
0EE0 E0        3146            movx    a,@dptr
0EE1 F8        3147            mov     r0,a
0EE2 A3        3148            inc     dptr
0EE3 E0        3149            movx    a,@dptr
0EE4 F9        3150            mov     r1,a
0EE5 C3        3151            clr     c
0EE6 E8        3152            mov     a,r0
0EE7 940A      3153            subb    a,#0x0A
0EE9 E9        3154            mov     a,r1
0EEA 6480      3155            xrl     a,#0x80
0EEC 9480      3156            subb    a,#0x80
0EEE 5001      3157            jnc     L016050?
0EF0 904AE8    3158            mov     dptr,#_dir_count
0EF3 E0        3159            movx    a,@dptr
0EF4 F8        3160            mov     r0,a
0EF5 A3        3161            inc     dptr
0EF6 E0        3162            movx    a,@dptr
0EF7 F9        3163            mov     r1,a
0EF8 C3        3164            clr     c
0EF9 74F6      3165            mov     a,#0xF6
0EFB 98        3166            subb    a,r0
0EFC 747F      3167            mov     a,#(0xFF ^ 0x80)
0EFE 89F0      3168            mov     b,r1
0F00 63F080    3169            xrl     b,#0x80
0F03 95F0      3170            subb    a,b
0F05 5001      3171            jnc     L016118?
0F07 020100    3172            ljmp    L016058?
0F0A           3173   L016118?:
0F0A 20C8C0    3174            jb      _break_when_dir_found,L016119?
0F0D 020100    3175            ljmp    L016058?
0F10           3176   L016119?:
0F10           3177   L016050?:
0F10           3178   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:306: break_when_dir_found = 0;       //reset the break when dir found flag
0F10 C2C8      3179            clr     _break_when_dir_found
0F12           3180   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:307: break;  //if the find_bridge_flag is not set, and the direction has been found, break (to find object in circle)
0F12 22        3181            ret
0F13           3182   ;------------------------------------------------------------
0F13           3183   ;Allocation info for local variables in function 'Track_Object'
0F13           3184   ;------------------------------------------------------------
0F13           3185   ;IRVR                      Allocated with name '_Track_Object_IRVR_1_110'
0F13           3186   ;IRVL                      Allocated with name '_Track_Object_IRVL_1_110'
0F13           3187   ;------------------------------------------------------------
0F13           3188   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:312: void Track_Object(void)
0F13           3189   ;        -----------------------------------------
0F13           3190   ;         function Track_Object
0F13           3191   ;        -----------------------------------------
0F13           3192   _Track_Object:
0F13           3193   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:316: bit flag = 0;
0F13 C270      3194            clr     _Track_Object_flag_1_110
0F15           3195   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:317: mot_dir(0,0);
0F15 E4        3196            clr     a
0F16 F540      3197            mov     _mot_dir_PARM_2,a
0F18 F541      3198            mov     (_mot_dir_PARM_2 + 1),a
0F1A F582      3199            mov     dpl,a
0F1C F583      3200            mov     dph,a
0F1E 120100    3201            lcall   _mot_dir
0F21           3202   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:319: while (!flag) {
0F21           3203   L017021?:
0F21 307040    3204            jnb     _Track_Object_flag_1_110,L017038?
0F24 020100    3205            ljmp    L017023?
0F27           3206   L017038?:
0F27           3207   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:320: IRVR = Volts_at_Pin(QFP32_MUX_P1_2) * 1000;
0F27 758208    3208            mov     dpl,#0x08
0F2A 120100    3209            lcall   _Volts_at_Pin
0F2D AA82      3210            mov     r2,dpl
0F2F AB83      3211            mov     r3,dph
0F31 ACF0      3212            mov     r4,b
0F33 FD        3213            mov     r5,a
0F34 C002      3214            push    ar2
0F36 C003      3215            push    ar3
0F38 C004      3216            push    ar4
0F3A C005      3217            push    ar5
0F3C 900000    3218            mov     dptr,#0x0000
0F3F 75F07A    3219            mov     b,#0x7A
0F42 7444      3220            mov     a,#0x44
0F44 120100    3221            lcall   ___fsmul
0F47 AA82      3222            mov     r2,dpl
0F49 AB83      3223            mov     r3,dph
0F4B ACF0      3224            mov     r4,b
0F4D FD        3225            mov     r5,a
0F4E E581      3226            mov     a,sp
0F50 24FC      3227            add     a,#0xfc
0F52 F581      3228            mov     sp,a
0F54 8A82      3229            mov     dpl,r2
0F56 8B83      3230            mov     dph,r3
0F58 8CF0      3231            mov     b,r4
0F5A ED        3232            mov     a,r5
0F5B 120100    3233            lcall   ___fs2uint
0F5E AA82      3234            mov     r2,dpl
0F60 AB83      3235            mov     r3,dph
0F62           3236   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:321: IRVL = Volts_at_Pin(QFP32_MUX_P1_3) * 1000;
0F62 758209    3237            mov     dpl,#0x09
0F65 C002      3238            push    ar2
0F67 C003      3239            push    ar3
0F69 120100    3240            lcall   _Volts_at_Pin
0F6C AC82      3241            mov     r4,dpl
0F6E AD83      3242            mov     r5,dph
0F70 AEF0      3243            mov     r6,b
0F72 FF        3244            mov     r7,a
0F73 C004      3245            push    ar4
0F75 C005      3246            push    ar5
0F77 C006      3247            push    ar6
0F79 C007      3248            push    ar7
0F7B 900000    3249            mov     dptr,#0x0000
0F7E 75F07A    3250            mov     b,#0x7A
0F81 7444      3251            mov     a,#0x44
0F83 120100    3252            lcall   ___fsmul
0F86 AC82      3253            mov     r4,dpl
0F88 AD83      3254            mov     r5,dph
0F8A AEF0      3255            mov     r6,b
0F8C FF        3256            mov     r7,a
0F8D E581      3257            mov     a,sp
0F8F 24FC      3258            add     a,#0xfc
0F91 F581      3259            mov     sp,a
0F93 8C82      3260            mov     dpl,r4
0F95 8D83      3261            mov     dph,r5
0F97 8EF0      3262            mov     b,r6
0F99 EF        3263            mov     a,r7
0F9A 120100    3264            lcall   ___fs2uint
0F9D AC82      3265            mov     r4,dpl
0F9F AD83      3266            mov     r5,dph
0FA1 D003      3267            pop     ar3
0FA3 D002      3268            pop     ar2
0FA5           3269   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:323: if ((IRVR > 1000) && (IRVL < 1000)) {
0FA5 C3        3270            clr     c
0FA6 74E8      3271            mov     a,#0xE8
0FA8 9A        3272            subb    a,r2
0FA9 7403      3273            mov     a,#0x03
0FAB 9B        3274            subb    a,r3
0FAC E4        3275            clr     a
0FAD 33        3276            rlc     a
0FAE FE        3277            mov     r6,a
0FAF 6001      3278            jz      L017016?
0FB1 C3        3279            clr     c
0FB2 EC        3280            mov     a,r4
0FB3 94E8      3281            subb    a,#0xE8
0FB5 ED        3282            mov     a,r5
0FB6 9403      3283            subb    a,#0x03
0FB8 5001      3284            jnc     L017016?
0FBA           3285   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:324: pwmL = SLOWPWM;
0FBA 904DA8    3286            mov     dptr,#_pwmL
0FBD 7405      3287            mov     a,#0x05
0FBF F0        3288            movx    @dptr,a
0FC0 E4        3289            clr     a
0FC1 A3        3290            inc     dptr
0FC2 F0        3291            movx    @dptr,a
0FC3           3292   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:325: pwmR = BOOSTPWM;        
0FC3 904D68    3293            mov     dptr,#_pwmR
0FC6 742D      3294            mov     a,#0x2D
0FC8 F0        3295            movx    @dptr,a
0FC9 E4        3296            clr     a
0FCA A3        3297            inc     dptr
0FCB F0        3298            movx    @dptr,a
0FCC 020100    3299            ljmp    L017017?
0FCF           3300   L017016?:
0FCF           3301   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:326: } else if ((IRVL > 1000) && (IRVR < 1000)) {
0FCF C3        3302            clr     c
0FD0 74E8      3303            mov     a,#0xE8
0FD2 9C        3304            subb    a,r4
0FD3 7403      3305            mov     a,#0x03
0FD5 9D        3306            subb    a,r5
0FD6 E4        3307            clr     a
0FD7 33        3308            rlc     a
0FD8 FF        3309            mov     r7,a
0FD9 6001      3310            jz      L017012?
0FDB C3        3311            clr     c
0FDC EA        3312            mov     a,r2
0FDD 94E8      3313            subb    a,#0xE8
0FDF EB        3314            mov     a,r3
0FE0 9403      3315            subb    a,#0x03
0FE2 5001      3316            jnc     L017012?
0FE4           3317   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:327: pwmL = BOOSTPWM;
0FE4 904DA8    3318            mov     dptr,#_pwmL
0FE7 742D      3319            mov     a,#0x2D
0FE9 F0        3320            movx    @dptr,a
0FEA E4        3321            clr     a
0FEB A3        3322            inc     dptr
0FEC F0        3323            movx    @dptr,a
0FED           3324   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:328: pwmR = SLOWPWM;         
0FED 904D68    3325            mov     dptr,#_pwmR
0FF0 7405      3326            mov     a,#0x05
0FF2 F0        3327            movx    @dptr,a
0FF3 E4        3328            clr     a
0FF4 A3        3329            inc     dptr
0FF5 F0        3330            movx    @dptr,a
0FF6 8001      3331            sjmp    L017017?
0FF8           3332   L017012?:
0FF8           3333   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:329: } else if ((IRVL > 1000) && (IRVR > 1000)) {
0FF8 EF        3334            mov     a,r7
0FF9 6001      3335            jz      L017008?
0FFB EE        3336            mov     a,r6
0FFC 6001      3337            jz      L017008?
0FFE           3338   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:330: if (sonar_count_2 < 30) {
0FFE 901900    3339            mov     dptr,#_sonar_count_2
1001 E0        3340            movx    a,@dptr
1002 FE        3341            mov     r6,a
1003 A3        3342            inc     dptr
1004 E0        3343            movx    a,@dptr
1005 FF        3344            mov     r7,a
1006 C3        3345            clr     c
1007 EE        3346            mov     a,r6
1008 941E      3347            subb    a,#0x1E
100A EF        3348            mov     a,r7
100B 9400      3349            subb    a,#0x00
100D 5001      3350            jnc     L017002?
100F           3351   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:331: pwmL = BOOSTPWM; //approach the object quickly
100F 904DA8    3352            mov     dptr,#_pwmL
1012 742D      3353            mov     a,#0x2D
1014 F0        3354            movx    @dptr,a
1015 E4        3355            clr     a
1016 A3        3356            inc     dptr
1017 F0        3357            movx    @dptr,a
1018           3358   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:332: pwmR = BOOSTPWM;
1018 904D68    3359            mov     dptr,#_pwmR
101B 742D      3360            mov     a,#0x2D
101D F0        3361            movx    @dptr,a
101E E4        3362            clr     a
101F A3        3363            inc     dptr
1020 F0        3364            movx    @dptr,a
1021 8001      3365            sjmp    L017017?
1023           3366   L017002?:
1023           3367   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:334: pwmL = BASEPWM; // temporary just stops
1023 904DA8    3368            mov     dptr,#_pwmL
1026 7419      3369            mov     a,#0x19
1028 F0        3370            movx    @dptr,a
1029 E4        3371            clr     a
102A A3        3372            inc     dptr
102B F0        3373            movx    @dptr,a
102C           3374   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:335: pwmR = BASEPWM;
102C 904D68    3375            mov     dptr,#_pwmR
102F 7419      3376            mov     a,#0x19
1031 F0        3377            movx    @dptr,a
1032 E4        3378            clr     a
1033 A3        3379            inc     dptr
1034 F0        3380            movx    @dptr,a
1035 8001      3381            sjmp    L017017?
1037           3382   L017008?:
1037           3383   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:337: } else if ((IRVL < 1000) && (IRVR < 1000)) {
1037 C3        3384            clr     c
1038 EC        3385            mov     a,r4
1039 94E8      3386            subb    a,#0xE8
103B ED        3387            mov     a,r5
103C 9403      3388            subb    a,#0x03
103E 5001      3389            jnc     L017017?
1040 C3        3390            clr     c
1041 EA        3391            mov     a,r2
1042 94E8      3392            subb    a,#0xE8
1044 EB        3393            mov     a,r3
1045 9403      3394            subb    a,#0x03
1047 5001      3395            jnc     L017017?
1049           3396   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:338: pwmL = BASEPWM; 
1049 904DA8    3397            mov     dptr,#_pwmL
104C 7419      3398            mov     a,#0x19
104E F0        3399            movx    @dptr,a
104F E4        3400            clr     a
1050 A3        3401            inc     dptr
1051 F0        3402            movx    @dptr,a
1052           3403   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:339: pwmR = BASEPWM;         
1052 904D68    3404            mov     dptr,#_pwmR
1055 7419      3405            mov     a,#0x19
1057 F0        3406            movx    @dptr,a
1058 E4        3407            clr     a
1059 A3        3408            inc     dptr
105A F0        3409            movx    @dptr,a
105B           3410   L017017?:
105B           3411   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:342: if (sonar_count_2 < 4)
105B 901900    3412            mov     dptr,#_sonar_count_2
105E E0        3413            movx    a,@dptr
105F FA        3414            mov     r2,a
1060 A3        3415            inc     dptr
1061 E0        3416            movx    a,@dptr
1062 FB        3417            mov     r3,a
1063 C3        3418            clr     c
1064 EA        3419            mov     a,r2
1065 9404      3420            subb    a,#0x04
1067 EB        3421            mov     a,r3
1068 9400      3422            subb    a,#0x00
106A 4001      3423            jc      L017048?
106C 020100    3424            ljmp    L017021?
106F           3425   L017048?:
106F           3426   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:343: flag = 1;
106F D270      3427            setb    _Track_Object_flag_1_110
1071 020100    3428            ljmp    L017021?
1074           3429   L017023?:
1074           3430   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:346: pwmL = BASEPWM; 
1074 904DA8    3431            mov     dptr,#_pwmL
1077 7419      3432            mov     a,#0x19
1079 F0        3433            movx    @dptr,a
107A E4        3434            clr     a
107B A3        3435            inc     dptr
107C F0        3436            movx    @dptr,a
107D           3437   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:347: pwmR = BASEPWM;         
107D 904D68    3438            mov     dptr,#_pwmR
1080 7419      3439            mov     a,#0x19
1082 F0        3440            movx    @dptr,a
1083 E4        3441            clr     a
1084 A3        3442            inc     dptr
1085 F0        3443            movx    @dptr,a
1086           3444   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:348: waitms(300);
1086 90012C    3445            mov     dptr,#0x012C
1089 120100    3446            lcall   _waitms
108C           3447   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:349: stop();
108C 120100    3448            lcall   _stop
108F           3449   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:350: Claw_Pos(2);
108F 900002    3450            mov     dptr,#0x0002
1092 120100    3451            lcall   _Claw_Pos
1095           3452   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:351: waitms(500);
1095 9001F4    3453            mov     dptr,#0x01F4
1098 020100    3454            ljmp    _waitms
109B           3455   ;------------------------------------------------------------
109B           3456   ;Allocation info for local variables in function 'Find_Tape'
109B           3457   ;------------------------------------------------------------
109B           3458   ;motordir                  Allocated with name '_Find_Tape_PARM_2'
109B           3459   ;gnd_VM                    Allocated with name '_Find_Tape_gnd_VM_1_118'
109B           3460   ;temp                      Allocated to registers 
109B           3461   ;------------------------------------------------------------
109B           3462   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:355: void Find_Tape(unsigned short int *gnd_VM, int motordir)
109B           3463   ;        -----------------------------------------
109B           3464   ;         function Find_Tape
109B           3465   ;        -----------------------------------------
109B           3466   _Find_Tape:
109B 858240    3467            mov     _Find_Tape_gnd_VM_1_118,dpl
109E 858341    3468            mov     (_Find_Tape_gnd_VM_1_118 + 1),dph
10A1 85F042    3469            mov     (_Find_Tape_gnd_VM_1_118 + 2),b
10A4           3470   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:357: bit flag=0;
10A4 C2C0      3471            clr     _Find_Tape_flag_1_119
10A6           3472   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:360: while (!flag) {
10A6           3473   L018004?:
10A6 30C080    3474            jnb     _Find_Tape_flag_1_119,L018012?
10A9 020100    3475            ljmp    L018006?
10AC           3476   L018012?:
10AC           3477   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:361: if (Volts_at_Pin(QFP32_MUX_P1_5)*1000 < *gnd_VM-TAPEOFFSET) { // found tape, proceed with function
10AC 75820B    3478            mov     dpl,#0x0B
10AF 120100    3479            lcall   _Volts_at_Pin
10B2 AD82      3480            mov     r5,dpl
10B4 AE83      3481            mov     r6,dph
10B6 AFF0      3482            mov     r7,b
10B8 F8        3483            mov     r0,a
10B9 C005      3484            push    ar5
10BB C006      3485            push    ar6
10BD C007      3486            push    ar7
10BF C000      3487            push    ar0
10C1 900000    3488            mov     dptr,#0x0000
10C4 75F07A    3489            mov     b,#0x7A
10C7 7444      3490            mov     a,#0x44
10C9 120100    3491            lcall   ___fsmul
10CC AD82      3492            mov     r5,dpl
10CE AE83      3493            mov     r6,dph
10D0 AFF0      3494            mov     r7,b
10D2 F8        3495            mov     r0,a
10D3 E581      3496            mov     a,sp
10D5 24FC      3497            add     a,#0xfc
10D7 F581      3498            mov     sp,a
10D9 854082    3499            mov     dpl,_Find_Tape_gnd_VM_1_118
10DC 854183    3500            mov     dph,(_Find_Tape_gnd_VM_1_118 + 1)
10DF 8542F0    3501            mov     b,(_Find_Tape_gnd_VM_1_118 + 2)
10E2 120100    3502            lcall   __gptrget
10E5 F9        3503            mov     r1,a
10E6 A3        3504            inc     dptr
10E7 120100    3505            lcall   __gptrget
10EA FA        3506            mov     r2,a
10EB E9        3507            mov     a,r1
10EC 2470      3508            add     a,#0x70
10EE F582      3509            mov     dpl,a
10F0 EA        3510            mov     a,r2
10F1 34FE      3511            addc    a,#0xfe
10F3 F583      3512            mov     dph,a
10F5 C005      3513            push    ar5
10F7 C006      3514            push    ar6
10F9 C007      3515            push    ar7
10FB C000      3516            push    ar0
10FD 120100    3517            lcall   ___uint2fs
1100 AA82      3518            mov     r2,dpl
1102 AB83      3519            mov     r3,dph
1104 ACF0      3520            mov     r4,b
1106 F9        3521            mov     r1,a
1107 D000      3522            pop     ar0
1109 D007      3523            pop     ar7
110B D006      3524            pop     ar6
110D D005      3525            pop     ar5
110F C002      3526            push    ar2
1111 C003      3527            push    ar3
1113 C004      3528            push    ar4
1115 C001      3529            push    ar1
1117 8D82      3530            mov     dpl,r5
1119 8E83      3531            mov     dph,r6
111B 8FF0      3532            mov     b,r7
111D E8        3533            mov     a,r0
111E 120100    3534            lcall   ___fslt
1121 AA82      3535            mov     r2,dpl
1123 E581      3536            mov     a,sp
1125 24FC      3537            add     a,#0xfc
1127 F581      3538            mov     sp,a
1129 EA        3539            mov     a,r2
112A 6001      3540            jz      L018002?
112C           3541   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:362: stop();
112C 120100    3542            lcall   _stop
112F           3543   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:363: flag = 1;
112F D2C0      3544            setb    _Find_Tape_flag_1_119
1131 020100    3545            ljmp    L018004?
1134           3546   L018002?:
1134           3547   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:365: mot_dir(motordir,motordir);
1134 85F840    3548            mov     _mot_dir_PARM_2,_Find_Tape_PARM_2
1137 85F941    3549            mov     (_mot_dir_PARM_2 + 1),(_Find_Tape_PARM_2 + 1)
113A 85F882    3550            mov     dpl,_Find_Tape_PARM_2
113D 85F983    3551            mov     dph,(_Find_Tape_PARM_2 + 1)
1140 120100    3552            lcall   _mot_dir
1143           3553   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:366: pwmL = BASEPWM;
1143 904DA8    3554            mov     dptr,#_pwmL
1146 7419      3555            mov     a,#0x19
1148 F0        3556            movx    @dptr,a
1149 E4        3557            clr     a
114A A3        3558            inc     dptr
114B F0        3559            movx    @dptr,a
114C           3560   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:367: pwmR = BASEPWM;         
114C 904D68    3561            mov     dptr,#_pwmR
114F 7419      3562            mov     a,#0x19
1151 F0        3563            movx    @dptr,a
1152 E4        3564            clr     a
1153 A3        3565            inc     dptr
1154 F0        3566            movx    @dptr,a
1155 020100    3567            ljmp    L018004?
1158           3568   L018006?:
1158           3569   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:370: return;
1158 22        3570            ret
1159           3571   ;------------------------------------------------------------
1159           3572   ;Allocation info for local variables in function 'Rotate'
1159           3573   ;------------------------------------------------------------
1159           3574   ;gnd_VR                    Allocated with name '_Rotate_PARM_2'
1159           3575   ;gnd_VL                    Allocated with name '_Rotate_gnd_VL_1_123'
1159           3576   ;sloc0                     Allocated with name '_Rotate_sloc0_1_0'
1159           3577   ;------------------------------------------------------------
1159           3578   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:373: void Rotate(unsigned short int *gnd_VL, unsigned short int *gnd_VR)
1159           3579   ;        -----------------------------------------
1159           3580   ;         function Rotate
1159           3581   ;        -----------------------------------------
1159           3582   _Rotate:
1159 858290    3583            mov     _Rotate_gnd_VL_1_123,dpl
115C 858391    3584            mov     (_Rotate_gnd_VL_1_123 + 1),dph
115F 85F092    3585            mov     (_Rotate_gnd_VL_1_123 + 2),b
1162           3586   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:375: if (Volts_at_Pin(QFP32_MUX_P1_6)*1000 < *gnd_VL-TAPEOFFSET) {
1162 75820C    3587            mov     dpl,#0x0C
1165 120100    3588            lcall   _Volts_at_Pin
1168 AD82      3589            mov     r5,dpl
116A AE83      3590            mov     r6,dph
116C AFF0      3591            mov     r7,b
116E F8        3592            mov     r0,a
116F C005      3593            push    ar5
1171 C006      3594            push    ar6
1173 C007      3595            push    ar7
1175 C000      3596            push    ar0
1177 900000    3597            mov     dptr,#0x0000
117A 75F07A    3598            mov     b,#0x7A
117D 7444      3599            mov     a,#0x44
117F 120100    3600            lcall   ___fsmul
1182 AD82      3601            mov     r5,dpl
1184 AE83      3602            mov     r6,dph
1186 AFF0      3603            mov     r7,b
1188 F8        3604            mov     r0,a
1189 E581      3605            mov     a,sp
118B 24FC      3606            add     a,#0xfc
118D F581      3607            mov     sp,a
118F 859082    3608            mov     dpl,_Rotate_gnd_VL_1_123
1192 859183    3609            mov     dph,(_Rotate_gnd_VL_1_123 + 1)
1195 8592F0    3610            mov     b,(_Rotate_gnd_VL_1_123 + 2)
1198 120100    3611            lcall   __gptrget
119B F9        3612            mov     r1,a
119C A3        3613            inc     dptr
119D 120100    3614            lcall   __gptrget
11A0 FA        3615            mov     r2,a
11A1 E9        3616            mov     a,r1
11A2 2470      3617            add     a,#0x70
11A4 F582      3618            mov     dpl,a
11A6 EA        3619            mov     a,r2
11A7 34FE      3620            addc    a,#0xfe
11A9 F583      3621            mov     dph,a
11AB C005      3622            push    ar5
11AD C006      3623            push    ar6
11AF C007      3624            push    ar7
11B1 C000      3625            push    ar0
11B3 120100    3626            lcall   ___uint2fs
11B6 AA82      3627            mov     r2,dpl
11B8 AB83      3628            mov     r3,dph
11BA ACF0      3629            mov     r4,b
11BC F9        3630            mov     r1,a
11BD D000      3631            pop     ar0
11BF D007      3632            pop     ar7
11C1 D006      3633            pop     ar6
11C3 D005      3634            pop     ar5
11C5 C002      3635            push    ar2
11C7 C003      3636            push    ar3
11C9 C004      3637            push    ar4
11CB C001      3638            push    ar1
11CD 8D82      3639            mov     dpl,r5
11CF 8E83      3640            mov     dph,r6
11D1 8FF0      3641            mov     b,r7
11D3 E8        3642            mov     a,r0
11D4 120100    3643            lcall   ___fslt
11D7 AA82      3644            mov     r2,dpl
11D9 E581      3645            mov     a,sp
11DB 24FC      3646            add     a,#0xfc
11DD F581      3647            mov     sp,a
11DF EA        3648            mov     a,r2
11E0 6001      3649            jz      L019004?
11E2           3650   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:376: spin_left(10);
11E2 90000A    3651            mov     dptr,#0x000A
11E5 120100    3652            lcall   _spin_left
11E8 020100    3653            ljmp    L019014?
11EB           3654   L019004?:
11EB           3655   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:377: } else if (Volts_at_Pin(QFP32_MUX_P1_4)*1000 < *gnd_VR-TAPEOFFSET) {
11EB 75820A    3656            mov     dpl,#0x0A
11EE 120100    3657            lcall   _Volts_at_Pin
11F1 AA82      3658            mov     r2,dpl
11F3 AB83      3659            mov     r3,dph
11F5 ACF0      3660            mov     r4,b
11F7 FD        3661            mov     r5,a
11F8 C002      3662            push    ar2
11FA C003      3663            push    ar3
11FC C004      3664            push    ar4
11FE C005      3665            push    ar5
1200 900000    3666            mov     dptr,#0x0000
1203 75F07A    3667            mov     b,#0x7A
1206 7444      3668            mov     a,#0x44
1208 120100    3669            lcall   ___fsmul
120B AA82      3670            mov     r2,dpl
120D AB83      3671            mov     r3,dph
120F ACF0      3672            mov     r4,b
1211 FD        3673            mov     r5,a
1212 E581      3674            mov     a,sp
1214 24FC      3675            add     a,#0xfc
1216 F581      3676            mov     sp,a
1218 AEA8      3677            mov     r6,_Rotate_PARM_2
121A AFA9      3678            mov     r7,(_Rotate_PARM_2 + 1)
121C A8AA      3679            mov     r0,(_Rotate_PARM_2 + 2)
121E 8E82      3680            mov     dpl,r6
1220 8F83      3681            mov     dph,r7
1222 88F0      3682            mov     b,r0
1224 120100    3683            lcall   __gptrget
1227 FE        3684            mov     r6,a
1228 A3        3685            inc     dptr
1229 120100    3686            lcall   __gptrget
122C FF        3687            mov     r7,a
122D EE        3688            mov     a,r6
122E 2470      3689            add     a,#0x70
1230 F582      3690            mov     dpl,a
1232 EF        3691            mov     a,r7
1233 34FE      3692            addc    a,#0xfe
1235 F583      3693            mov     dph,a
1237 C002      3694            push    ar2
1239 C003      3695            push    ar3
123B C004      3696            push    ar4
123D C005      3697            push    ar5
123F 120100    3698            lcall   ___uint2fs
1242 AE82      3699            mov     r6,dpl
1244 AF83      3700            mov     r7,dph
1246 A8F0      3701            mov     r0,b
1248 F9        3702            mov     r1,a
1249 D005      3703            pop     ar5
124B D004      3704            pop     ar4
124D D003      3705            pop     ar3
124F D002      3706            pop     ar2
1251 C006      3707            push    ar6
1253 C007      3708            push    ar7
1255 C000      3709            push    ar0
1257 C001      3710            push    ar1
1259 8A82      3711            mov     dpl,r2
125B 8B83      3712            mov     dph,r3
125D 8CF0      3713            mov     b,r4
125F ED        3714            mov     a,r5
1260 120100    3715            lcall   ___fslt
1263 AA82      3716            mov     r2,dpl
1265 E581      3717            mov     a,sp
1267 24FC      3718            add     a,#0xfc
1269 F581      3719            mov     sp,a
126B EA        3720            mov     a,r2
126C 6001      3721            jz      L019014?
126E           3722   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:378: spin_right(10);
126E 90000A    3723            mov     dptr,#0x000A
1271 120100    3724            lcall   _spin_right
1274           3725   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:381: while((Volts_at_Pin(QFP32_MUX_P1_6)*1000 < *gnd_VL-TAPEOFFSET) ||               
1274           3726   L019014?:
1274 85A8E0    3727            mov     _Rotate_sloc0_1_0,_Rotate_PARM_2
1277 85A9E1    3728            mov     (_Rotate_sloc0_1_0 + 1),(_Rotate_PARM_2 + 1)
127A 85AAE2    3729            mov     (_Rotate_sloc0_1_0 + 2),(_Rotate_PARM_2 + 2)
127D           3730   L019007?:
127D 75820C    3731            mov     dpl,#0x0C
1280 120100    3732            lcall   _Volts_at_Pin
1283 AD82      3733            mov     r5,dpl
1285 AE83      3734            mov     r6,dph
1287 AFF0      3735            mov     r7,b
1289 F8        3736            mov     r0,a
128A C005      3737            push    ar5
128C C006      3738            push    ar6
128E C007      3739            push    ar7
1290 C000      3740            push    ar0
1292 900000    3741            mov     dptr,#0x0000
1295 75F07A    3742            mov     b,#0x7A
1298 7444      3743            mov     a,#0x44
129A 120100    3744            lcall   ___fsmul
129D AD82      3745            mov     r5,dpl
129F AE83      3746            mov     r6,dph
12A1 AFF0      3747            mov     r7,b
12A3 F8        3748            mov     r0,a
12A4 E581      3749            mov     a,sp
12A6 24FC      3750            add     a,#0xfc
12A8 F581      3751            mov     sp,a
12AA 859082    3752            mov     dpl,_Rotate_gnd_VL_1_123
12AD 859183    3753            mov     dph,(_Rotate_gnd_VL_1_123 + 1)
12B0 8592F0    3754            mov     b,(_Rotate_gnd_VL_1_123 + 2)
12B3 120100    3755            lcall   __gptrget
12B6 F9        3756            mov     r1,a
12B7 A3        3757            inc     dptr
12B8 120100    3758            lcall   __gptrget
12BB FA        3759            mov     r2,a
12BC E9        3760            mov     a,r1
12BD 2470      3761            add     a,#0x70
12BF F582      3762            mov     dpl,a
12C1 EA        3763            mov     a,r2
12C2 34FE      3764            addc    a,#0xfe
12C4 F583      3765            mov     dph,a
12C6 C005      3766            push    ar5
12C8 C006      3767            push    ar6
12CA C007      3768            push    ar7
12CC C000      3769            push    ar0
12CE 120100    3770            lcall   ___uint2fs
12D1 AA82      3771            mov     r2,dpl
12D3 AB83      3772            mov     r3,dph
12D5 ACF0      3773            mov     r4,b
12D7 F9        3774            mov     r1,a
12D8 D000      3775            pop     ar0
12DA D007      3776            pop     ar7
12DC D006      3777            pop     ar6
12DE D005      3778            pop     ar5
12E0 C002      3779            push    ar2
12E2 C003      3780            push    ar3
12E4 C004      3781            push    ar4
12E6 C001      3782            push    ar1
12E8 8D82      3783            mov     dpl,r5
12EA 8E83      3784            mov     dph,r6
12EC 8FF0      3785            mov     b,r7
12EE E8        3786            mov     a,r0
12EF 120100    3787            lcall   ___fslt
12F2 AA82      3788            mov     r2,dpl
12F4 E581      3789            mov     a,sp
12F6 24FC      3790            add     a,#0xfc
12F8 F581      3791            mov     sp,a
12FA EA        3792            mov     a,r2
12FB 6001      3793            jz      L019019?
12FD 020100    3794            ljmp    L019007?
1300           3795   L019019?:
1300           3796   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:382: (Volts_at_Pin(QFP32_MUX_P1_4)*1000 < *gnd_VR-TAPEOFFSET)); 
1300 75820A    3797            mov     dpl,#0x0A
1303 120100    3798            lcall   _Volts_at_Pin
1306 AD82      3799            mov     r5,dpl
1308 AE83      3800            mov     r6,dph
130A AFF0      3801            mov     r7,b
130C F8        3802            mov     r0,a
130D C005      3803            push    ar5
130F C006      3804            push    ar6
1311 C007      3805            push    ar7
1313 C000      3806            push    ar0
1315 900000    3807            mov     dptr,#0x0000
1318 75F07A    3808            mov     b,#0x7A
131B 7444      3809            mov     a,#0x44
131D 120100    3810            lcall   ___fsmul
1320 AD82      3811            mov     r5,dpl
1322 AE83      3812            mov     r6,dph
1324 AFF0      3813            mov     r7,b
1326 F8        3814            mov     r0,a
1327 E581      3815            mov     a,sp
1329 24FC      3816            add     a,#0xfc
132B F581      3817            mov     sp,a
132D 85E082    3818            mov     dpl,_Rotate_sloc0_1_0
1330 85E183    3819            mov     dph,(_Rotate_sloc0_1_0 + 1)
1333 85E2F0    3820            mov     b,(_Rotate_sloc0_1_0 + 2)
1336 120100    3821            lcall   __gptrget
1339 F9        3822            mov     r1,a
133A A3        3823            inc     dptr
133B 120100    3824            lcall   __gptrget
133E FA        3825            mov     r2,a
133F E9        3826            mov     a,r1
1340 2470      3827            add     a,#0x70
1342 F582      3828            mov     dpl,a
1344 EA        3829            mov     a,r2
1345 34FE      3830            addc    a,#0xfe
1347 F583      3831            mov     dph,a
1349 C005      3832            push    ar5
134B C006      3833            push    ar6
134D C007      3834            push    ar7
134F C000      3835            push    ar0
1351 120100    3836            lcall   ___uint2fs
1354 AA82      3837            mov     r2,dpl
1356 AB83      3838            mov     r3,dph
1358 ACF0      3839            mov     r4,b
135A F9        3840            mov     r1,a
135B D000      3841            pop     ar0
135D D007      3842            pop     ar7
135F D006      3843            pop     ar6
1361 D005      3844            pop     ar5
1363 C002      3845            push    ar2
1365 C003      3846            push    ar3
1367 C004      3847            push    ar4
1369 C001      3848            push    ar1
136B 8D82      3849            mov     dpl,r5
136D 8E83      3850            mov     dph,r6
136F 8FF0      3851            mov     b,r7
1371 E8        3852            mov     a,r0
1372 120100    3853            lcall   ___fslt
1375 AA82      3854            mov     r2,dpl
1377 E581      3855            mov     a,sp
1379 24FC      3856            add     a,#0xfc
137B F581      3857            mov     sp,a
137D EA        3858            mov     a,r2
137E 6001      3859            jz      L019020?
1380 020100    3860            ljmp    L019007?
1383           3861   L019020?:
1383           3862   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:383: return;
1383 22        3863            ret
1384           3864   ;------------------------------------------------------------
1384           3865   ;Allocation info for local variables in function 'Detect_Object'
1384           3866   ;------------------------------------------------------------
1384           3867   ;------------------------------------------------------------
1384           3868   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:386: int Detect_Object (void)
1384           3869   ;        -----------------------------------------
1384           3870   ;         function Detect_Object
1384           3871   ;        -----------------------------------------
1384           3872   _Detect_Object:
1384           3873   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:388: if (((Volts_at_Pin(QFP32_MUX_P1_2) * 1000) < 1000) || ((Volts_at_Pin(QFP32_MUX_P1_3) * 1000) < 1000))
1384 758208    3874            mov     dpl,#0x08
1387 120100    3875            lcall   _Volts_at_Pin
138A AA82      3876            mov     r2,dpl
138C AB83      3877            mov     r3,dph
138E ACF0      3878            mov     r4,b
1390 FD        3879            mov     r5,a
1391 C002      3880            push    ar2
1393 C003      3881            push    ar3
1395 C004      3882            push    ar4
1397 C005      3883            push    ar5
1399 900000    3884            mov     dptr,#0x0000
139C 75F07A    3885            mov     b,#0x7A
139F 7444      3886            mov     a,#0x44
13A1 120100    3887            lcall   ___fsmul
13A4 AA82      3888            mov     r2,dpl
13A6 AB83      3889            mov     r3,dph
13A8 ACF0      3890            mov     r4,b
13AA FD        3891            mov     r5,a
13AB E581      3892            mov     a,sp
13AD 24FC      3893            add     a,#0xfc
13AF F581      3894            mov     sp,a
13B1 E4        3895            clr     a
13B2 C0E0      3896            push    acc
13B4 C0E0      3897            push    acc
13B6 747A      3898            mov     a,#0x7A
13B8 C0E0      3899            push    acc
13BA 7444      3900            mov     a,#0x44
13BC C0E0      3901            push    acc
13BE 8A82      3902            mov     dpl,r2
13C0 8B83      3903            mov     dph,r3
13C2 8CF0      3904            mov     b,r4
13C4 ED        3905            mov     a,r5
13C5 120100    3906            lcall   ___fslt
13C8 AA82      3907            mov     r2,dpl
13CA E581      3908            mov     a,sp
13CC 24FC      3909            add     a,#0xfc
13CE F581      3910            mov     sp,a
13D0 EA        3911            mov     a,r2
13D1 7001      3912            jnz     L020001?
13D3 758209    3913            mov     dpl,#0x09
13D6 120100    3914            lcall   _Volts_at_Pin
13D9 AA82      3915            mov     r2,dpl
13DB AB83      3916            mov     r3,dph
13DD ACF0      3917            mov     r4,b
13DF FD        3918            mov     r5,a
13E0 C002      3919            push    ar2
13E2 C003      3920            push    ar3
13E4 C004      3921            push    ar4
13E6 C005      3922            push    ar5
13E8 900000    3923            mov     dptr,#0x0000
13EB 75F07A    3924            mov     b,#0x7A
13EE 7444      3925            mov     a,#0x44
13F0 120100    3926            lcall   ___fsmul
13F3 AA82      3927            mov     r2,dpl
13F5 AB83      3928            mov     r3,dph
13F7 ACF0      3929            mov     r4,b
13F9 FD        3930            mov     r5,a
13FA E581      3931            mov     a,sp
13FC 24FC      3932            add     a,#0xfc
13FE F581      3933            mov     sp,a
1400 E4        3934            clr     a
1401 C0E0      3935            push    acc
1403 C0E0      3936            push    acc
1405 747A      3937            mov     a,#0x7A
1407 C0E0      3938            push    acc
1409 7444      3939            mov     a,#0x44
140B C0E0      3940            push    acc
140D 8A82      3941            mov     dpl,r2
140F 8B83      3942            mov     dph,r3
1411 8CF0      3943            mov     b,r4
1413 ED        3944            mov     a,r5
1414 120100    3945            lcall   ___fslt
1417 AA82      3946            mov     r2,dpl
1419 E581      3947            mov     a,sp
141B 24FC      3948            add     a,#0xfc
141D F581      3949            mov     sp,a
141F EA        3950            mov     a,r2
1420 6001      3951            jz      L020002?
1422           3952   L020001?:
1422           3953   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:389: return 1;
1422 900001    3954            mov     dptr,#0x0001
1425 22        3955            ret
1426           3956   L020002?:
1426           3957   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:390: if (sonar_count_2 <= 25)
1426 901900    3958            mov     dptr,#_sonar_count_2
1429 E0        3959            movx    a,@dptr
142A FA        3960            mov     r2,a
142B A3        3961            inc     dptr
142C E0        3962            movx    a,@dptr
142D FB        3963            mov     r3,a
142E C3        3964            clr     c
142F 7419      3965            mov     a,#0x19
1431 9A        3966            subb    a,r2
1432 E4        3967            clr     a
1433 9B        3968            subb    a,r3
1434 4001      3969            jc      L020005?
1436           3970   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:391: return 1;
1436 900001    3971            mov     dptr,#0x0001
1439           3972   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:393: return 0;
1439 22        3973            ret
143A           3974   L020005?:
143A 900000    3975            mov     dptr,#0x0000
143D 22        3976            ret
143E           3977   ;------------------------------------------------------------
143E           3978   ;Allocation info for local variables in function 'Find_Object'
143E           3979   ;------------------------------------------------------------
143E           3980   ;------------------------------------------------------------
143E           3981   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:396: void Find_Object( void )
143E           3982   ;        -----------------------------------------
143E           3983   ;         function Find_Object
143E           3984   ;        -----------------------------------------
143E           3985   _Find_Object:
143E           3986   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:398: Claw_Pos (10);
143E 90000A    3987            mov     dptr,#0x000A
1441 120100    3988            lcall   _Claw_Pos
1444           3989   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:399: stop();
1444 120100    3990            lcall   _stop
1447           3991   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:400: waitms(500);
1447 9001F4    3992            mov     dptr,#0x01F4
144A 120100    3993            lcall   _waitms
144D           3994   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:403: if (dir) {
144D 303840    3995            jnb     _dir,L021002?
1450           3996   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:405: mot_dir(1,0);
1450 E4        3997            clr     a
1451 F540      3998            mov     _mot_dir_PARM_2,a
1453 F541      3999            mov     (_mot_dir_PARM_2 + 1),a
1455 900001    4000            mov     dptr,#0x0001
1458 120100    4001            lcall   _mot_dir
145B           4002   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:406: pwmR = BASEPWM-10;
145B 904D68    4003            mov     dptr,#_pwmR
145E 740F      4004            mov     a,#0x0F
1460 F0        4005            movx    @dptr,a
1461 E4        4006            clr     a
1462 A3        4007            inc     dptr
1463 F0        4008            movx    @dptr,a
1464           4009   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:407: pwmL = BASEPWM+10;
1464 904DA8    4010            mov     dptr,#_pwmL
1467 7423      4011            mov     a,#0x23
1469 F0        4012            movx    @dptr,a
146A E4        4013            clr     a
146B A3        4014            inc     dptr
146C F0        4015            movx    @dptr,a
146D 8001      4016            sjmp    L021004?
146F           4017   L021002?:
146F           4018   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:410: mot_dir(0,1);
146F 754001    4019            mov     _mot_dir_PARM_2,#0x01
1472 E4        4020            clr     a
1473 F541      4021            mov     (_mot_dir_PARM_2 + 1),a
1475 900000    4022            mov     dptr,#0x0000
1478 120100    4023            lcall   _mot_dir
147B           4024   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:411: pwmR = BASEPWM+10;
147B 904D68    4025            mov     dptr,#_pwmR
147E 7423      4026            mov     a,#0x23
1480 F0        4027            movx    @dptr,a
1481 E4        4028            clr     a
1482 A3        4029            inc     dptr
1483 F0        4030            movx    @dptr,a
1484           4031   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:412: pwmL = BASEPWM-10;
1484 904DA8    4032            mov     dptr,#_pwmL
1487 740F      4033            mov     a,#0x0F
1489 F0        4034            movx    @dptr,a
148A E4        4035            clr     a
148B A3        4036            inc     dptr
148C F0        4037            movx    @dptr,a
148D           4038   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:416: while (Detect_Object() != 1);           //locate an object with the IR sensors
148D           4039   L021004?:
148D 120100    4040            lcall   _Detect_Object
1490 AA82      4041            mov     r2,dpl
1492 AB83      4042            mov     r3,dph
1494 BA0180    4043            cjne    r2,#0x01,L021004?
1497 BB0080    4044            cjne    r3,#0x00,L021004?
149A           4045   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:417: stop();
149A 020100    4046            ljmp    _stop
149D           4047   ;------------------------------------------------------------
149D           4048   ;Allocation info for local variables in function 'Bridge_Rotate'
149D           4049   ;------------------------------------------------------------
149D           4050   ;gnd_VM                    Allocated with name '_Bridge_Rotate_PARM_2'
149D           4051   ;gnd_VR                    Allocated with name '_Bridge_Rotate_PARM_3'
149D           4052   ;gnd_VL                    Allocated with name '_Bridge_Rotate_gnd_VL_1_133'
149D           4053   ;sloc0                     Allocated with name '_Bridge_Rotate_sloc0_1_0'
149D           4054   ;sloc1                     Allocated with name '_Bridge_Rotate_sloc1_1_0'
149D           4055   ;sloc2                     Allocated with name '_Bridge_Rotate_sloc2_1_0'
149D           4056   ;------------------------------------------------------------
149D           4057   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:420: void Bridge_Rotate(unsigned short int* gnd_VL, unsigned short int* gnd_VM, unsigned short int* gnd_VR)
149D           4058   ;        -----------------------------------------
149D           4059   ;         function Bridge_Rotate
149D           4060   ;        -----------------------------------------
149D           4061   _Bridge_Rotate:
149D 858230    4062            mov     _Bridge_Rotate_gnd_VL_1_133,dpl
14A0 858331    4063            mov     (_Bridge_Rotate_gnd_VL_1_133 + 1),dph
14A3 85F032    4064            mov     (_Bridge_Rotate_gnd_VL_1_133 + 2),b
14A6           4065   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:422: if (dir) {
14A6 2038C0    4066            jb      _dir,L022021?
14A9 020100    4067            ljmp    L022010?
14AC           4068   L022021?:
14AC           4069   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:423: mot_dir(0,1);
14AC 754001    4070            mov     _mot_dir_PARM_2,#0x01
14AF E4        4071            clr     a
14B0 F541      4072            mov     (_mot_dir_PARM_2 + 1),a
14B2 900000    4073            mov     dptr,#0x0000
14B5 120100    4074            lcall   _mot_dir
14B8           4075   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:424: pwmL = BASEPWM;
14B8 904DA8    4076            mov     dptr,#_pwmL
14BB 7419      4077            mov     a,#0x19
14BD F0        4078            movx    @dptr,a
14BE E4        4079            clr     a
14BF A3        4080            inc     dptr
14C0 F0        4081            movx    @dptr,a
14C1           4082   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:425: pwmR = BASEPWM;         
14C1 904D68    4083            mov     dptr,#_pwmR
14C4 7419      4084            mov     a,#0x19
14C6 F0        4085            movx    @dptr,a
14C7 E4        4086            clr     a
14C8 A3        4087            inc     dptr
14C9 F0        4088            movx    @dptr,a
14CA           4089   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:426: waitms(700);
14CA 9002BC    4090            mov     dptr,#0x02BC
14CD 120100    4091            lcall   _waitms
14D0           4092   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:427: while ((Volts_at_Pin(QFP32_MUX_P1_4)*1000 < *gnd_VR-TAPEOFFSET) || (Volts_at_Pin(QFP32_MUX_P1_5)*1000 < *gnd_VM-TAPEOFFSET));
14D0 8518D0    4093            mov     _Bridge_Rotate_sloc1_1_0,_Bridge_Rotate_PARM_3
14D3 8519D1    4094            mov     (_Bridge_Rotate_sloc1_1_0 + 1),(_Bridge_Rotate_PARM_3 + 1)
14D6 851AD2    4095            mov     (_Bridge_Rotate_sloc1_1_0 + 2),(_Bridge_Rotate_PARM_3 + 2)
14D9 856880    4096            mov     _Bridge_Rotate_sloc0_1_0,_Bridge_Rotate_PARM_2
14DC 856981    4097            mov     (_Bridge_Rotate_sloc0_1_0 + 1),(_Bridge_Rotate_PARM_2 + 1)
14DF 856A82    4098            mov     (_Bridge_Rotate_sloc0_1_0 + 2),(_Bridge_Rotate_PARM_2 + 2)
14E2           4099   L022002?:
14E2 75820A    4100            mov     dpl,#0x0A
14E5 120100    4101            lcall   _Volts_at_Pin
14E8 A882      4102            mov     r0,dpl
14EA A983      4103            mov     r1,dph
14EC ADF0      4104            mov     r5,b
14EE FE        4105            mov     r6,a
14EF C000      4106            push    ar0
14F1 C001      4107            push    ar1
14F3 C005      4108            push    ar5
14F5 C006      4109            push    ar6
14F7 900000    4110            mov     dptr,#0x0000
14FA 75F07A    4111            mov     b,#0x7A
14FD 7444      4112            mov     a,#0x44
14FF 120100    4113            lcall   ___fsmul
1502 858220    4114            mov     _Bridge_Rotate_sloc2_1_0,dpl
1505 858321    4115            mov     (_Bridge_Rotate_sloc2_1_0 + 1),dph
1508 85F022    4116            mov     (_Bridge_Rotate_sloc2_1_0 + 2),b
150B F523      4117            mov     (_Bridge_Rotate_sloc2_1_0 + 3),a
150D E581      4118            mov     a,sp
150F 24FC      4119            add     a,#0xfc
1511 F581      4120            mov     sp,a
1513 85D082    4121            mov     dpl,_Bridge_Rotate_sloc1_1_0
1516 85D183    4122            mov     dph,(_Bridge_Rotate_sloc1_1_0 + 1)
1519 85D2F0    4123            mov     b,(_Bridge_Rotate_sloc1_1_0 + 2)
151C 120100    4124            lcall   __gptrget
151F F9        4125            mov     r1,a
1520 A3        4126            inc     dptr
1521 120100    4127            lcall   __gptrget
1524 FD        4128            mov     r5,a
1525 E9        4129            mov     a,r1
1526 2470      4130            add     a,#0x70
1528 F582      4131            mov     dpl,a
152A ED        4132            mov     a,r5
152B 34FE      4133            addc    a,#0xfe
152D F583      4134            mov     dph,a
152F 120100    4135            lcall   ___uint2fs
1532 AD82      4136            mov     r5,dpl
1534 AE83      4137            mov     r6,dph
1536 AFF0      4138            mov     r7,b
1538 F8        4139            mov     r0,a
1539 C005      4140            push    ar5
153B C006      4141            push    ar6
153D C007      4142            push    ar7
153F C000      4143            push    ar0
1541 852082    4144            mov     dpl,_Bridge_Rotate_sloc2_1_0
1544 852183    4145            mov     dph,(_Bridge_Rotate_sloc2_1_0 + 1)
1547 8522F0    4146            mov     b,(_Bridge_Rotate_sloc2_1_0 + 2)
154A E523      4147            mov     a,(_Bridge_Rotate_sloc2_1_0 + 3)
154C 120100    4148            lcall   ___fslt
154F AD82      4149            mov     r5,dpl
1551 E581      4150            mov     a,sp
1553 24FC      4151            add     a,#0xfc
1555 F581      4152            mov     sp,a
1557 ED        4153            mov     a,r5
1558 7001      4154            jnz     L022002?
155A 75820B    4155            mov     dpl,#0x0B
155D 120100    4156            lcall   _Volts_at_Pin
1560 AD82      4157            mov     r5,dpl
1562 AE83      4158            mov     r6,dph
1564 AFF0      4159            mov     r7,b
1566 F8        4160            mov     r0,a
1567 C005      4161            push    ar5
1569 C006      4162            push    ar6
156B C007      4163            push    ar7
156D C000      4164            push    ar0
156F 900000    4165            mov     dptr,#0x0000
1572 75F07A    4166            mov     b,#0x7A
1575 7444      4167            mov     a,#0x44
1577 120100    4168            lcall   ___fsmul
157A 858220    4169            mov     _Bridge_Rotate_sloc2_1_0,dpl
157D 858321    4170            mov     (_Bridge_Rotate_sloc2_1_0 + 1),dph
1580 85F022    4171            mov     (_Bridge_Rotate_sloc2_1_0 + 2),b
1583 F523      4172            mov     (_Bridge_Rotate_sloc2_1_0 + 3),a
1585 E581      4173            mov     a,sp
1587 24FC      4174            add     a,#0xfc
1589 F581      4175            mov     sp,a
158B 858082    4176            mov     dpl,_Bridge_Rotate_sloc0_1_0
158E 858183    4177            mov     dph,(_Bridge_Rotate_sloc0_1_0 + 1)
1591 8582F0    4178            mov     b,(_Bridge_Rotate_sloc0_1_0 + 2)
1594 120100    4179            lcall   __gptrget
1597 F9        4180            mov     r1,a
1598 A3        4181            inc     dptr
1599 120100    4182            lcall   __gptrget
159C FD        4183            mov     r5,a
159D E9        4184            mov     a,r1
159E 2470      4185            add     a,#0x70
15A0 F582      4186            mov     dpl,a
15A2 ED        4187            mov     a,r5
15A3 34FE      4188            addc    a,#0xfe
15A5 F583      4189            mov     dph,a
15A7 120100    4190            lcall   ___uint2fs
15AA AD82      4191            mov     r5,dpl
15AC AE83      4192            mov     r6,dph
15AE AFF0      4193            mov     r7,b
15B0 F8        4194            mov     r0,a
15B1 C005      4195            push    ar5
15B3 C006      4196            push    ar6
15B5 C007      4197            push    ar7
15B7 C000      4198            push    ar0
15B9 852082    4199            mov     dpl,_Bridge_Rotate_sloc2_1_0
15BC 852183    4200            mov     dph,(_Bridge_Rotate_sloc2_1_0 + 1)
15BF 8522F0    4201            mov     b,(_Bridge_Rotate_sloc2_1_0 + 2)
15C2 E523      4202            mov     a,(_Bridge_Rotate_sloc2_1_0 + 3)
15C4 120100    4203            lcall   ___fslt
15C7 AD82      4204            mov     r5,dpl
15C9 E581      4205            mov     a,sp
15CB 24FC      4206            add     a,#0xfc
15CD F581      4207            mov     sp,a
15CF ED        4208            mov     a,r5
15D0 6001      4209            jz      L022023?
15D2 020100    4210            ljmp    L022002?
15D5           4211   L022023?:
15D5           4212   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:428: waitms(100);
15D5 900064    4213            mov     dptr,#0x0064
15D8 120100    4214            lcall   _waitms
15DB           4215   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:429: Find_Tape(gnd_VM,0);
15DB E4        4216            clr     a
15DC F5F8      4217            mov     _Find_Tape_PARM_2,a
15DE F5F9      4218            mov     (_Find_Tape_PARM_2 + 1),a
15E0 858082    4219            mov     dpl,_Bridge_Rotate_sloc0_1_0
15E3 858183    4220            mov     dph,(_Bridge_Rotate_sloc0_1_0 + 1)
15E6 8582F0    4221            mov     b,(_Bridge_Rotate_sloc0_1_0 + 2)
15E9 020100    4222            ljmp    _Find_Tape
15EC           4223   L022010?:
15EC           4224   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:431: mot_dir(1,0);
15EC E4        4225            clr     a
15ED F540      4226            mov     _mot_dir_PARM_2,a
15EF F541      4227            mov     (_mot_dir_PARM_2 + 1),a
15F1 900001    4228            mov     dptr,#0x0001
15F4 120100    4229            lcall   _mot_dir
15F7           4230   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:432: pwmL = BASEPWM;
15F7 904DA8    4231            mov     dptr,#_pwmL
15FA 7419      4232            mov     a,#0x19
15FC F0        4233            movx    @dptr,a
15FD E4        4234            clr     a
15FE A3        4235            inc     dptr
15FF F0        4236            movx    @dptr,a
1600           4237   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:433: pwmR = BASEPWM;         
1600 904D68    4238            mov     dptr,#_pwmR
1603 7419      4239            mov     a,#0x19
1605 F0        4240            movx    @dptr,a
1606 E4        4241            clr     a
1607 A3        4242            inc     dptr
1608 F0        4243            movx    @dptr,a
1609           4244   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:434: waitms(700);
1609 9002BC    4245            mov     dptr,#0x02BC
160C 120100    4246            lcall   _waitms
160F           4247   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:435: while ((Volts_at_Pin(QFP32_MUX_P1_6)*1000 < *gnd_VL-TAPEOFFSET) || (Volts_at_Pin(QFP32_MUX_P1_5)*1000 < *gnd_VM-TAPEOFFSET));
160F AD68      4248            mov     r5,_Bridge_Rotate_PARM_2
1611 AE69      4249            mov     r6,(_Bridge_Rotate_PARM_2 + 1)
1613 AF6A      4250            mov     r7,(_Bridge_Rotate_PARM_2 + 2)
1615           4251   L022006?:
1615 C005      4252            push    ar5
1617 C006      4253            push    ar6
1619 C007      4254            push    ar7
161B 75820C    4255            mov     dpl,#0x0C
161E C005      4256            push    ar5
1620 C006      4257            push    ar6
1622 C007      4258            push    ar7
1624 120100    4259            lcall   _Volts_at_Pin
1627 A882      4260            mov     r0,dpl
1629 A983      4261            mov     r1,dph
162B AAF0      4262            mov     r2,b
162D FB        4263            mov     r3,a
162E C000      4264            push    ar0
1630 C001      4265            push    ar1
1632 C002      4266            push    ar2
1634 C003      4267            push    ar3
1636 900000    4268            mov     dptr,#0x0000
1639 75F07A    4269            mov     b,#0x7A
163C 7444      4270            mov     a,#0x44
163E 120100    4271            lcall   ___fsmul
1641 AA82      4272            mov     r2,dpl
1643 AB83      4273            mov     r3,dph
1645 ACF0      4274            mov     r4,b
1647 F8        4275            mov     r0,a
1648 E581      4276            mov     a,sp
164A 24FC      4277            add     a,#0xfc
164C F581      4278            mov     sp,a
164E D007      4279            pop     ar7
1650 D006      4280            pop     ar6
1652 D005      4281            pop     ar5
1654 853082    4282            mov     dpl,_Bridge_Rotate_gnd_VL_1_133
1657 853183    4283            mov     dph,(_Bridge_Rotate_gnd_VL_1_133 + 1)
165A 8532F0    4284            mov     b,(_Bridge_Rotate_gnd_VL_1_133 + 2)
165D 120100    4285            lcall   __gptrget
1660 F9        4286            mov     r1,a
1661 A3        4287            inc     dptr
1662 120100    4288            lcall   __gptrget
1665 FD        4289            mov     r5,a
1666 E9        4290            mov     a,r1
1667 2470      4291            add     a,#0x70
1669 F582      4292            mov     dpl,a
166B ED        4293            mov     a,r5
166C 34FE      4294            addc    a,#0xfe
166E F583      4295            mov     dph,a
1670 C002      4296            push    ar2
1672 C003      4297            push    ar3
1674 C004      4298            push    ar4
1676 C000      4299            push    ar0
1678 120100    4300            lcall   ___uint2fs
167B AD82      4301            mov     r5,dpl
167D AE83      4302            mov     r6,dph
167F AFF0      4303            mov     r7,b
1681 F9        4304            mov     r1,a
1682 D000      4305            pop     ar0
1684 D004      4306            pop     ar4
1686 D003      4307            pop     ar3
1688 D002      4308            pop     ar2
168A C005      4309            push    ar5
168C C006      4310            push    ar6
168E C007      4311            push    ar7
1690 C005      4312            push    ar5
1692 C006      4313            push    ar6
1694 C007      4314            push    ar7
1696 C001      4315            push    ar1
1698 8A82      4316            mov     dpl,r2
169A 8B83      4317            mov     dph,r3
169C 8CF0      4318            mov     b,r4
169E E8        4319            mov     a,r0
169F 120100    4320            lcall   ___fslt
16A2 AA82      4321            mov     r2,dpl
16A4 E581      4322            mov     a,sp
16A6 24FC      4323            add     a,#0xfc
16A8 F581      4324            mov     sp,a
16AA D007      4325            pop     ar7
16AC D006      4326            pop     ar6
16AE D005      4327            pop     ar5
16B0 D007      4328            pop     ar7
16B2 D006      4329            pop     ar6
16B4 D005      4330            pop     ar5
16B6 EA        4331            mov     a,r2
16B7 6001      4332            jz      L022024?
16B9 020100    4333            ljmp    L022006?
16BC           4334   L022024?:
16BC 75820B    4335            mov     dpl,#0x0B
16BF C005      4336            push    ar5
16C1 C006      4337            push    ar6
16C3 C007      4338            push    ar7
16C5 120100    4339            lcall   _Volts_at_Pin
16C8 AA82      4340            mov     r2,dpl
16CA AB83      4341            mov     r3,dph
16CC ACF0      4342            mov     r4,b
16CE F8        4343            mov     r0,a
16CF C002      4344            push    ar2
16D1 C003      4345            push    ar3
16D3 C004      4346            push    ar4
16D5 C000      4347            push    ar0
16D7 900000    4348            mov     dptr,#0x0000
16DA 75F07A    4349            mov     b,#0x7A
16DD 7444      4350            mov     a,#0x44
16DF 120100    4351            lcall   ___fsmul
16E2 858220    4352            mov     _Bridge_Rotate_sloc2_1_0,dpl
16E5 858321    4353            mov     (_Bridge_Rotate_sloc2_1_0 + 1),dph
16E8 85F022    4354            mov     (_Bridge_Rotate_sloc2_1_0 + 2),b
16EB F523      4355            mov     (_Bridge_Rotate_sloc2_1_0 + 3),a
16ED E581      4356            mov     a,sp
16EF 24FC      4357            add     a,#0xfc
16F1 F581      4358            mov     sp,a
16F3 D007      4359            pop     ar7
16F5 D006      4360            pop     ar6
16F7 D005      4361            pop     ar5
16F9 8D82      4362            mov     dpl,r5
16FB 8E83      4363            mov     dph,r6
16FD 8FF0      4364            mov     b,r7
16FF 120100    4365            lcall   __gptrget
1702 F9        4366            mov     r1,a
1703 A3        4367            inc     dptr
1704 120100    4368            lcall   __gptrget
1707 FA        4369            mov     r2,a
1708 E9        4370            mov     a,r1
1709 2470      4371            add     a,#0x70
170B F582      4372            mov     dpl,a
170D EA        4373            mov     a,r2
170E 34FE      4374            addc    a,#0xfe
1710 F583      4375            mov     dph,a
1712 C005      4376            push    ar5
1714 C006      4377            push    ar6
1716 C007      4378            push    ar7
1718 120100    4379            lcall   ___uint2fs
171B AA82      4380            mov     r2,dpl
171D AB83      4381            mov     r3,dph
171F ACF0      4382            mov     r4,b
1721 F8        4383            mov     r0,a
1722 C002      4384            push    ar2
1724 C003      4385            push    ar3
1726 C004      4386            push    ar4
1728 C000      4387            push    ar0
172A 852082    4388            mov     dpl,_Bridge_Rotate_sloc2_1_0
172D 852183    4389            mov     dph,(_Bridge_Rotate_sloc2_1_0 + 1)
1730 8522F0    4390            mov     b,(_Bridge_Rotate_sloc2_1_0 + 2)
1733 E523      4391            mov     a,(_Bridge_Rotate_sloc2_1_0 + 3)
1735 120100    4392            lcall   ___fslt
1738 AA82      4393            mov     r2,dpl
173A E581      4394            mov     a,sp
173C 24FC      4395            add     a,#0xfc
173E F581      4396            mov     sp,a
1740 D007      4397            pop     ar7
1742 D006      4398            pop     ar6
1744 D005      4399            pop     ar5
1746 EA        4400            mov     a,r2
1747 6001      4401            jz      L022025?
1749 020100    4402            ljmp    L022006?
174C           4403   L022025?:
174C           4404   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:436: waitms(100);
174C 900064    4405            mov     dptr,#0x0064
174F C005      4406            push    ar5
1751 C006      4407            push    ar6
1753 C007      4408            push    ar7
1755 120100    4409            lcall   _waitms
1758 D007      4410            pop     ar7
175A D006      4411            pop     ar6
175C D005      4412            pop     ar5
175E           4413   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:437: Find_Tape(gnd_VM,0);
175E E4        4414            clr     a
175F F5F8      4415            mov     _Find_Tape_PARM_2,a
1761 F5F9      4416            mov     (_Find_Tape_PARM_2 + 1),a
1763 8D82      4417            mov     dpl,r5
1765 8E83      4418            mov     dph,r6
1767 8FF0      4419            mov     b,r7
1769           4420   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:439: return;
1769 020100    4421            ljmp    _Find_Tape
176C           4422   ;------------------------------------------------------------
176C           4423   ;Allocation info for local variables in function 'autonomous_prime'
176C           4424   ;------------------------------------------------------------
176C           4425   ;gnd_VL                    Allocated with name '_autonomous_prime_gnd_VL_1_138'
176C           4426   ;gnd_VR                    Allocated with name '_autonomous_prime_gnd_VR_1_138'
176C           4427   ;gnd_VM                    Allocated with name '_autonomous_prime_gnd_VM_1_138'
176C           4428   ;------------------------------------------------------------
176C           4429   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:442: void autonomous_prime(void)
176C           4430   ;        -----------------------------------------
176C           4431   ;         function autonomous_prime
176C           4432   ;        -----------------------------------------
176C           4433   _autonomous_prime:
176C           4434   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:450: find_bridge_flag = 0;
176C C2F8      4435            clr     _find_bridge_flag
176E           4436   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:451: Calibrate_LSensors(&gnd_VL,&gnd_VM,&gnd_VR);    
176E 753840    4437            mov     _Calibrate_LSensors_PARM_2,#_autonomous_prime_gnd_VM_1_138
1771 7539CF    4438            mov     (_Calibrate_LSensors_PARM_2 + 1),#(_autonomous_prime_gnd_VM_1_138 >> 8)
1774 753A00    4439            mov     (_Calibrate_LSensors_PARM_2 + 2),#0x00
1777 75E8F0    4440            mov     _Calibrate_LSensors_PARM_3,#_autonomous_prime_gnd_VR_1_138
177A 75E9CE    4441            mov     (_Calibrate_LSensors_PARM_3 + 1),#(_autonomous_prime_gnd_VR_1_138 >> 8)
177D 75EA00    4442            mov     (_Calibrate_LSensors_PARM_3 + 2),#0x00
1780 90CEA0    4443            mov     dptr,#_autonomous_prime_gnd_VL_1_138
1783 75F000    4444            mov     b,#0x00
1786 120100    4445            lcall   _Calibrate_LSensors
1789           4446   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:452: Find_Tape(&gnd_VM,0);           //exits when middle sensor hits tape
1789 E4        4447            clr     a
178A F5F8      4448            mov     _Find_Tape_PARM_2,a
178C F5F9      4449            mov     (_Find_Tape_PARM_2 + 1),a
178E 90CF40    4450            mov     dptr,#_autonomous_prime_gnd_VM_1_138
1791 75F000    4451            mov     b,#0x00
1794 120100    4452            lcall   _Find_Tape
1797           4453   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:453: Rotate(&gnd_VL,&gnd_VR);                        //exits when middle sensor on tape, right and left not
1797 75A8F0    4454            mov     _Rotate_PARM_2,#_autonomous_prime_gnd_VR_1_138
179A 75A9CE    4455            mov     (_Rotate_PARM_2 + 1),#(_autonomous_prime_gnd_VR_1_138 >> 8)
179D 75AA00    4456            mov     (_Rotate_PARM_2 + 2),#0x00
17A0 90CEA0    4457            mov     dptr,#_autonomous_prime_gnd_VL_1_138
17A3 75F000    4458            mov     b,#0x00
17A6 120100    4459            lcall   _Rotate
17A9           4460   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:454: break_when_dir_found = 1;
17A9 D2C8      4461            setb    _break_when_dir_found
17AB           4462   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:455: Follow_Tape(&gnd_VL,&gnd_VM,&gnd_VR);           //exits when direction is found
17AB 759840    4463            mov     _Follow_Tape_PARM_2,#_autonomous_prime_gnd_VM_1_138
17AE 7599CF    4464            mov     (_Follow_Tape_PARM_2 + 1),#(_autonomous_prime_gnd_VM_1_138 >> 8)
17B1 759A00    4465            mov     (_Follow_Tape_PARM_2 + 2),#0x00
17B4 7548F0    4466            mov     _Follow_Tape_PARM_3,#_autonomous_prime_gnd_VR_1_138
17B7 7549CE    4467            mov     (_Follow_Tape_PARM_3 + 1),#(_autonomous_prime_gnd_VR_1_138 >> 8)
17BA 754A00    4468            mov     (_Follow_Tape_PARM_3 + 2),#0x00
17BD 90CEA0    4469            mov     dptr,#_autonomous_prime_gnd_VL_1_138
17C0 75F000    4470            mov     b,#0x00
17C3 120100    4471            lcall   _Follow_Tape
17C6           4472   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:456: Find_Object();                                                          //exits when an object is detected in front of IR or ultrasonic sensor
17C6 120100    4473            lcall   _Find_Object
17C9           4474   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:457: Track_Object();                                                                 //exits when claw has been closed on the object
17C9 120100    4475            lcall   _Track_Object
17CC           4476   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:459: Find_Tape(&gnd_VM,1);           //exits when middle sensor hits tape (backwards)
17CC 75F801    4477            mov     _Find_Tape_PARM_2,#0x01
17CF E4        4478            clr     a
17D0 F5F9      4479            mov     (_Find_Tape_PARM_2 + 1),a
17D2 90CF40    4480            mov     dptr,#_autonomous_prime_gnd_VM_1_138
17D5 75F000    4481            mov     b,#0x00
17D8 120100    4482            lcall   _Find_Tape
17DB           4483   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:460: Rotate(&gnd_VL,&gnd_VR);                        //exits when middle sensor on tape, right and left not
17DB 75A8F0    4484            mov     _Rotate_PARM_2,#_autonomous_prime_gnd_VR_1_138
17DE 75A9CE    4485            mov     (_Rotate_PARM_2 + 1),#(_autonomous_prime_gnd_VR_1_138 >> 8)
17E1 75AA00    4486            mov     (_Rotate_PARM_2 + 2),#0x00
17E4 90CEA0    4487            mov     dptr,#_autonomous_prime_gnd_VL_1_138
17E7 75F000    4488            mov     b,#0x00
17EA 120100    4489            lcall   _Rotate
17ED           4490   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:461: dir_count = 0;                                                          //reset direction counter to find new direction
17ED 904AE8    4491            mov     dptr,#_dir_count
17F0 E4        4492            clr     a
17F1 F0        4493            movx    @dptr,a
17F2 A3        4494            inc     dptr
17F3 F0        4495            movx    @dptr,a
17F4           4496   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:462: break_when_dir_found = 1;
17F4 D2C8      4497            setb    _break_when_dir_found
17F6           4498   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:463: Follow_Tape(&gnd_VL,&gnd_VM,&gnd_VR);           //exits when direction is found
17F6 759840    4499            mov     _Follow_Tape_PARM_2,#_autonomous_prime_gnd_VM_1_138
17F9 7599CF    4500            mov     (_Follow_Tape_PARM_2 + 1),#(_autonomous_prime_gnd_VM_1_138 >> 8)
17FC 759A00    4501            mov     (_Follow_Tape_PARM_2 + 2),#0x00
17FF 7548F0    4502            mov     _Follow_Tape_PARM_3,#_autonomous_prime_gnd_VR_1_138
1802 7549CE    4503            mov     (_Follow_Tape_PARM_3 + 1),#(_autonomous_prime_gnd_VR_1_138 >> 8)
1805 754A00    4504            mov     (_Follow_Tape_PARM_3 + 2),#0x00
1808 90CEA0    4505            mov     dptr,#_autonomous_prime_gnd_VL_1_138
180B 75F000    4506            mov     b,#0x00
180E 120100    4507            lcall   _Follow_Tape
1811           4508   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:464: find_bridge_flag = 1;                                           //tell follow_tape to find the bridge
1811 D2F8      4509            setb    _find_bridge_flag
1813           4510   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:465: circ2 = 1;                                                                      //looking for second circle
1813 D278      4511            setb    _circ2
1815           4512   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:466: Follow_Tape(&gnd_VL,&gnd_VM,&gnd_VR);           //exits when it has dropped the object in the other circle
1815 759840    4513            mov     _Follow_Tape_PARM_2,#_autonomous_prime_gnd_VM_1_138
1818 7599CF    4514            mov     (_Follow_Tape_PARM_2 + 1),#(_autonomous_prime_gnd_VM_1_138 >> 8)
181B 759A00    4515            mov     (_Follow_Tape_PARM_2 + 2),#0x00
181E 7548F0    4516            mov     _Follow_Tape_PARM_3,#_autonomous_prime_gnd_VR_1_138
1821 7549CE    4517            mov     (_Follow_Tape_PARM_3 + 1),#(_autonomous_prime_gnd_VR_1_138 >> 8)
1824 754A00    4518            mov     (_Follow_Tape_PARM_3 + 2),#0x00
1827 90CEA0    4519            mov     dptr,#_autonomous_prime_gnd_VL_1_138
182A 75F000    4520            mov     b,#0x00
182D 120100    4521            lcall   _Follow_Tape
1830           4522   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:470: Find_Tape(&gnd_VM,1);
1830 75F801    4523            mov     _Find_Tape_PARM_2,#0x01
1833 E4        4524            clr     a
1834 F5F9      4525            mov     (_Find_Tape_PARM_2 + 1),a
1836 90CF40    4526            mov     dptr,#_autonomous_prime_gnd_VM_1_138
1839 75F000    4527            mov     b,#0x00
183C 120100    4528            lcall   _Find_Tape
183F           4529   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:471: Rotate(&gnd_VL,&gnd_VR);                        //exits when middle sensor on tape, right and left not
183F 75A8F0    4530            mov     _Rotate_PARM_2,#_autonomous_prime_gnd_VR_1_138
1842 75A9CE    4531            mov     (_Rotate_PARM_2 + 1),#(_autonomous_prime_gnd_VR_1_138 >> 8)
1845 75AA00    4532            mov     (_Rotate_PARM_2 + 2),#0x00
1848 90CEA0    4533            mov     dptr,#_autonomous_prime_gnd_VL_1_138
184B 75F000    4534            mov     b,#0x00
184E 120100    4535            lcall   _Rotate
1851           4536   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:472: Claw_Pos(2);                                                            //close the claw
1851 900002    4537            mov     dptr,#0x0002
1854 120100    4538            lcall   _Claw_Pos
1857           4539   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:473: dir_count = 0;
1857 904AE8    4540            mov     dptr,#_dir_count
185A E4        4541            clr     a
185B F0        4542            movx    @dptr,a
185C A3        4543            inc     dptr
185D F0        4544            movx    @dptr,a
185E           4545   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:474: break_when_dir_found = 1;
185E D2C8      4546            setb    _break_when_dir_found
1860           4547   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:475: Follow_Tape(&gnd_VL,&gnd_VM,&gnd_VR);           //exits when direction is found
1860 759840    4548            mov     _Follow_Tape_PARM_2,#_autonomous_prime_gnd_VM_1_138
1863 7599CF    4549            mov     (_Follow_Tape_PARM_2 + 1),#(_autonomous_prime_gnd_VM_1_138 >> 8)
1866 759A00    4550            mov     (_Follow_Tape_PARM_2 + 2),#0x00
1869 7548F0    4551            mov     _Follow_Tape_PARM_3,#_autonomous_prime_gnd_VR_1_138
186C 7549CE    4552            mov     (_Follow_Tape_PARM_3 + 1),#(_autonomous_prime_gnd_VR_1_138 >> 8)
186F 754A00    4553            mov     (_Follow_Tape_PARM_3 + 2),#0x00
1872 90CEA0    4554            mov     dptr,#_autonomous_prime_gnd_VL_1_138
1875 75F000    4555            mov     b,#0x00
1878 120100    4556            lcall   _Follow_Tape
187B           4557   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:476: find_bridge_flag = 1;                                           //tell follow_tape to find the bridge
187B D2F8      4558            setb    _find_bridge_flag
187D           4559   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:477: circ2 = 0;                                                                      //looking for first circle
187D C278      4560            clr     _circ2
187F           4561   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:478: Follow_Tape(&gnd_VL,&gnd_VM,&gnd_VR);           //exits when it has found the first circle (does not have an object)
187F 759840    4562            mov     _Follow_Tape_PARM_2,#_autonomous_prime_gnd_VM_1_138
1882 7599CF    4563            mov     (_Follow_Tape_PARM_2 + 1),#(_autonomous_prime_gnd_VM_1_138 >> 8)
1885 759A00    4564            mov     (_Follow_Tape_PARM_2 + 2),#0x00
1888 7548F0    4565            mov     _Follow_Tape_PARM_3,#_autonomous_prime_gnd_VR_1_138
188B 7549CE    4566            mov     (_Follow_Tape_PARM_3 + 1),#(_autonomous_prime_gnd_VR_1_138 >> 8)
188E 754A00    4567            mov     (_Follow_Tape_PARM_3 + 2),#0x00
1891 90CEA0    4568            mov     dptr,#_autonomous_prime_gnd_VL_1_138
1894 75F000    4569            mov     b,#0x00
1897 120100    4570            lcall   _Follow_Tape
189A           4571   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:481: temp = 0;
189A C210      4572            clr     _autonomous_prime_temp_1_138
189C           4573   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:482: while(1) {
189C           4574   L023008?:
189C           4575   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:483: pwmL = BASEPWM;
189C 904DA8    4576            mov     dptr,#_pwmL
189F 7419      4577            mov     a,#0x19
18A1 F0        4578            movx    @dptr,a
18A2 E4        4579            clr     a
18A3 A3        4580            inc     dptr
18A4 F0        4581            movx    @dptr,a
18A5           4582   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:484: pwmR = BASEPWM;
18A5 904D68    4583            mov     dptr,#_pwmR
18A8 7419      4584            mov     a,#0x19
18AA F0        4585            movx    @dptr,a
18AB E4        4586            clr     a
18AC A3        4587            inc     dptr
18AD F0        4588            movx    @dptr,a
18AE           4589   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:485: mot_dir(0,0);
18AE E4        4590            clr     a
18AF F540      4591            mov     _mot_dir_PARM_2,a
18B1 F541      4592            mov     (_mot_dir_PARM_2 + 1),a
18B3 F582      4593            mov     dpl,a
18B5 F583      4594            mov     dph,a
18B7 120100    4595            lcall   _mot_dir
18BA           4596   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:486: waitms(400);                    //approach the centre of the circle
18BA 900190    4597            mov     dptr,#0x0190
18BD 120100    4598            lcall   _waitms
18C0           4599   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:487: if (temp) dir = 1;
18C0 3010C0    4600            jnb     _autonomous_prime_temp_1_138,L023002?
18C3 D238      4601            setb    _dir
18C5 8001      4602            sjmp    L023003?
18C7           4603   L023002?:
18C7           4604   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:488: else dir = 0;                   //used so it goes a different direction each time
18C7 C238      4605            clr     _dir
18C9           4606   L023003?:
18C9           4607   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:490: Find_Object();
18C9 120100    4608            lcall   _Find_Object
18CC           4609   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:491: Track_Object();
18CC 120100    4610            lcall   _Track_Object
18CF           4611   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:492: Find_Tape(&gnd_VM,1);           //exits when middle sensor hits tape (backwards)
18CF 75F801    4612            mov     _Find_Tape_PARM_2,#0x01
18D2 E4        4613            clr     a
18D3 F5F9      4614            mov     (_Find_Tape_PARM_2 + 1),a
18D5 90CF40    4615            mov     dptr,#_autonomous_prime_gnd_VM_1_138
18D8 75F000    4616            mov     b,#0x00
18DB 120100    4617            lcall   _Find_Tape
18DE           4618   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:493: Rotate(&gnd_VL,&gnd_VR);                        //exits when middle sensor on tape, right and left not
18DE 75A8F0    4619            mov     _Rotate_PARM_2,#_autonomous_prime_gnd_VR_1_138
18E1 75A9CE    4620            mov     (_Rotate_PARM_2 + 1),#(_autonomous_prime_gnd_VR_1_138 >> 8)
18E4 75AA00    4621            mov     (_Rotate_PARM_2 + 2),#0x00
18E7 90CEA0    4622            mov     dptr,#_autonomous_prime_gnd_VL_1_138
18EA 75F000    4623            mov     b,#0x00
18ED 120100    4624            lcall   _Rotate
18F0           4625   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:494: dir_count = 0;                                                          //reset direction counter to find new direction
18F0 904AE8    4626            mov     dptr,#_dir_count
18F3 E4        4627            clr     a
18F4 F0        4628            movx    @dptr,a
18F5 A3        4629            inc     dptr
18F6 F0        4630            movx    @dptr,a
18F7           4631   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:495: break_when_dir_found = 1;
18F7 D2C8      4632            setb    _break_when_dir_found
18F9           4633   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:496: Follow_Tape(&gnd_VL,&gnd_VM,&gnd_VR);           //exits when direction is found
18F9 759840    4634            mov     _Follow_Tape_PARM_2,#_autonomous_prime_gnd_VM_1_138
18FC 7599CF    4635            mov     (_Follow_Tape_PARM_2 + 1),#(_autonomous_prime_gnd_VM_1_138 >> 8)
18FF 759A00    4636            mov     (_Follow_Tape_PARM_2 + 2),#0x00
1902 7548F0    4637            mov     _Follow_Tape_PARM_3,#_autonomous_prime_gnd_VR_1_138
1905 7549CE    4638            mov     (_Follow_Tape_PARM_3 + 1),#(_autonomous_prime_gnd_VR_1_138 >> 8)
1908 754A00    4639            mov     (_Follow_Tape_PARM_3 + 2),#0x00
190B 90CEA0    4640            mov     dptr,#_autonomous_prime_gnd_VL_1_138
190E 75F000    4641            mov     b,#0x00
1911 120100    4642            lcall   _Follow_Tape
1914           4643   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:497: find_bridge_flag = 1;                                           //tell follow_tape to find the bridge
1914 D2F8      4644            setb    _find_bridge_flag
1916           4645   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:498: circ2 = 1;                                                                      //looking for second circle
1916 D278      4646            setb    _circ2
1918           4647   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:499: Follow_Tape(&gnd_VL,&gnd_VM,&gnd_VR);           //exits when it has dropped the object in the other circle
1918 759840    4648            mov     _Follow_Tape_PARM_2,#_autonomous_prime_gnd_VM_1_138
191B 7599CF    4649            mov     (_Follow_Tape_PARM_2 + 1),#(_autonomous_prime_gnd_VM_1_138 >> 8)
191E 759A00    4650            mov     (_Follow_Tape_PARM_2 + 2),#0x00
1921 7548F0    4651            mov     _Follow_Tape_PARM_3,#_autonomous_prime_gnd_VR_1_138
1924 7549CE    4652            mov     (_Follow_Tape_PARM_3 + 1),#(_autonomous_prime_gnd_VR_1_138 >> 8)
1927 754A00    4653            mov     (_Follow_Tape_PARM_3 + 2),#0x00
192A 90CEA0    4654            mov     dptr,#_autonomous_prime_gnd_VL_1_138
192D 75F000    4655            mov     b,#0x00
1930 120100    4656            lcall   _Follow_Tape
1933           4657   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:503: Find_Tape(&gnd_VM,1);
1933 75F801    4658            mov     _Find_Tape_PARM_2,#0x01
1936 E4        4659            clr     a
1937 F5F9      4660            mov     (_Find_Tape_PARM_2 + 1),a
1939 90CF40    4661            mov     dptr,#_autonomous_prime_gnd_VM_1_138
193C 75F000    4662            mov     b,#0x00
193F 120100    4663            lcall   _Find_Tape
1942           4664   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:504: Rotate(&gnd_VL,&gnd_VR);                        //exits when middle sensor on tape, right and left not
1942 75A8F0    4665            mov     _Rotate_PARM_2,#_autonomous_prime_gnd_VR_1_138
1945 75A9CE    4666            mov     (_Rotate_PARM_2 + 1),#(_autonomous_prime_gnd_VR_1_138 >> 8)
1948 75AA00    4667            mov     (_Rotate_PARM_2 + 2),#0x00
194B 90CEA0    4668            mov     dptr,#_autonomous_prime_gnd_VL_1_138
194E 75F000    4669            mov     b,#0x00
1951 120100    4670            lcall   _Rotate
1954           4671   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:505: Claw_Pos(2);                                                            //close the claw
1954 900002    4672            mov     dptr,#0x0002
1957 120100    4673            lcall   _Claw_Pos
195A           4674   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:506: dir_count = 0;
195A 904AE8    4675            mov     dptr,#_dir_count
195D E4        4676            clr     a
195E F0        4677            movx    @dptr,a
195F A3        4678            inc     dptr
1960 F0        4679            movx    @dptr,a
1961           4680   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:507: break_when_dir_found = 1;
1961 D2C8      4681            setb    _break_when_dir_found
1963           4682   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:508: Follow_Tape(&gnd_VL,&gnd_VM,&gnd_VR);           //exits when direction is found
1963 759840    4683            mov     _Follow_Tape_PARM_2,#_autonomous_prime_gnd_VM_1_138
1966 7599CF    4684            mov     (_Follow_Tape_PARM_2 + 1),#(_autonomous_prime_gnd_VM_1_138 >> 8)
1969 759A00    4685            mov     (_Follow_Tape_PARM_2 + 2),#0x00
196C 7548F0    4686            mov     _Follow_Tape_PARM_3,#_autonomous_prime_gnd_VR_1_138
196F 7549CE    4687            mov     (_Follow_Tape_PARM_3 + 1),#(_autonomous_prime_gnd_VR_1_138 >> 8)
1972 754A00    4688            mov     (_Follow_Tape_PARM_3 + 2),#0x00
1975 90CEA0    4689            mov     dptr,#_autonomous_prime_gnd_VL_1_138
1978 75F000    4690            mov     b,#0x00
197B 120100    4691            lcall   _Follow_Tape
197E           4692   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:509: find_bridge_flag = 1;                                           //tell follow_tape to find the bridge
197E D2F8      4693            setb    _find_bridge_flag
1980           4694   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:510: circ2 = 0;                                                                      //looking for first circle
1980 C278      4695            clr     _circ2
1982           4696   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:511: Follow_Tape(&gnd_VL,&gnd_VM,&gnd_VR);           //exits when it has found the first circle (does not have an object)
1982 759840    4697            mov     _Follow_Tape_PARM_2,#_autonomous_prime_gnd_VM_1_138
1985 7599CF    4698            mov     (_Follow_Tape_PARM_2 + 1),#(_autonomous_prime_gnd_VM_1_138 >> 8)
1988 759A00    4699            mov     (_Follow_Tape_PARM_2 + 2),#0x00
198B 7548F0    4700            mov     _Follow_Tape_PARM_3,#_autonomous_prime_gnd_VR_1_138
198E 7549CE    4701            mov     (_Follow_Tape_PARM_3 + 1),#(_autonomous_prime_gnd_VR_1_138 >> 8)
1991 754A00    4702            mov     (_Follow_Tape_PARM_3 + 2),#0x00
1994 90CEA0    4703            mov     dptr,#_autonomous_prime_gnd_VL_1_138
1997 75F000    4704            mov     b,#0x00
199A 120100    4705            lcall   _Follow_Tape
199D           4706   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:513: if (temp) {
199D 301040    4707            jnb     _autonomous_prime_temp_1_138,L023005?
19A0           4708   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:514: stop();
19A0 120100    4709            lcall   _stop
19A3           4710   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:515: waitms(1000);
19A3 9003E8    4711            mov     dptr,#0x03E8
19A6 120100    4712            lcall   _waitms
19A9           4713   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:516: break;
19A9 8001      4714            sjmp    L023009?
19AB           4715   L023005?:
19AB           4716   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:518: else temp = 1;
19AB D210      4717            setb    _autonomous_prime_temp_1_138
19AD 020100    4718            ljmp    L023008?
19B0           4719   L023009?:
19B0           4720   ;        D:\School\Elec 291\Project 2\mcar\main\/lewislib.h:520: return;                                     //exit the program
19B0 22        4721            ret
19B1           4722   ;------------------------------------------------------------
19B1           4723   ;Allocation info for local variables in function '_c51_external_startup'
19B1           4724   ;------------------------------------------------------------
19B1           4725   ;------------------------------------------------------------
19B1           4726   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:78: char _c51_external_startup (void)
19B1           4727   ;        -----------------------------------------
19B1           4728   ;         function _c51_external_startup
19B1           4729   ;        -----------------------------------------
19B1           4730   __c51_external_startup:
19B1           4731   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:81: SFRPAGE = 0x00;
19B1 75A700    4732            mov     _SFRPAGE,#0x00
19B4           4733   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:82: WDTCN = 0xDE; //First key
19B4 7597DE    4734            mov     _WDTCN,#0xDE
19B7           4735   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:83: WDTCN = 0xAD; //Second key
19B7 7597AD    4736            mov     _WDTCN,#0xAD
19BA           4737   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:85: VDM0CN=0x80;       // enable VDD monitor
19BA 75FF80    4738            mov     _VDM0CN,#0x80
19BD           4739   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:86: RSTSRC=0x02|0x04;  // Enable reset on missing clock detector and VDD
19BD 75EF06    4740            mov     _RSTSRC,#0x06
19C0           4741   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:93: SFRPAGE = 0x10;
19C0 75A710    4742            mov     _SFRPAGE,#0x10
19C3           4743   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:94: PFE0CN  = 0x20; // SYSCLK < 75 MHz.
19C3 75C120    4744            mov     _PFE0CN,#0x20
19C6           4745   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:95: SFRPAGE = 0x00;
19C6 75A700    4746            mov     _SFRPAGE,#0x00
19C9           4747   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:116: CLKSEL = 0x00;
19C9 75A900    4748            mov     _CLKSEL,#0x00
19CC           4749   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:117: CLKSEL = 0x00;
19CC 75A900    4750            mov     _CLKSEL,#0x00
19CF           4751   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:118: while ((CLKSEL & 0x80) == 0);
19CF           4752   L024001?:
19CF E5A9      4753            mov     a,_CLKSEL
19D1 30E7C0    4754            jnb     acc.7,L024001?
19D4           4755   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:119: CLKSEL = 0x03;
19D4 75A903    4756            mov     _CLKSEL,#0x03
19D7           4757   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:120: CLKSEL = 0x03;
19D7 75A903    4758            mov     _CLKSEL,#0x03
19DA           4759   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:121: while ((CLKSEL & 0x80) == 0);
19DA           4760   L024004?:
19DA E5A9      4761            mov     a,_CLKSEL
19DC 30E700    4762            jnb     acc.7,L024004?
19DF           4763   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:126: P0MDOUT |= 0x10; // Enable UART0 TX as push-pull output
19DF 43A410    4764            orl     _P0MDOUT,#0x10
19E2           4765   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:127: XBR0     = 0x01; // Enable UART0 on P0.4(TX) and P0.5(RX)                     
19E2 75E101    4766            mov     _XBR0,#0x01
19E5           4767   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:128: XBR1     = 0X00;
19E5 75E200    4768            mov     _XBR1,#0x00
19E8           4769   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:129: XBR2     = 0x41; // Enable crossbar and uart 1
19E8 75E341    4770            mov     _XBR2,#0x41
19EB           4771   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:135: SCON0 = 0x10;
19EB 759810    4772            mov     _SCON0,#0x10
19EE           4773   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:136: TH1 = 0x100-((SYSCLK/BAUDRATE)/(2L*12L));
19EE 758DE6    4774            mov     _TH1,#0xE6
19F1           4775   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:137: TL1 = TH1;      // Init Timer1
19F1 858D8B    4776            mov     _TL1,_TH1
19F4           4777   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:138: TMOD &= ~0xf0;  // TMOD: timer 1 in 8-bit auto-reload
19F4 53890F    4778            anl     _TMOD,#0x0F
19F7           4779   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:139: TMOD |=  0x20;                       
19F7 438920    4780            orl     _TMOD,#0x20
19FA           4781   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:140: TR1 = 1; // START Timer1
19FA D28E      4782            setb    _TR1
19FC           4783   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:141: TI = 1;  // Indicate TX0 ready
19FC D299      4784            setb    _TI
19FE           4785   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:144: TMR2CN0=0x00;   // Stop Timer2; Clear TF2;
19FE 75C800    4786            mov     _TMR2CN0,#0x00
1A01           4787   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:145: CKCON0|=0b_0001_0000; // Timer 2 uses the system clock
1A01 438E10    4788            orl     _CKCON0,#0x10
1A04           4789   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:146: TMR2RL=(0x10000L-(SYSCLK/10000L)); // Initialize reload value
1A04 75CAE0    4790            mov     _TMR2RL,#0xE0
1A07 75CBE3    4791            mov     (_TMR2RL >> 8),#0xE3
1A0A           4792   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:147: TMR2=0xffff;   // Set to reload immediately
1A0A 75CEFF    4793            mov     _TMR2,#0xFF
1A0D 75CFFF    4794            mov     (_TMR2 >> 8),#0xFF
1A10           4795   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:148: ET2=1;         // Enable Timer2 interrupts
1A10 D2AD      4796            setb    _ET2
1A12           4797   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:149: TR2=1;         // Start Timer2 (TMR2CN is bit addressable)
1A12 D2CA      4798            setb    _TR2
1A14           4799   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:151: EA = 1;
1A14 D2AF      4800            setb    _EA
1A16           4801   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:153: return 0;
1A16 758200    4802            mov     dpl,#0x00
1A19 22        4803            ret
1A1A           4804   ;------------------------------------------------------------
1A1A           4805   ;Allocation info for local variables in function 'UART1_Init'
1A1A           4806   ;------------------------------------------------------------
1A1A           4807   ;baudrate                  Allocated to registers r2 r3 r4 r5 
1A1A           4808   ;------------------------------------------------------------
1A1A           4809   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:156: void UART1_Init (unsigned long baudrate)
1A1A           4810   ;        -----------------------------------------
1A1A           4811   ;         function UART1_Init
1A1A           4812   ;        -----------------------------------------
1A1A           4813   _UART1_Init:
1A1A AA82      4814            mov     r2,dpl
1A1C AB83      4815            mov     r3,dph
1A1E ACF0      4816            mov     r4,b
1A20 FD        4817            mov     r5,a
1A21           4818   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:158: SFRPAGE = 0x20;
1A21 75A720    4819            mov     _SFRPAGE,#0x20
1A24           4820   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:159: SMOD1 = 0x0C; // no parity, 8 data bits, 1 stop bit
1A24 75930C    4821            mov     _SMOD1,#0x0C
1A27           4822   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:160: SCON1 = 0x10;
1A27 75C810    4823            mov     _SCON1,#0x10
1A2A           4824   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:161: SBCON1 =0x00;   // disable baud rate generator
1A2A 759400    4825            mov     _SBCON1,#0x00
1A2D           4826   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:162: SBRL1 = 0x10000L-((SYSCLK/baudrate)/(12L*2L));
1A2D 8A00      4827            mov     __divulong_PARM_2,r2
1A2F 8B01      4828            mov     (__divulong_PARM_2 + 1),r3
1A31 8C02      4829            mov     (__divulong_PARM_2 + 2),r4
1A33 8D03      4830            mov     (__divulong_PARM_2 + 3),r5
1A35 90A200    4831            mov     dptr,#0xA200
1A38 75F04A    4832            mov     b,#0x4A
1A3B 7404      4833            mov     a,#0x04
1A3D 120100    4834            lcall   __divulong
1A40 AA82      4835            mov     r2,dpl
1A42 AB83      4836            mov     r3,dph
1A44 ACF0      4837            mov     r4,b
1A46 FD        4838            mov     r5,a
1A47 750018    4839            mov     __divulong_PARM_2,#0x18
1A4A E4        4840            clr     a
1A4B F501      4841            mov     (__divulong_PARM_2 + 1),a
1A4D F502      4842            mov     (__divulong_PARM_2 + 2),a
1A4F F503      4843            mov     (__divulong_PARM_2 + 3),a
1A51 8A82      4844            mov     dpl,r2
1A53 8B83      4845            mov     dph,r3
1A55 8CF0      4846            mov     b,r4
1A57 ED        4847            mov     a,r5
1A58 120100    4848            lcall   __divulong
1A5B AA82      4849            mov     r2,dpl
1A5D AB83      4850            mov     r3,dph
1A5F ACF0      4851            mov     r4,b
1A61 FD        4852            mov     r5,a
1A62 E4        4853            clr     a
1A63 C3        4854            clr     c
1A64 9A        4855            subb    a,r2
1A65 FA        4856            mov     r2,a
1A66 E4        4857            clr     a
1A67 9B        4858            subb    a,r3
1A68 FB        4859            mov     r3,a
1A69 7401      4860            mov     a,#0x01
1A6B 9C        4861            subb    a,r4
1A6C E4        4862            clr     a
1A6D 9D        4863            subb    a,r5
1A6E 8A95      4864            mov     _SBRL1,r2
1A70 8B96      4865            mov     (_SBRL1 >> 8),r3
1A72           4866   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:163: TI1 = 1; // indicate ready for TX
1A72 D2C9      4867            setb    _TI1
1A74           4868   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:164: SBCON1 |= 0x40;   // enable baud rate generator
1A74 439440    4869            orl     _SBCON1,#0x40
1A77           4870   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:165: SFRPAGE = 0x00;
1A77 75A700    4871            mov     _SFRPAGE,#0x00
1A7A 22        4872            ret
1A7B           4873   ;------------------------------------------------------------
1A7B           4874   ;Allocation info for local variables in function 'UART1_RI'
1A7B           4875   ;------------------------------------------------------------
1A7B           4876   ;UART1_char2               Allocated to registers r2 
1A7B           4877   ;i                         Allocated to registers r3 
1A7B           4878   ;j                         Allocated to registers r4 
1A7B           4879   ;------------------------------------------------------------
1A7B           4880   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:168: void UART1_RI(void) using 3
1A7B           4881   ;        -----------------------------------------
1A7B           4882   ;         function UART1_RI
1A7B           4883   ;        -----------------------------------------
1A7B           4884   _UART1_RI:
1A7B           4885            using   3
1A7B           4886   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:171: SFRPAGE = 0x20;
1A7B 75A720    4887            mov     _SFRPAGE,#0x20
1A7E           4888   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:175: RI1 = 0;
1A7E C2C8      4889            clr     _RI1
1A80           4890   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:176: SCON1&=0b_0011_1111;    // Clear Overrun and HW Parity error flags
1A80 53C83F    4891            anl     _SCON1,#0x3F
1A83           4892   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:177: UART1_char2 = SBUF1;
1A83 AA92      4893            mov     r2,_SBUF1
1A85           4894   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:179: for(i=0;i<8;i++)
1A85 7B00      4895            mov     r3,#0x00
1A87           4896   L026008?:
1A87 BB0870    4897            cjne    r3,#0x08,L026027?
1A8A           4898   L026027?:
1A8A 5001      4899            jnc     L026011?
1A8C           4900   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:181: j = (UART1_char2 & 128) / 128;
1A8C 7480      4901            mov     a,#0x80
1A8E 5A        4902            anl     a,r2
1A8F 23        4903            rl      a
1A90 5401      4904            anl     a,#0x01
1A92 FC        4905            mov     r4,a
1A93           4906   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:182: printf("%d", j);
1A93 7D00      4907            mov     r5,#0x00
1A95 C01A      4908            push    ar2
1A97 C01B      4909            push    ar3
1A99 C01C      4910            push    ar4
1A9B C01D      4911            push    ar5
1A9D 74F0      4912            mov     a,#__str_0
1A9F C0E0      4913            push    acc
1AA1 7400      4914            mov     a,#(__str_0 >> 8)
1AA3 C0E0      4915            push    acc
1AA5 7480      4916            mov     a,#0x80
1AA7 C0E0      4917            push    acc
1AA9 75D000    4918            mov     psw,#0x00
1AAC 120100    4919            lcall   _printf
1AAF 75D018    4920            mov     psw,#0x18
1AB2 E581      4921            mov     a,sp
1AB4 24FB      4922            add     a,#0xfb
1AB6 F581      4923            mov     sp,a
1AB8 D01B      4924            pop     ar3
1ABA D01A      4925            pop     ar2
1ABC           4926   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:183: UART1_char2 <<=1;
1ABC EA        4927            mov     a,r2
1ABD 2A        4928            add     a,r2
1ABE FA        4929            mov     r2,a
1ABF           4930   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:179: for(i=0;i<8;i++)
1ABF 0B        4931            inc     r3
1AC0 8001      4932            sjmp    L026008?
1AC2           4933   L026011?:
1AC2           4934   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:185: printf("\n");
1AC2 74B0      4935            mov     a,#__str_1
1AC4 C0E0      4936            push    acc
1AC6 7401      4937            mov     a,#(__str_1 >> 8)
1AC8 C0E0      4938            push    acc
1ACA 7480      4939            mov     a,#0x80
1ACC C0E0      4940            push    acc
1ACE 75D000    4941            mov     psw,#0x00
1AD1 120100    4942            lcall   _printf
1AD4 75D018    4943            mov     psw,#0x18
1AD7 1581      4944            dec     sp
1AD9 1581      4945            dec     sp
1ADB 1581      4946            dec     sp
1ADD           4947   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:186: UART1_char2 = SBUF1;
1ADD AA92      4948            mov     r2,_SBUF1
1ADF           4949   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:188: parity = 0;
1ADF C2C8      4950            clr     _parity
1AE1           4951   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:189: for (i=0; i<8; i++) {
1AE1 7B00      4952            mov     r3,#0x00
1AE3           4953   L026012?:
1AE3 BB0830    4954            cjne    r3,#0x08,L026029?
1AE6           4955   L026029?:
1AE6 5001      4956            jnc     L026015?
1AE8           4957   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:190: if(UART1_char2 & 1 == 1) parity = !parity;
1AE8 EA        4958            mov     a,r2
1AE9 30E0B0    4959            jnb     acc.0,L026002?
1AEC B2C8      4960            cpl     _parity
1AEE           4961   L026002?:
1AEE           4962   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:191: UART1_char2 >>= 1;
1AEE EA        4963            mov     a,r2
1AEF C3        4964            clr     c
1AF0 13        4965            rrc     a
1AF1 FA        4966            mov     r2,a
1AF2           4967   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:189: for (i=0; i<8; i++) {
1AF2 0B        4968            inc     r3
1AF3 8001      4969            sjmp    L026012?
1AF5           4970   L026015?:
1AF5           4971   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:193: if(!parity)
1AF5 20C8F0    4972            jb      _parity,L026004?
1AF8           4973   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:196: return;
1AF8 22        4974            ret
1AF9           4975   L026004?:
1AF9           4976   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:206: UART1_char2 = SBUF1;
1AF9           4977   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:207: if(UART1_char2 % 2 == 0)    //Byte 0
1AF9 E592      4978            mov     a,_SBUF1
1AFB FA        4979            mov     r2,a
1AFC 20E030    4980            jb      acc.0,L026006?
1AFF           4981   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:209: no_signal_0 = 0;     //clear no signal counter
1AFF 904B68    4982            mov     dptr,#_no_signal_0
1B02 E4        4983            clr     a
1B03 F0        4984            movx    @dptr,a
1B04 A3        4985            inc     dptr
1B05 F0        4986            movx    @dptr,a
1B06           4987   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:210: UART1_char2 >>= 1;
1B06 EA        4988            mov     a,r2
1B07 C3        4989            clr     c
1B08 13        4990            rrc     a
1B09           4991   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:213: boost = UART1_char2 % 2;
1B09 FA        4992            mov     r2,a
1B0A 13        4993            rrc     a
1B0B 9208      4994            mov     _boost,c
1B0D           4995   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:214: UART1_char2 >>= 1;
1B0D EA        4996            mov     a,r2
1B0E C3        4997            clr     c
1B0F 13        4998            rrc     a
1B10           4999   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:215: autocar = UART1_char2 % 2;
1B10 FA        5000            mov     r2,a
1B11 13        5001            rrc     a
1B12 9248      5002            mov     _autocar,c
1B14           5003   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:216: UART1_char2 >>= 1;
1B14 EA        5004            mov     a,r2
1B15 C3        5005            clr     c
1B16 13        5006            rrc     a
1B17 FA        5007            mov     r2,a
1B18           5008   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:219: y_absolute = UART1_char2 % 8;
1B18 7407      5009            mov     a,#0x07
1B1A 5A        5010            anl     a,r2
1B1B 904BA8    5011            mov     dptr,#_y_absolute
1B1E F0        5012            movx    @dptr,a
1B1F A3        5013            inc     dptr
1B20 E4        5014            clr     a
1B21 F0        5015            movx    @dptr,a
1B22           5016   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:220: UART1_char2 >>= 3;
1B22 EA        5017            mov     a,r2
1B23 C4        5018            swap    a
1B24 23        5019            rl      a
1B25 541F      5020            anl     a,#0x1f
1B27 FA        5021            mov     r2,a
1B28           5022   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:221: y_dir = !(UART1_char2 % 2);
1B28 7401      5023            mov     a,#0x01
1B2A 5A        5024            anl     a,r2
1B2B FB        5025            mov     r3,a
1B2C B40170    5026            cjne    a,#0x01,L026034?
1B2F           5027   L026034?:
1B2F 9208      5028            mov     _y_dir,c
1B31 8001      5029            sjmp    L026007?
1B33           5030   L026006?:
1B33           5031   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:223: no_signal_1 = 0;    //clear no signal counter
1B33 904B28    5032            mov     dptr,#_no_signal_1
1B36 E4        5033            clr     a
1B37 F0        5034            movx    @dptr,a
1B38 A3        5035            inc     dptr
1B39 F0        5036            movx    @dptr,a
1B3A           5037   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:224: UART1_char2 >>= 1;
1B3A EA        5038            mov     a,r2
1B3B C3        5039            clr     c
1B3C 13        5040            rrc     a
1B3D           5041   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:227: close = UART1_char2 % 2;
1B3D FA        5042            mov     r2,a
1B3E 13        5043            rrc     a
1B3F 9288      5044            mov     _close,c
1B41           5045   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:228: UART1_char2 >>= 1;
1B41 EA        5046            mov     a,r2
1B42 C3        5047            clr     c
1B43 13        5048            rrc     a
1B44           5049   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:229: open = UART1_char2 % 2;
1B44 FA        5050            mov     r2,a
1B45 13        5051            rrc     a
1B46 92C8      5052            mov     _open,c
1B48           5053   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:230: UART1_char2 >>= 1;
1B48 EA        5054            mov     a,r2
1B49 C3        5055            clr     c
1B4A 13        5056            rrc     a
1B4B FA        5057            mov     r2,a
1B4C           5058   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:233: x_absolute = UART1_char2 % 8;
1B4C 7407      5059            mov     a,#0x07
1B4E 5A        5060            anl     a,r2
1B4F FB        5061            mov     r3,a
1B50 904BE8    5062            mov     dptr,#_x_absolute
1B53 F0        5063            movx    @dptr,a
1B54 A3        5064            inc     dptr
1B55 E4        5065            clr     a
1B56 F0        5066            movx    @dptr,a
1B57           5067   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:234: UART1_char2 >>= 3;
1B57 EA        5068            mov     a,r2
1B58 C4        5069            swap    a
1B59 23        5070            rl      a
1B5A           5071   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:235: x_dir = !(UART1_char2 % 2);
1B5A 5401      5072            anl     a,#(0x1f&0x01)
1B5C FA        5073            mov     r2,a
1B5D B401F0    5074            cjne    a,#0x01,L026035?
1B60           5075   L026035?:
1B60 9248      5076            mov     _x_dir,c
1B62           5077   L026007?:
1B62           5078   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:239: SFRPAGE = 0x00;
1B62 75A700    5079            mov     _SFRPAGE,#0x00
1B65           5080   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:240: return;
1B65 22        5081            ret
1B66           5082   ;------------------------------------------------------------
1B66           5083   ;Allocation info for local variables in function 'Timer2_ISR'
1B66           5084   ;------------------------------------------------------------
1B66           5085   ;------------------------------------------------------------
1B66           5086   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:243: void Timer2_ISR (void) interrupt 5 using 2
1B66           5087   ;        -----------------------------------------
1B66           5088   ;         function Timer2_ISR
1B66           5089   ;        -----------------------------------------
1B66           5090   _Timer2_ISR:
1B66           5091            using   2
1B66 C000      5092            push    bits
1B68 C0E0      5093            push    acc
1B6A C0F0      5094            push    b
1B6C C082      5095            push    dpl
1B6E C083      5096            push    dph
1B70 C002      5097            push    (0+2)
1B72 C003      5098            push    (0+3)
1B74 C004      5099            push    (0+4)
1B76 C005      5100            push    (0+5)
1B78 C006      5101            push    (0+6)
1B7A C007      5102            push    (0+7)
1B7C C000      5103            push    (0+0)
1B7E C001      5104            push    (0+1)
1B80 C0D0      5105            push    psw
1B82 75D010    5106            mov     psw,#0x10
1B85           5107   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:245: TF2H = 0; // Clear Timer2 interrupt flag
1B85 C2CF      5108            clr     _TF2H
1B87           5109   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:247: pwm_count++;
1B87 901880    5110            mov     dptr,#_pwm_count
1B8A E0        5111            movx    a,@dptr
1B8B 2401      5112            add     a,#0x01
1B8D F0        5113            movx    @dptr,a
1B8E           5114   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:248: if (pwm_count >= 100) {
1B8E 901880    5115            mov     dptr,#_pwm_count
1B91 E0        5116            movx    a,@dptr
1B92 FA        5117            mov     r2,a
1B93 BA6430    5118            cjne    r2,#0x64,L027031?
1B96           5119   L027031?:
1B96 5001      5120            jnc     L027032?
1B98 020100    5121            ljmp    L027012?
1B9B           5122   L027032?:
1B9B           5123   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:249: pwm_count=0;
1B9B 901880    5124            mov     dptr,#_pwm_count
1B9E E4        5125            clr     a
1B9F F0        5126            movx    @dptr,a
1BA0           5127   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:250: counter_above_100 = !counter_above_100;
1BA0 B2F8      5128            cpl     _counter_above_100
1BA2           5129   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:251: timer_count++;
1BA2 904AA8    5130            mov     dptr,#_timer_count
1BA5 E0        5131            movx    a,@dptr
1BA6 2401      5132            add     a,#0x01
1BA8 F0        5133            movx    @dptr,a
1BA9 A3        5134            inc     dptr
1BAA E0        5135            movx    a,@dptr
1BAB 3400      5136            addc    a,#0x00
1BAD F0        5137            movx    @dptr,a
1BAE           5138   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:252: no_signal_0++;
1BAE 904B68    5139            mov     dptr,#_no_signal_0
1BB1 E0        5140            movx    a,@dptr
1BB2 2401      5141            add     a,#0x01
1BB4 F0        5142            movx    @dptr,a
1BB5 A3        5143            inc     dptr
1BB6 E0        5144            movx    a,@dptr
1BB7 3400      5145            addc    a,#0x00
1BB9 F0        5146            movx    @dptr,a
1BBA           5147   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:253: no_signal_1++;
1BBA 904B28    5148            mov     dptr,#_no_signal_1
1BBD E0        5149            movx    a,@dptr
1BBE 2401      5150            add     a,#0x01
1BC0 F0        5151            movx    @dptr,a
1BC1 A3        5152            inc     dptr
1BC2 E0        5153            movx    a,@dptr
1BC3 3400      5154            addc    a,#0x00
1BC5 F0        5155            movx    @dptr,a
1BC6           5156   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:254: if (no_signal_0 >= 250 || no_signal_1 >= 250) no_signal = 1;
1BC6 904B68    5157            mov     dptr,#_no_signal_0
1BC9 E0        5158            movx    a,@dptr
1BCA FA        5159            mov     r2,a
1BCB A3        5160            inc     dptr
1BCC E0        5161            movx    a,@dptr
1BCD FB        5162            mov     r3,a
1BCE C3        5163            clr     c
1BCF EA        5164            mov     a,r2
1BD0 94FA      5165            subb    a,#0xFA
1BD2 EB        5166            mov     a,r3
1BD3 9400      5167            subb    a,#0x00
1BD5 5001      5168            jnc     L027001?
1BD7 904B28    5169            mov     dptr,#_no_signal_1
1BDA E0        5170            movx    a,@dptr
1BDB FA        5171            mov     r2,a
1BDC A3        5172            inc     dptr
1BDD E0        5173            movx    a,@dptr
1BDE FB        5174            mov     r3,a
1BDF C3        5175            clr     c
1BE0 EA        5176            mov     a,r2
1BE1 94FA      5177            subb    a,#0xFA
1BE3 EB        5178            mov     a,r3
1BE4 9400      5179            subb    a,#0x00
1BE6 4001      5180            jc      L027002?
1BE8           5181   L027001?:
1BE8 D288      5182            setb    _no_signal
1BEA 8001      5183            sjmp    L027003?
1BEC           5184   L027002?:
1BEC           5185   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:255: else no_signal = 0;
1BEC C288      5186            clr     _no_signal
1BEE           5187   L027003?:
1BEE           5188   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:256: if (timer_count >= 50) {        //every 0.5 seconds enter
1BEE 904AA8    5189            mov     dptr,#_timer_count
1BF1 E0        5190            movx    a,@dptr
1BF2 FA        5191            mov     r2,a
1BF3 A3        5192            inc     dptr
1BF4 E0        5193            movx    a,@dptr
1BF5 FB        5194            mov     r3,a
1BF6 C3        5195            clr     c
1BF7 EA        5196            mov     a,r2
1BF8 9432      5197            subb    a,#0x32
1BFA EB        5198            mov     a,r3
1BFB 9400      5199            subb    a,#0x00
1BFD 4001      5200            jc      L027012?
1BFF           5201   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:257: timer_count =  0;
1BFF 904AA8    5202            mov     dptr,#_timer_count
1C02 E4        5203            clr     a
1C03 F0        5204            movx    @dptr,a
1C04 A3        5205            inc     dptr
1C05 F0        5206            movx    @dptr,a
1C06           5207   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:258: dir_flag = 0;
1C06 C208      5208            clr     _dir_flag
1C08           5209   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:259: if(!sequence_timeout) sequence_timer++;
1C08 20C8B0    5210            jb      _sequence_timeout,L027006?
1C0B 904E28    5211            mov     dptr,#_sequence_timer
1C0E E0        5212            movx    a,@dptr
1C0F 2401      5213            add     a,#0x01
1C11 F0        5214            movx    @dptr,a
1C12 A3        5215            inc     dptr
1C13 E0        5216            movx    a,@dptr
1C14 3400      5217            addc    a,#0x00
1C16 F0        5218            movx    @dptr,a
1C17           5219   L027006?:
1C17           5220   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:260: if(sequence_timer >10) sequence_timeout = 1;
1C17 904E28    5221            mov     dptr,#_sequence_timer
1C1A E0        5222            movx    a,@dptr
1C1B FA        5223            mov     r2,a
1C1C A3        5224            inc     dptr
1C1D E0        5225            movx    a,@dptr
1C1E FB        5226            mov     r3,a
1C1F C3        5227            clr     c
1C20 740A      5228            mov     a,#0x0A
1C22 9A        5229            subb    a,r2
1C23 E4        5230            clr     a
1C24 9B        5231            subb    a,r3
1C25 5001      5232            jnc     L027012?
1C27 D2C8      5233            setb    _sequence_timeout
1C29           5234   L027012?:
1C29           5235   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:265: if (!ML_dir) {
1C29 20A8F0    5236            jb      _ML_dir,L027014?
1C2C           5237   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:266: OUTLF = 0;
1C2C C2A1      5238            clr     _P2_1
1C2E           5239   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:267: OUTLB =pwm_count>=pwmL?0:1;
1C2E 901880    5240            mov     dptr,#_pwm_count
1C31 E0        5241            movx    a,@dptr
1C32 FA        5242            mov     r2,a
1C33 904DA8    5243            mov     dptr,#_pwmL
1C36 E0        5244            movx    a,@dptr
1C37 FB        5245            mov     r3,a
1C38 A3        5246            inc     dptr
1C39 E0        5247            movx    a,@dptr
1C3A FC        5248            mov     r4,a
1C3B 7D00      5249            mov     r5,#0x00
1C3D C3        5250            clr     c
1C3E EA        5251            mov     a,r2
1C3F 9B        5252            subb    a,r3
1C40 ED        5253            mov     a,r5
1C41 9C        5254            subb    a,r4
1C42 92A2      5255            mov     _P2_2,c
1C44 8001      5256            sjmp    L027015?
1C46           5257   L027014?:
1C46           5258   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:269: OUTLB = 0;
1C46 C2A2      5259            clr     _P2_2
1C48           5260   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:270: OUTLF =pwm_count>=pwmL?0:1;
1C48 901880    5261            mov     dptr,#_pwm_count
1C4B E0        5262            movx    a,@dptr
1C4C FA        5263            mov     r2,a
1C4D 904DA8    5264            mov     dptr,#_pwmL
1C50 E0        5265            movx    a,@dptr
1C51 FB        5266            mov     r3,a
1C52 A3        5267            inc     dptr
1C53 E0        5268            movx    a,@dptr
1C54 FC        5269            mov     r4,a
1C55 7D00      5270            mov     r5,#0x00
1C57 C3        5271            clr     c
1C58 EA        5272            mov     a,r2
1C59 9B        5273            subb    a,r3
1C5A ED        5274            mov     a,r5
1C5B 9C        5275            subb    a,r4
1C5C 92A1      5276            mov     _P2_1,c
1C5E           5277   L027015?:
1C5E           5278   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:273: if (MR_dir) {
1C5E 306870    5279            jnb     _MR_dir,L027017?
1C61           5280   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:274: OUTRF = 0;
1C61 C2A3      5281            clr     _P2_3
1C63           5282   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:275: OUTRB =pwm_count>=pwmR?0:1;
1C63 901880    5283            mov     dptr,#_pwm_count
1C66 E0        5284            movx    a,@dptr
1C67 FA        5285            mov     r2,a
1C68 904D68    5286            mov     dptr,#_pwmR
1C6B E0        5287            movx    a,@dptr
1C6C FB        5288            mov     r3,a
1C6D A3        5289            inc     dptr
1C6E E0        5290            movx    a,@dptr
1C6F FC        5291            mov     r4,a
1C70 7D00      5292            mov     r5,#0x00
1C72 C3        5293            clr     c
1C73 EA        5294            mov     a,r2
1C74 9B        5295            subb    a,r3
1C75 ED        5296            mov     a,r5
1C76 9C        5297            subb    a,r4
1C77 92A4      5298            mov     _P2_4,c
1C79 8001      5299            sjmp    L027018?
1C7B           5300   L027017?:
1C7B           5301   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:277: OUTRB = 0;
1C7B C2A4      5302            clr     _P2_4
1C7D           5303   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:278: OUTRF =pwm_count>=pwmR?0:1;
1C7D 901880    5304            mov     dptr,#_pwm_count
1C80 E0        5305            movx    a,@dptr
1C81 FA        5306            mov     r2,a
1C82 904D68    5307            mov     dptr,#_pwmR
1C85 E0        5308            movx    a,@dptr
1C86 FB        5309            mov     r3,a
1C87 A3        5310            inc     dptr
1C88 E0        5311            movx    a,@dptr
1C89 FC        5312            mov     r4,a
1C8A 7D00      5313            mov     r5,#0x00
1C8C C3        5314            clr     c
1C8D EA        5315            mov     a,r2
1C8E 9B        5316            subb    a,r3
1C8F ED        5317            mov     a,r5
1C90 9C        5318            subb    a,r4
1C91 92A3      5319            mov     _P2_3,c
1C93           5320   L027018?:
1C93           5321   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:281: sonar_op();
1C93 75D000    5322            mov     psw,#0x00
1C96 120100    5323            lcall   _sonar_op
1C99 75D010    5324            mov     psw,#0x10
1C9C           5325   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:282: if (!counter_above_100) claw_control();
1C9C 20F8F0    5326            jb      _counter_above_100,L027021?
1C9F 75D000    5327            mov     psw,#0x00
1CA2 120100    5328            lcall   _claw_control
1CA5 75D010    5329            mov     psw,#0x10
1CA8           5330   L027021?:
1CA8 D0D0      5331            pop     psw
1CAA D001      5332            pop     (0+1)
1CAC D000      5333            pop     (0+0)
1CAE D007      5334            pop     (0+7)
1CB0 D006      5335            pop     (0+6)
1CB2 D005      5336            pop     (0+5)
1CB4 D004      5337            pop     (0+4)
1CB6 D003      5338            pop     (0+3)
1CB8 D002      5339            pop     (0+2)
1CBA D083      5340            pop     dph
1CBC D082      5341            pop     dpl
1CBE D0F0      5342            pop     b
1CC0 D0E0      5343            pop     acc
1CC2 D000      5344            pop     bits
1CC4 32        5345            reti
1CC5           5346   ;------------------------------------------------------------
1CC5           5347   ;Allocation info for local variables in function 'Claw_Pos'
1CC5           5348   ;------------------------------------------------------------
1CC5           5349   ;pos                       Allocated to registers r2 r3 
1CC5           5350   ;------------------------------------------------------------
1CC5           5351   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:286: void Claw_Pos( short pos ) 
1CC5           5352   ;        -----------------------------------------
1CC5           5353   ;         function Claw_Pos
1CC5           5354   ;        -----------------------------------------
1CC5           5355   _Claw_Pos:
1CC5           5356            using   0
1CC5 AA82      5357            mov     r2,dpl
1CC7 AB83      5358            mov     r3,dph
1CC9           5359   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:288: claw_pos = pos + 5;
1CC9 9018C0    5360            mov     dptr,#_claw_pos
1CCC 7405      5361            mov     a,#0x05
1CCE 2A        5362            add     a,r2
1CCF F0        5363            movx    @dptr,a
1CD0 E4        5364            clr     a
1CD1 3B        5365            addc    a,r3
1CD2 A3        5366            inc     dptr
1CD3 F0        5367            movx    @dptr,a
1CD4 22        5368            ret
1CD5           5369   ;------------------------------------------------------------
1CD5           5370   ;Allocation info for local variables in function 'manual_mode'
1CD5           5371   ;------------------------------------------------------------
1CD5           5372   ;------------------------------------------------------------
1CD5           5373   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:291: void manual_mode(void)
1CD5           5374   ;        -----------------------------------------
1CD5           5375   ;         function manual_mode
1CD5           5376   ;        -----------------------------------------
1CD5           5377   _manual_mode:
1CD5           5378   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:294: if(open) Claw_Pos(10);
1CD5 30C830    5379            jnb     _open,L029002?
1CD8 90000A    5380            mov     dptr,#0x000A
1CDB 120100    5381            lcall   _Claw_Pos
1CDE           5382   L029002?:
1CDE           5383   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:295: if(close) Claw_Pos(2);
1CDE 308870    5384            jnb     _close,L029004?
1CE1 900002    5385            mov     dptr,#0x0002
1CE4 120100    5386            lcall   _Claw_Pos
1CE7           5387   L029004?:
1CE7           5388   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:298: if(no_signal)
1CE7 3088B0    5389            jnb     _no_signal,L029006?
1CEA           5390   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:300: pwmL = 0;
1CEA 904DA8    5391            mov     dptr,#_pwmL
1CED E4        5392            clr     a
1CEE F0        5393            movx    @dptr,a
1CEF A3        5394            inc     dptr
1CF0 F0        5395            movx    @dptr,a
1CF1           5396   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:301: pwmR = 0;
1CF1 904D68    5397            mov     dptr,#_pwmR
1CF4 E4        5398            clr     a
1CF5 F0        5399            movx    @dptr,a
1CF6 A3        5400            inc     dptr
1CF7 F0        5401            movx    @dptr,a
1CF8           5402   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:302: Claw_Pos(-5);
1CF8 90FFFB    5403            mov     dptr,#0xFFFB
1CFB           5404   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:303: return;
1CFB 020100    5405            ljmp    _Claw_Pos
1CFE           5406   L029006?:
1CFE           5407   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:305: if(y_absolute == 0)     //turn in place
1CFE 904BA8    5408            mov     dptr,#_y_absolute
1D01 E0        5409            movx    a,@dptr
1D02 FA        5410            mov     r2,a
1D03 A3        5411            inc     dptr
1D04 E0        5412            movx    a,@dptr
1D05 FB        5413            mov     r3,a
1D06 4A        5414            orl     a,r2
1D07 6001      5415            jz      L029031?
1D09 020100    5416            ljmp    L029017?
1D0C           5417   L029031?:
1D0C           5418   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:307: main_short1 = x_absolute;
1D0C 904BE8    5419            mov     dptr,#_x_absolute
1D0F E0        5420            movx    a,@dptr
1D10 FA        5421            mov     r2,a
1D11 A3        5422            inc     dptr
1D12 E0        5423            movx    a,@dptr
1D13 FB        5424            mov     r3,a
1D14 904D28    5425            mov     dptr,#_main_short1
1D17 EA        5426            mov     a,r2
1D18 F0        5427            movx    @dptr,a
1D19 A3        5428            inc     dptr
1D1A EB        5429            mov     a,r3
1D1B F0        5430            movx    @dptr,a
1D1C           5431   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:308: ML_dir = !x_dir;
1D1C A248      5432            mov     c,_x_dir
1D1E B3        5433            cpl     c
1D1F 92A8      5434            mov     _ML_dir,c
1D21           5435   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:309: MR_dir = x_dir;
1D21 A248      5436            mov     c,_x_dir
1D23 9268      5437            mov     _MR_dir,c
1D25           5438   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:310: if(boost)
1D25 300870    5439            jnb     _boost,L029008?
1D28           5440   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:312: pwmL = main_short1 * BOOST_TURN;  //boost turn speed
1D28 904D28    5441            mov     dptr,#_main_short1
1D2B E0        5442            movx    a,@dptr
1D2C F500      5443            mov     __mulint_PARM_2,a
1D2E A3        5444            inc     dptr
1D2F E0        5445            movx    a,@dptr
1D30 F501      5446            mov     (__mulint_PARM_2 + 1),a
1D32 900007    5447            mov     dptr,#0x0007
1D35 120100    5448            lcall   __mulint
1D38 E582      5449            mov     a,dpl
1D3A 8583F0    5450            mov     b,dph
1D3D 904DA8    5451            mov     dptr,#_pwmL
1D40 F0        5452            movx    @dptr,a
1D41 A3        5453            inc     dptr
1D42 E5F0      5454            mov     a,b
1D44 F0        5455            movx    @dptr,a
1D45           5456   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:313: pwmR = main_short1 * BOOST_TURN;
1D45 904D28    5457            mov     dptr,#_main_short1
1D48 E0        5458            movx    a,@dptr
1D49 F500      5459            mov     __mulint_PARM_2,a
1D4B A3        5460            inc     dptr
1D4C E0        5461            movx    a,@dptr
1D4D F501      5462            mov     (__mulint_PARM_2 + 1),a
1D4F 900007    5463            mov     dptr,#0x0007
1D52 120100    5464            lcall   __mulint
1D55 E582      5465            mov     a,dpl
1D57 8583F0    5466            mov     b,dph
1D5A 904D68    5467            mov     dptr,#_pwmR
1D5D F0        5468            movx    @dptr,a
1D5E A3        5469            inc     dptr
1D5F E5F0      5470            mov     a,b
1D61 F0        5471            movx    @dptr,a
1D62 22        5472            ret
1D63           5473   L029008?:
1D63           5474   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:315: pwmL = main_short1 * DFT_TURN;    //default turn speed
1D63 904D28    5475            mov     dptr,#_main_short1
1D66 E0        5476            movx    a,@dptr
1D67 FA        5477            mov     r2,a
1D68 A3        5478            inc     dptr
1D69 E0        5479            movx    a,@dptr
1D6A CA        5480            xch     a,r2
1D6B 25E0      5481            add     a,acc
1D6D CA        5482            xch     a,r2
1D6E 33        5483            rlc     a
1D6F CA        5484            xch     a,r2
1D70 25E0      5485            add     a,acc
1D72 CA        5486            xch     a,r2
1D73 33        5487            rlc     a
1D74 FB        5488            mov     r3,a
1D75 904DA8    5489            mov     dptr,#_pwmL
1D78 EA        5490            mov     a,r2
1D79 F0        5491            movx    @dptr,a
1D7A A3        5492            inc     dptr
1D7B EB        5493            mov     a,r3
1D7C F0        5494            movx    @dptr,a
1D7D           5495   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:316: pwmR = main_short1 * DFT_TURN;
1D7D 904D28    5496            mov     dptr,#_main_short1
1D80 E0        5497            movx    a,@dptr
1D81 FA        5498            mov     r2,a
1D82 A3        5499            inc     dptr
1D83 E0        5500            movx    a,@dptr
1D84 CA        5501            xch     a,r2
1D85 25E0      5502            add     a,acc
1D87 CA        5503            xch     a,r2
1D88 33        5504            rlc     a
1D89 CA        5505            xch     a,r2
1D8A 25E0      5506            add     a,acc
1D8C CA        5507            xch     a,r2
1D8D 33        5508            rlc     a
1D8E FB        5509            mov     r3,a
1D8F 904D68    5510            mov     dptr,#_pwmR
1D92 EA        5511            mov     a,r2
1D93 F0        5512            movx    @dptr,a
1D94 A3        5513            inc     dptr
1D95 EB        5514            mov     a,r3
1D96 F0        5515            movx    @dptr,a
1D97 22        5516            ret
1D98           5517   L029017?:
1D98           5518   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:319: main_int1 = y_absolute * 100;
1D98 904BA8    5519            mov     dptr,#_y_absolute
1D9B E0        5520            movx    a,@dptr
1D9C F500      5521            mov     __mulint_PARM_2,a
1D9E A3        5522            inc     dptr
1D9F E0        5523            movx    a,@dptr
1DA0 F501      5524            mov     (__mulint_PARM_2 + 1),a
1DA2 900064    5525            mov     dptr,#0x0064
1DA5 120100    5526            lcall   __mulint
1DA8 E582      5527            mov     a,dpl
1DAA 8583F0    5528            mov     b,dph
1DAD 904CE8    5529            mov     dptr,#_main_int1
1DB0 F0        5530            movx    @dptr,a
1DB1 A3        5531            inc     dptr
1DB2 E5F0      5532            mov     a,b
1DB4 F0        5533            movx    @dptr,a
1DB5           5534   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:320: main_int2 = main_int1 * x_absolute / TURNING_RADIUS;
1DB5 904BE8    5535            mov     dptr,#_x_absolute
1DB8 E0        5536            movx    a,@dptr
1DB9 F500      5537            mov     __mulint_PARM_2,a
1DBB A3        5538            inc     dptr
1DBC E0        5539            movx    a,@dptr
1DBD F501      5540            mov     (__mulint_PARM_2 + 1),a
1DBF 904CE8    5541            mov     dptr,#_main_int1
1DC2 E0        5542            movx    a,@dptr
1DC3 FA        5543            mov     r2,a
1DC4 A3        5544            inc     dptr
1DC5 E0        5545            movx    a,@dptr
1DC6 FB        5546            mov     r3,a
1DC7 8A82      5547            mov     dpl,r2
1DC9 8B83      5548            mov     dph,r3
1DCB 120100    5549            lcall   __mulint
1DCE AA82      5550            mov     r2,dpl
1DD0 AB83      5551            mov     r3,dph
1DD2 75000A    5552            mov     __divuint_PARM_2,#0x0A
1DD5 E4        5553            clr     a
1DD6 F501      5554            mov     (__divuint_PARM_2 + 1),a
1DD8 8A82      5555            mov     dpl,r2
1DDA 8B83      5556            mov     dph,r3
1DDC 120100    5557            lcall   __divuint
1DDF E582      5558            mov     a,dpl
1DE1 8583F0    5559            mov     b,dph
1DE4 904CA8    5560            mov     dptr,#_main_int2
1DE7 F0        5561            movx    @dptr,a
1DE8 A3        5562            inc     dptr
1DE9 E5F0      5563            mov     a,b
1DEB F0        5564            movx    @dptr,a
1DEC           5565   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:321: if (x_dir)
1DEC 3048C0    5566            jnb     _x_dir,L029011?
1DEF           5567   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:323: main_int3 = main_int1 + main_int2;      //Left motor
1DEF 904CA8    5568            mov     dptr,#_main_int2
1DF2 E0        5569            movx    a,@dptr
1DF3 FA        5570            mov     r2,a
1DF4 A3        5571            inc     dptr
1DF5 E0        5572            movx    a,@dptr
1DF6 FB        5573            mov     r3,a
1DF7 904CE8    5574            mov     dptr,#_main_int1
1DFA E0        5575            movx    a,@dptr
1DFB FC        5576            mov     r4,a
1DFC A3        5577            inc     dptr
1DFD E0        5578            movx    a,@dptr
1DFE FD        5579            mov     r5,a
1DFF 904C68    5580            mov     dptr,#_main_int3
1E02 EA        5581            mov     a,r2
1E03 2C        5582            add     a,r4
1E04 F0        5583            movx    @dptr,a
1E05 EB        5584            mov     a,r3
1E06 3D        5585            addc    a,r5
1E07 A3        5586            inc     dptr
1E08 F0        5587            movx    @dptr,a
1E09           5588   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:324: main_int4 = main_int1 - main_int2;      //Right motor
1E09 904CA8    5589            mov     dptr,#_main_int2
1E0C E0        5590            movx    a,@dptr
1E0D FA        5591            mov     r2,a
1E0E A3        5592            inc     dptr
1E0F E0        5593            movx    a,@dptr
1E10 FB        5594            mov     r3,a
1E11 904CE8    5595            mov     dptr,#_main_int1
1E14 E0        5596            movx    a,@dptr
1E15 FC        5597            mov     r4,a
1E16 A3        5598            inc     dptr
1E17 E0        5599            movx    a,@dptr
1E18 FD        5600            mov     r5,a
1E19 904C28    5601            mov     dptr,#_main_int4
1E1C EC        5602            mov     a,r4
1E1D C3        5603            clr     c
1E1E 9A        5604            subb    a,r2
1E1F F0        5605            movx    @dptr,a
1E20 ED        5606            mov     a,r5
1E21 9B        5607            subb    a,r3
1E22 A3        5608            inc     dptr
1E23 F0        5609            movx    @dptr,a
1E24 8001      5610            sjmp    L029012?
1E26           5611   L029011?:
1E26           5612   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:326: main_int3 = main_int1 - main_int2;      //Left motor
1E26 904CA8    5613            mov     dptr,#_main_int2
1E29 E0        5614            movx    a,@dptr
1E2A FA        5615            mov     r2,a
1E2B A3        5616            inc     dptr
1E2C E0        5617            movx    a,@dptr
1E2D FB        5618            mov     r3,a
1E2E 904CE8    5619            mov     dptr,#_main_int1
1E31 E0        5620            movx    a,@dptr
1E32 FC        5621            mov     r4,a
1E33 A3        5622            inc     dptr
1E34 E0        5623            movx    a,@dptr
1E35 FD        5624            mov     r5,a
1E36 904C68    5625            mov     dptr,#_main_int3
1E39 EC        5626            mov     a,r4
1E3A C3        5627            clr     c
1E3B 9A        5628            subb    a,r2
1E3C F0        5629            movx    @dptr,a
1E3D ED        5630            mov     a,r5
1E3E 9B        5631            subb    a,r3
1E3F A3        5632            inc     dptr
1E40 F0        5633            movx    @dptr,a
1E41           5634   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:327: main_int4 = main_int1 + main_int2;      //Right motor
1E41 904CA8    5635            mov     dptr,#_main_int2
1E44 E0        5636            movx    a,@dptr
1E45 FA        5637            mov     r2,a
1E46 A3        5638            inc     dptr
1E47 E0        5639            movx    a,@dptr
1E48 FB        5640            mov     r3,a
1E49 904CE8    5641            mov     dptr,#_main_int1
1E4C E0        5642            movx    a,@dptr
1E4D FC        5643            mov     r4,a
1E4E A3        5644            inc     dptr
1E4F E0        5645            movx    a,@dptr
1E50 FD        5646            mov     r5,a
1E51 904C28    5647            mov     dptr,#_main_int4
1E54 EA        5648            mov     a,r2
1E55 2C        5649            add     a,r4
1E56 F0        5650            movx    @dptr,a
1E57 EB        5651            mov     a,r3
1E58 3D        5652            addc    a,r5
1E59 A3        5653            inc     dptr
1E5A F0        5654            movx    @dptr,a
1E5B           5655   L029012?:
1E5B           5656   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:331: ML_dir = y_dir;
1E5B A208      5657            mov     c,_y_dir
1E5D 92A8      5658            mov     _ML_dir,c
1E5F           5659   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:332: MR_dir = y_dir;
1E5F A208      5660            mov     c,_y_dir
1E61 9268      5661            mov     _MR_dir,c
1E63           5662   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:333: if(boost)
1E63 300840    5663            jnb     _boost,L029014?
1E66           5664   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:335: pwmL = main_int3 / BOOST_SPEED;
1E66 904C68    5665            mov     dptr,#_main_int3
1E69 E0        5666            movx    a,@dptr
1E6A FA        5667            mov     r2,a
1E6B A3        5668            inc     dptr
1E6C E0        5669            movx    a,@dptr
1E6D FB        5670            mov     r3,a
1E6E 750007    5671            mov     __divuint_PARM_2,#0x07
1E71 E4        5672            clr     a
1E72 F501      5673            mov     (__divuint_PARM_2 + 1),a
1E74 8A82      5674            mov     dpl,r2
1E76 8B83      5675            mov     dph,r3
1E78 120100    5676            lcall   __divuint
1E7B E582      5677            mov     a,dpl
1E7D 8583F0    5678            mov     b,dph
1E80 904DA8    5679            mov     dptr,#_pwmL
1E83 F0        5680            movx    @dptr,a
1E84 A3        5681            inc     dptr
1E85 E5F0      5682            mov     a,b
1E87 F0        5683            movx    @dptr,a
1E88           5684   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:336: pwmR = main_int4 / BOOST_SPEED;
1E88 904C28    5685            mov     dptr,#_main_int4
1E8B E0        5686            movx    a,@dptr
1E8C FA        5687            mov     r2,a
1E8D A3        5688            inc     dptr
1E8E E0        5689            movx    a,@dptr
1E8F FB        5690            mov     r3,a
1E90 750007    5691            mov     __divuint_PARM_2,#0x07
1E93 E4        5692            clr     a
1E94 F501      5693            mov     (__divuint_PARM_2 + 1),a
1E96 8A82      5694            mov     dpl,r2
1E98 8B83      5695            mov     dph,r3
1E9A 120100    5696            lcall   __divuint
1E9D E582      5697            mov     a,dpl
1E9F 8583F0    5698            mov     b,dph
1EA2 904D68    5699            mov     dptr,#_pwmR
1EA5 F0        5700            movx    @dptr,a
1EA6 A3        5701            inc     dptr
1EA7 E5F0      5702            mov     a,b
1EA9 F0        5703            movx    @dptr,a
1EAA 22        5704            ret
1EAB           5705   L029014?:
1EAB           5706   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:338: pwmL = main_int3 / DFT_SPEED;
1EAB 904C68    5707            mov     dptr,#_main_int3
1EAE E0        5708            movx    a,@dptr
1EAF FA        5709            mov     r2,a
1EB0 A3        5710            inc     dptr
1EB1 E0        5711            movx    a,@dptr
1EB2 FB        5712            mov     r3,a
1EB3 75000E    5713            mov     __divuint_PARM_2,#0x0E
1EB6 E4        5714            clr     a
1EB7 F501      5715            mov     (__divuint_PARM_2 + 1),a
1EB9 8A82      5716            mov     dpl,r2
1EBB 8B83      5717            mov     dph,r3
1EBD 120100    5718            lcall   __divuint
1EC0 E582      5719            mov     a,dpl
1EC2 8583F0    5720            mov     b,dph
1EC5 904DA8    5721            mov     dptr,#_pwmL
1EC8 F0        5722            movx    @dptr,a
1EC9 A3        5723            inc     dptr
1ECA E5F0      5724            mov     a,b
1ECC F0        5725            movx    @dptr,a
1ECD           5726   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:339: pwmR = main_int4 / DFT_SPEED;
1ECD 904C28    5727            mov     dptr,#_main_int4
1ED0 E0        5728            movx    a,@dptr
1ED1 FA        5729            mov     r2,a
1ED2 A3        5730            inc     dptr
1ED3 E0        5731            movx    a,@dptr
1ED4 FB        5732            mov     r3,a
1ED5 75000E    5733            mov     __divuint_PARM_2,#0x0E
1ED8 E4        5734            clr     a
1ED9 F501      5735            mov     (__divuint_PARM_2 + 1),a
1EDB 8A82      5736            mov     dpl,r2
1EDD 8B83      5737            mov     dph,r3
1EDF 120100    5738            lcall   __divuint
1EE2 E582      5739            mov     a,dpl
1EE4 8583F0    5740            mov     b,dph
1EE7 904D68    5741            mov     dptr,#_pwmR
1EEA F0        5742            movx    @dptr,a
1EEB A3        5743            inc     dptr
1EEC E5F0      5744            mov     a,b
1EEE F0        5745            movx    @dptr,a
1EEF 22        5746            ret
1EF0           5747   ;------------------------------------------------------------
1EF0           5748   ;Allocation info for local variables in function 'getchar1'
1EF0           5749   ;------------------------------------------------------------
1EF0           5750   ;c                         Allocated to registers 
1EF0           5751   ;------------------------------------------------------------
1EF0           5752   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:343: char getchar1 (void)
1EF0           5753   ;        -----------------------------------------
1EF0           5754   ;         function getchar1
1EF0           5755   ;        -----------------------------------------
1EF0           5756   _getchar1:
1EF0           5757   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:346: SFRPAGE = 0x20;
1EF0 75A720    5758            mov     _SFRPAGE,#0x20
1EF3           5759   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:347: while (!RI1);
1EF3           5760   L030001?:
1EF3           5761   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:348: RI1=0;
1EF3 10C8C0    5762            jbc     _RI1,L030008?
1EF6 8001      5763            sjmp    L030001?
1EF8           5764   L030008?:
1EF8           5765   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:350: SCON1&=0b_0011_1111;
1EF8 53C83F    5766            anl     _SCON1,#0x3F
1EFB           5767   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:351: c = SBUF1;
1EFB 859282    5768            mov     dpl,_SBUF1
1EFE           5769   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:352: SFRPAGE = 0x00;
1EFE 75A700    5770            mov     _SFRPAGE,#0x00
1F01           5771   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:353: return (c);
1F01 22        5772            ret
1F02           5773   ;------------------------------------------------------------
1F02           5774   ;Allocation info for local variables in function 'prime_sequence'
1F02           5775   ;------------------------------------------------------------
1F02           5776   ;------------------------------------------------------------
1F02           5777   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:356: void prime_sequence(void)
1F02           5778   ;        -----------------------------------------
1F02           5779   ;         function prime_sequence
1F02           5780   ;        -----------------------------------------
1F02           5781   _prime_sequence:
1F02           5782   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:358: switch(sequence_state){
1F02 904DE8    5783            mov     dptr,#_sequence_state
1F05 E0        5784            movx    a,@dptr
1F06 FA        5785            mov     r2,a
1F07 A3        5786            inc     dptr
1F08 E0        5787            movx    a,@dptr
1F09 FB        5788            mov     r3,a
1F0A C3        5789            clr     c
1F0B 7403      5790            mov     a,#0x03
1F0D 9A        5791            subb    a,r2
1F0E E4        5792            clr     a
1F0F 9B        5793            subb    a,r3
1F10 5001      5794            jnc     L031055?
1F12 020100    5795            ljmp    L031031?
1F15           5796   L031055?:
1F15 EA        5797            mov     a,r2
1F16 2A        5798            add     a,r2
1F17 2A        5799            add     a,r2
1F18 900B80    5800            mov     dptr,#L031056?
1F1B 73        5801            jmp     @a+dptr
1F1C           5802   L031056?:
1F1C 020100    5803            ljmp    L031001?
1F1F 020100    5804            ljmp    L031007?
1F22 020100    5805            ljmp    L031015?
1F25 020100    5806            ljmp    L031023?
1F28           5807   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:359: case 0:
1F28           5808   L031001?:
1F28           5809   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:360: if(open && !close && !boost && !autocar)
1F28 20C8C0    5810            jb      _open,L031057?
1F2B 22        5811            ret
1F2C           5812   L031057?:
1F2C 308800    5813            jnb     _close,L031058?
1F2F 22        5814            ret
1F30           5815   L031058?:
1F30 300840    5816            jnb     _boost,L031059?
1F33 22        5817            ret
1F34           5818   L031059?:
1F34 304880    5819            jnb     _autocar,L031060?
1F37 22        5820            ret
1F38           5821   L031060?:
1F38           5822   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:362: sequence_state = 1;
1F38 904DE8    5823            mov     dptr,#_sequence_state
1F3B 7401      5824            mov     a,#0x01
1F3D F0        5825            movx    @dptr,a
1F3E E4        5826            clr     a
1F3F A3        5827            inc     dptr
1F40 F0        5828            movx    @dptr,a
1F41           5829   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:363: sequence_timer = 0;
1F41 904E28    5830            mov     dptr,#_sequence_timer
1F44 E4        5831            clr     a
1F45 F0        5832            movx    @dptr,a
1F46 A3        5833            inc     dptr
1F47 F0        5834            movx    @dptr,a
1F48           5835   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:364: sequence_timeout = 0;
1F48 C2C8      5836            clr     _sequence_timeout
1F4A           5837   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:366: break;
1F4A           5838   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:367: case 1:
1F4A 22        5839            ret
1F4B           5840   L031007?:
1F4B           5841   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:368: if(!open && close && !boost && !autocar)
1F4B 20C8C0    5842            jb      _open,L031009?
1F4E 3088C0    5843            jnb     _close,L031009?
1F51 2008C0    5844            jb      _boost,L031009?
1F54 2048C0    5845            jb      _autocar,L031009?
1F57           5846   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:369: sequence_state = 2;
1F57 904DE8    5847            mov     dptr,#_sequence_state
1F5A 7402      5848            mov     a,#0x02
1F5C F0        5849            movx    @dptr,a
1F5D E4        5850            clr     a
1F5E A3        5851            inc     dptr
1F5F F0        5852            movx    @dptr,a
1F60           5853   L031009?:
1F60           5854   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:370: if(sequence_timeout) sequence_state = 0;
1F60 30C800    5855            jnb     _sequence_timeout,L031033?
1F63 904DE8    5856            mov     dptr,#_sequence_state
1F66 E4        5857            clr     a
1F67 F0        5858            movx    @dptr,a
1F68 A3        5859            inc     dptr
1F69 F0        5860            movx    @dptr,a
1F6A           5861   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:371: break;
1F6A           5862   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:372: case 2:
1F6A 22        5863            ret
1F6B           5864   L031015?:
1F6B           5865   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:373: if(!open && !close && boost && !autocar)
1F6B 20C840    5866            jb      _open,L031017?
1F6E 208840    5867            jb      _close,L031017?
1F71 300840    5868            jnb     _boost,L031017?
1F74 204840    5869            jb      _autocar,L031017?
1F77           5870   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:374: sequence_state = 3;
1F77 904DE8    5871            mov     dptr,#_sequence_state
1F7A 7403      5872            mov     a,#0x03
1F7C F0        5873            movx    @dptr,a
1F7D E4        5874            clr     a
1F7E A3        5875            inc     dptr
1F7F F0        5876            movx    @dptr,a
1F80           5877   L031017?:
1F80           5878   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:375: if(sequence_timeout) sequence_state = 0;
1F80 30C800    5879            jnb     _sequence_timeout,L031033?
1F83 904DE8    5880            mov     dptr,#_sequence_state
1F86 E4        5881            clr     a
1F87 F0        5882            movx    @dptr,a
1F88 A3        5883            inc     dptr
1F89 F0        5884            movx    @dptr,a
1F8A           5885   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:376: break;
1F8A           5886   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:377: case 3:
1F8A 22        5887            ret
1F8B           5888   L031023?:
1F8B           5889   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:378: if(!open && !close && !boost && autocar)
1F8B 20C880    5890            jb      _open,L031025?
1F8E 208880    5891            jb      _close,L031025?
1F91 200880    5892            jb      _boost,L031025?
1F94 304880    5893            jnb     _autocar,L031025?
1F97           5894   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:380: sequence_state = 0;
1F97 904DE8    5895            mov     dptr,#_sequence_state
1F9A E4        5896            clr     a
1F9B F0        5897            movx    @dptr,a
1F9C A3        5898            inc     dptr
1F9D F0        5899            movx    @dptr,a
1F9E           5900   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:381: prime_awaken = 1;
1F9E D278      5901            setb    _prime_awaken
1FA0           5902   L031025?:
1FA0           5903   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:383: if(sequence_timeout) sequence_state = 0;
1FA0 30C800    5904            jnb     _sequence_timeout,L031033?
1FA3 904DE8    5905            mov     dptr,#_sequence_state
1FA6 E4        5906            clr     a
1FA7 F0        5907            movx    @dptr,a
1FA8 A3        5908            inc     dptr
1FA9 F0        5909            movx    @dptr,a
1FAA           5910   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:384: break;
1FAA           5911   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:385: default:
1FAA 22        5912            ret
1FAB           5913   L031031?:
1FAB           5914   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:386: sequence_state = 0;
1FAB 904DE8    5915            mov     dptr,#_sequence_state
1FAE E4        5916            clr     a
1FAF F0        5917            movx    @dptr,a
1FB0 A3        5918            inc     dptr
1FB1 F0        5919            movx    @dptr,a
1FB2           5920   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:387: }
1FB2           5921   L031033?:
1FB2 22        5922            ret
1FB3           5923   ;------------------------------------------------------------
1FB3           5924   ;Allocation info for local variables in function 'main'
1FB3           5925   ;------------------------------------------------------------
1FB3           5926   ;------------------------------------------------------------
1FB3           5927   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:391: void main (void)
1FB3           5928   ;        -----------------------------------------
1FB3           5929   ;         function main
1FB3           5930   ;        -----------------------------------------
1FB3           5931   _main:
1FB3           5932   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:394: stop();
1FB3 120100    5933            lcall   _stop
1FB6           5934   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:395: autocar = 0;
1FB6 C248      5935            clr     _autocar
1FB8           5936   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:396: sequence_timer = 0;
1FB8 904E28    5937            mov     dptr,#_sequence_timer
1FBB E4        5938            clr     a
1FBC F0        5939            movx    @dptr,a
1FBD A3        5940            inc     dptr
1FBE F0        5941            movx    @dptr,a
1FBF           5942   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:397: sequence_state = 0;
1FBF 904DE8    5943            mov     dptr,#_sequence_state
1FC2 E4        5944            clr     a
1FC3 F0        5945            movx    @dptr,a
1FC4 A3        5946            inc     dptr
1FC5 F0        5947            movx    @dptr,a
1FC6           5948   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:398: sequence_timeout = 1;
1FC6 D2C8      5949            setb    _sequence_timeout
1FC8           5950   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:399: prime_awaken = 0;
1FC8 C278      5951            clr     _prime_awaken
1FCA           5952   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:401: InitPinADC(1, 6); // Configure as analog input    //PR L
1FCA 759006    5953            mov     _InitPinADC_PARM_2,#0x06
1FCD 758201    5954            mov     dpl,#0x01
1FD0 120100    5955            lcall   _InitPinADC
1FD3           5956   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:402: InitPinADC(1, 5); // Configure as analog input    //PR M
1FD3 759005    5957            mov     _InitPinADC_PARM_2,#0x05
1FD6 758201    5958            mov     dpl,#0x01
1FD9 120100    5959            lcall   _InitPinADC
1FDC           5960   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:403: InitPinADC(1, 4); // Configure as analog input    //PR R
1FDC 759004    5961            mov     _InitPinADC_PARM_2,#0x04
1FDF 758201    5962            mov     dpl,#0x01
1FE2 120100    5963            lcall   _InitPinADC
1FE5           5964   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:404: InitPinADC(1, 3); // Configure as analog input    //IR L
1FE5 759003    5965            mov     _InitPinADC_PARM_2,#0x03
1FE8 758201    5966            mov     dpl,#0x01
1FEB 120100    5967            lcall   _InitPinADC
1FEE           5968   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:405: InitPinADC(1, 2); // Configure as analog input    //IR R
1FEE 759002    5969            mov     _InitPinADC_PARM_2,#0x02
1FF1 758201    5970            mov     dpl,#0x01
1FF4 120100    5971            lcall   _InitPinADC
1FF7           5972   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:406: InitADC();
1FF7 120100    5973            lcall   _InitADC
1FFA           5974   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:408: UART1_Init(300);
1FFA 90012C    5975            mov     dptr,#0x012C
1FFD E4        5976            clr     a
1FFE F5F0      5977            mov     b,a
2000 120100    5978            lcall   _UART1_Init
2003           5979   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:412: while(1)
2003           5980   L032007?:
2003           5981   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:415: SFRPAGE = 0x20;
2003 75A720    5982            mov     _SFRPAGE,#0x20
2006           5983   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:416: if(RI1) UART1_RI();
2006 30C800    5984            jnb     _RI1,L032002?
2009 75D018    5985            mov     psw,#0x18
200C 120100    5986            lcall   _UART1_RI
200F 75D000    5987            mov     psw,#0x00
2012           5988   L032002?:
2012           5989   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:417: SFRPAGE = 0x00;
2012 75A700    5990            mov     _SFRPAGE,#0x00
2015           5991   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:419: prime_sequence();
2015 120100    5992            lcall   _prime_sequence
2018           5993   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:421: if(prime_awaken)
2018           5994   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:423: prime_awaken = 0;
2018 107840    5995            jbc     _prime_awaken,L032015?
201B 8001      5996            sjmp    L032004?
201D           5997   L032015?:
201D           5998   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:427: x_absolute = 0;
201D 904BE8    5999            mov     dptr,#_x_absolute
2020 E4        6000            clr     a
2021 F0        6001            movx    @dptr,a
2022 A3        6002            inc     dptr
2023 F0        6003            movx    @dptr,a
2024           6004   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:428: y_absolute = 0;
2024 904BA8    6005            mov     dptr,#_y_absolute
2027 E4        6006            clr     a
2028 F0        6007            movx    @dptr,a
2029 A3        6008            inc     dptr
202A F0        6009            movx    @dptr,a
202B           6010   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:429: open = 0;
202B C2C8      6011            clr     _open
202D           6012   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:430: close = 0;
202D C288      6013            clr     _close
202F           6014   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:432: autonomous_prime();
202F 120100    6015            lcall   _autonomous_prime
2032 8001      6016            sjmp    L032007?
2034           6017   L032004?:
2034           6018   ;        D:\School\Elec 291\Project 2\mcar\main\Robot_integrated.c:435: manual_mode();
2034 120100    6019            lcall   _manual_mode
2037 8001      6020            sjmp    L032007?
2039           6021            rseg R_CSEG
2039           6022   
0000           6023            rseg R_XINIT
0000           6024   __xinit__x_absolute:
0000 0000      6025            db 0x00,0x00    ; 0
0002           6026   __xinit__y_absolute:
0002 0000      6027            db 0x00,0x00    ; 0
0004           6028   __xinit__no_signal_0:
0004 0000      6029            db 0x00,0x00    ; 0
0006           6030   __xinit__no_signal_1:
0006 0000      6031            db 0x00,0x00    ; 0
0008           6032   __xinit__dir_count:
0008 0000      6033            db 0x00,0x00    ;  0
000A           6034   __xinit__timer_count:
000A 0000      6035            db 0x00,0x00    ; 0
000C           6036   __xinit__sonar_count:
000C 0000      6037            db 0x00,0x00    ; 0
000E           6038   __xinit__sonar_count_2:
000E 0000      6039            db 0x00,0x00    ; 0
0010           6040   __xinit__claw_pos:
0010 0200      6041            db 0x02,0x00    ; 2
0012           6042   __xinit__pwm_count:
0012 00        6043            db 0x00         ; 0
0013           6044   
0000           6045            rseg R_CONST
0000           6046   __str_0:
0000 2564      6047            db '%d'
0002 00        6048            db 0x00
0003           6049   __str_1:
0003 0A        6050            db 0x0A
0004 00        6051            db 0x00
0005           6052   
002E           6053            CSEG
002E           6054   
002E           6055   end
